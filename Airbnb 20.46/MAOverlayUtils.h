//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface MAOverlayUtils : NSObject
{
}

+ (void)drawWithAction:(id)arg1 reduceFilter:(CDUnknownBlockType)arg2 clipFilter:(CDUnknownBlockType)arg3 triangulatFilter:(CDUnknownBlockType)arg4 drawFilter:(CDUnknownBlockType)arg5;
+ (void)glesDrawTexturePolygonWith:(struct MAMapPoint *)arg1 pointCount:(unsigned long long)arg2 textureCoords:(struct CGPoint *)arg3 textureId:(unsigned int)arg4 modulateColor:(id)arg5 alpha:(float)arg6 shader:(id)arg7 viewMatrix:(float *)arg8 projectionMatrix:(float *)arg9;
+ (void)glesDrawNormalColorOrTextureLineWith:(vector_0ca85528 *)arg1 glesResProvider:(id)arg2 isTextureLine:(_Bool)arg3 lineWidth:(float)arg4 strokeTextureId:(unsigned int)arg5 strokeColor:(id)arg6 lineDashType:(int)arg7 alpha:(float)arg8 viewMatrix:(float *)arg9 projectionMatrix:(float *)arg10;
+ (void)glesDrawGradientColorLineWith:(vector_3729920e *)arg1 textureId:(unsigned int)arg2 alpha:(float)arg3 shader:(id)arg4 viewMatrix:(float *)arg5 projectionMatrix:(float *)arg6;
+ (void)glesDrawTextureLineWith:(vector_0ca85528 *)arg1 textureArrArr:(id)arg2 alpha:(float)arg3 shader:(id)arg4 viewMatrix:(float *)arg5 projectionMatrix:(float *)arg6;
+ (void)glesDrawNormalColorLineWith:(vector_0ca85528 *)arg1 textureId:(unsigned int)arg2 colorArrArr:(id)arg3 alpha:(float)arg4 shader:(id)arg5 viewMatrix:(float *)arg6 projectionMatrix:(float *)arg7;
+ (void)normalizeDrawStyleArr:(id)arg1 andDrawStyleIndexArr:(id)arg2 resultDrawStyleArr:(id *)arg3 resultDrawStyleIndexArr:(id *)arg4 isGradient:(_Bool)arg5;
+ (void)calcIndexArrsWithOrigDrawStyleArr:(id)arg1 resultDrawStyleIndexArr:(id *)arg2 indexArrAfterReduce:(id)arg3 mergedIndexArr:(id *)arg4;
+ (const struct Drawable *)gradientPolyLineTriangulate:(vector_f60ea51c *)arg1 lineWidth:(float)arg2 textureSize:(struct CGSize)arg3 drawStyleIndexArr:(id)arg4 colorArr:(id)arg5 overlayAlpha:(float)arg6 looped:(_Bool)arg7 lineDashType:(int)arg8 joinType:(int)arg9 capType:(int)arg10 lineBuilder:(struct MALineBuilder *)arg11;
+ (const struct Drawable *)normalPolyLineTriangulate:(vector_f60ea51c *)arg1 lineWidth:(float)arg2 textureSize:(struct CGSize)arg3 drawStyleIndexArr:(id)arg4 drawStyleCount:(int)arg5 looped:(_Bool)arg6 lineDashType:(int)arg7 joinType:(int)arg8 capType:(int)arg9 lineBuilder:(struct MALineBuilder *)arg10;
+ (const vector_8d85e9cb *)polygonTriangulate:(vector_f60ea51c *)arg1 triangulator:(struct MAPolygonTriangulator *)arg2;
+ (_Bool)clipPointsForPolyline:(vector_f60ea51c *)arg1 clipWindow:(struct MAMapRect)arg2 resultPoints:(vector_aac46ba0 *)arg3;
+ (_Bool)clipPointsForPolygon:(vector_f60ea51c *)arg1 clipWindow:(struct MAMapRect)arg2 resultPoints:(vector_aac46ba0 *)arg3 clipper:(struct MAPolygonClipper *)arg4;

@end

