//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface MACommonTool : NSObject
{
}

+ (struct MAMapPoint)pointOnLine:(struct MAMapPoint)arg1 end:(struct MAMapPoint)arg2 atPosition:(double)arg3;
+ (double)getMapPointDistanceFromPoint:(struct MAMapPoint)arg1 toLine:(struct MAMapPoint)arg2 and:(struct MAMapPoint)arg3;
+ (id)generateAllInOneTrafficImageFrom:(id)arg1 withSmoothColor:(id)arg2 slowColor:(id)arg3 jamColor:(id)arg4 seriousColor:(id)arg5 resultImageData:(id *)arg6;
+ (struct CGRect)boundRectForCGPoints:(struct CGPoint *)arg1 count:(int)arg2;
+ (void)reducePoints_vertical:(struct MAMapPoint *)arg1 count:(long long)arg2 threshHold:(float)arg3 resultPoints:(_Bool *)arg4;
+ (void)reducePoints_RDP:(struct MAMapPoint *)arg1 fromIndex:(long long)arg2 toIndex:(long long)arg3 threshHold:(float)arg4 resultPoints:(_Bool *)arg5;
+ (void)reduceCGPoints_fast:(struct CGPoint *)arg1 count:(long long)arg2 threshHold:(float)arg3 resultPoints:(_Bool *)arg4;
+ (void)reducePoints_fast:(struct MAMapPoint *)arg1 count:(long long)arg2 threshHold:(float)arg3 resultPoints:(_Bool *)arg4;
+ (_Bool)isPoint:(struct MAMapPoint)arg1 onLine:(struct MAMapPoint)arg2 end:(struct MAMapPoint)arg3;
+ (_Bool)isLine:(struct MAMapPoint)arg1 line1End:(struct MAMapPoint)arg2 intersectsLine:(struct MAMapPoint)arg3 line2End:(struct MAMapPoint)arg4 outIntersection:(struct MAMapPoint *)arg5;
+ (struct MAMapPoint)getVerticalFootFromPoint:(struct MAMapPoint)arg1 toLine:(struct MAMapPoint)arg2 end:(struct MAMapPoint)arg3;
+ (_Bool)isFiniteLine:(struct MAMapPoint)arg1 line1End:(struct MAMapPoint)arg2 interSectsFiniteLine:(struct MAMapPoint)arg3 line2End:(struct MAMapPoint)arg4;
+ (_Bool)isFiniteLine:(struct MAMapPoint)arg1 p2:(struct MAMapPoint)arg2 interSectsCircle:(id)arg3;
+ (_Bool)arePolygonsEdgeIntersect:(id)arg1 polygon2:(id)arg2;
+ (_Bool)isPolygon:(id)arg1 fullyInsidePolygon:(id)arg2;
+ (_Bool)isPolygon:(id)arg1 fullyInsideCircle:(id)arg2;
+ (_Bool)isCircle:(id)arg1 fullyInsideCircle:(id)arg2;
+ (_Bool)isCircle:(id)arg1 fullyInsidePolygon:(id)arg2;
+ (_Bool)canAddHollowShape:(id)arg1 afterHollowShapes:(id)arg2;
+ (_Bool)isCircle:(id)arg1 intersectsWithCircle:(id)arg2;
+ (_Bool)isPolygon:(id)arg1 intersectsWithPolygon:(id)arg2;
+ (_Bool)isCircle:(id)arg1 intersectsWithPolygon:(id)arg2;
+ (id)encryptedStyleDataWithData:(id)arg1;
+ (id)decryptedStyleDataWithData:(id)arg1;
+ (unsigned int)unsignedIntARGBWithColor:(id)arg1;
+ (double *)ColorGetComponents:(id)arg1;
+ (_Bool)isTilePartlyInland:(struct MATileOverlayPath)arg1;
+ (double)calculateVectorAngle:(struct MAMapPoint)arg1 des:(struct MAMapPoint)arg2;
+ (struct MAMapRect)mapRectForOverlays:(id)arg1;
+ (struct MAMapRect)mapRectForMapPoints:(id)arg1;
+ (struct CGRect)minRectForPoints:(id)arg1;

@end

