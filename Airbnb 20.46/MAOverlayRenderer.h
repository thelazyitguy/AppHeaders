//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MAPointsReduceCache, UIImage;
@protocol MAOverlay, MAOverlayRenderDelegate;

@interface MAOverlayRenderer : NSObject
{
    unsigned int _strokeTextureID;
    struct CGSize _strokeTextureSize;
    _Bool _needsUpdate;
    _Bool _needsLoadStrokeTexture;
    MAPointsReduceCache *_reducedPointsCache;
    CDUnknownBlockType _defReduceFilter;
    CDUnknownBlockType _gradientLineClipFilter;
    CDUnknownBlockType _defLineClipFilter;
    CDUnknownBlockType _defPolygonClipFilter;
    CDUnknownBlockType _defNormalLineTriangulateFilter;
    CDUnknownBlockType _defGradientLineTriangulateFilter;
    CDUnknownBlockType _defPolygonTriangulateFilter;
    CDUnknownBlockType _defColorLineDrawFilter;
    CDUnknownBlockType _defTexturedLineDrawFilter;
    CDUnknownBlockType _defGradientLineDrawFilter;
    CDUnknownBlockType _defColorPolygonDrawFilter;
    CDUnknownBlockType _defTexturedPolygonDrawFilter;
    struct MAMapPoint _mapPointWindow[4];
    struct MALineBuilder {
        CDUnknownFunctionPointerType *;
        float;
        float;
        struct Vector4<float>;
        struct Drawable {
            vector_8d85e9cb;
            struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>>;
        };
        vector_f60ea51c;
        vector_7584168e;
        struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>>;
    } *_gradientLineBuilder;
    struct MALineBuilder {
        CDUnknownFunctionPointerType *;
        float;
        float;
        struct Drawable {
            vector_8d85e9cb;
            struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>>;
            vector_8d85e9cb;
            vector_8d85e9cb;
        };
        vector_f60ea51c;
        vector_7584168e;
    } *_normalLineBuilder;
    struct MAPolygonClipper *_polygonClipper;
    struct MAPolygonTriangulator *_polygonTriangulator;
    _Bool _showsBoundingMapRect;
    _Bool _isLineLooped;
    id <MAOverlayRenderDelegate> _rendererDelegate;
    id <MAOverlay> _overlay;
    UIImage *_strokeImage;
    double _alpha;
    UIImage *_textureImage;
}

@property(nonatomic) _Bool isLineLooped; // @synthesize isLineLooped=_isLineLooped;
@property(nonatomic) _Bool showsBoundingMapRect; // @synthesize showsBoundingMapRect=_showsBoundingMapRect;
@property(retain, nonatomic) UIImage *textureImage; // @synthesize textureImage=_textureImage;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(readonly, nonatomic) unsigned int strokeTextureID; // @synthesize strokeTextureID=_strokeTextureID;
@property(retain, nonatomic) UIImage *strokeImage; // @synthesize strokeImage=_strokeImage;
@property(retain, nonatomic) id <MAOverlay> overlay; // @synthesize overlay=_overlay;
@property(nonatomic) __weak id <MAOverlayRenderDelegate> rendererDelegate; // @synthesize rendererDelegate=_rendererDelegate;
- (void).cxx_destruct;
- (void)doRenderStrokedRegionWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 fillColor:(id)arg3 strokeColor:(id)arg4 strokeLineWidth:(double)arg5 strokeLineJoinType:(int)arg6 strokeLineDash:(int)arg7 usingTriangleFan:(_Bool)arg8;
- (void)doRenderTexture:(unsigned int)arg1 points:(struct MAMapPoint *)arg2 pointCount:(unsigned long long)arg3 modulateColor:(id)arg4;
- (void)doReleaseGLResource;
- (void)willRemove;
@property(readonly, nonatomic) void *polygonTriangulator;
@property(readonly, nonatomic) void *polygonClipper;
@property(readonly, nonatomic) void *gradientLineBuilder;
@property(readonly, nonatomic) void *normalLineBuilder;
- (struct MAMapRect)clipMapRect;
- (void)clearTextures;
- (void)MAOverlayRendererDeallocOperation;
- (void)dealloc;
- (id)initWithOverlay:(id)arg1;
- (void)overlayPointsDidUpdated;
- (void)onPointsUpdatedNotification:(id)arg1;
- (void)onUpdateNotification:(id)arg1;
- (void)setNeedsUpdate;
- (void)glRender;
- (void)renderBorderOfMapRect:(struct MAMapRect)arg1;
- (void)renderBorderOfClipMapRect;
- (void)renderBoundingMapRect;
- (void)renderIconWithTextureID:(unsigned int)arg1 points:(struct CGPoint *)arg2 modulateColor:(id)arg3;
- (void)renderIconWithTextureID:(unsigned int)arg1 points:(struct CGPoint *)arg2;
- (void)renderStrokedRegionWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 fillColor:(id)arg3 strokeColor:(id)arg4 strokeLineWidth:(double)arg5 strokeLineJoinType:(int)arg6 strokeLineDash:(int)arg7 usingTriangleFan:(_Bool)arg8;
- (void)renderTextureStrokedRegionWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 fillColor:(id)arg3 strokeTineWidth:(double)arg4 strokeTextureID:(unsigned int)arg5 usingTriangleFan:(_Bool)arg6;
- (void)renderRegionWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 fillColor:(id)arg3 usingTriangleFan:(_Bool)arg4;
- (void)deleteTexture:(unsigned int)arg1;
- (unsigned int)loadTexture:(id)arg1;
- (void)doLoadStrokeTexture;
- (unsigned int)loadStrokeTextureImage:(id)arg1;
- (void)renderTexturedLinesWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 lineWidth:(double)arg3 textureIDs:(id)arg4 drawStyleIndexes:(id)arg5 looped:(_Bool)arg6;
- (void)renderTexturedLinesWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 lineWidth:(double)arg3 textureID:(unsigned int)arg4 looped:(_Bool)arg5;
- (void)renderLinesWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 strokeColors:(id)arg3 drawStyleIndexes:(id)arg4 isGradient:(_Bool)arg5 lineWidth:(double)arg6 looped:(_Bool)arg7 LineJoinType:(int)arg8 LineCapType:(int)arg9 lineDash:(int)arg10;
- (void)renderLinesWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 strokeColor:(id)arg3 lineWidth:(double)arg4 looped:(_Bool)arg5 LineJoinType:(int)arg6 LineCapType:(int)arg7 lineDash:(int)arg8;
- (void)renderLinesWithPoints:(struct CGPoint *)arg1 pointCount:(unsigned long long)arg2 strokeColor:(id)arg3 lineWidth:(double)arg4 looped:(_Bool)arg5;
- (double)glWidthForWindowWidth:(double)arg1;
- (struct CGPoint *)glPointsForMapPoints:(struct MAMapPoint *)arg1 count:(unsigned long long)arg2;
- (struct CGPoint)glPointForMapPoint:(struct MAMapPoint)arg1;
- (void)updateMapPointWindow;
- (void)updateGlWindow;
- (double)getMapZoomLevel;
- (struct MAMapPoint)getOffsetPoint;
- (float *)getProjectionMatrix;
- (float *)getViewMatrix;
@property(readonly, nonatomic) double contentScale;
@property(readonly, nonatomic) CDUnknownBlockType defTexturedPolygonDrawFilter;
@property(readonly, nonatomic) CDUnknownBlockType defColorPolygonDrawFilter;
@property(readonly, nonatomic) CDUnknownBlockType defGradientLineDrawFilter;
@property(readonly, nonatomic) CDUnknownBlockType defTexturedLineDrawFilter;
@property(readonly, nonatomic) CDUnknownBlockType defColorLineDrawFilter;
@property(readonly, nonatomic) CDUnknownBlockType defPolygonTriangulateFilter;
@property(readonly, nonatomic) CDUnknownBlockType defGradientLineTriangulateFilter;
@property(readonly, nonatomic) CDUnknownBlockType defNormalLineTriangulateFilter;
@property(readonly, nonatomic) CDUnknownBlockType defPolygonClipFilter;
@property(readonly, nonatomic) CDUnknownBlockType gradientLineClipFilter;
@property(readonly, nonatomic) CDUnknownBlockType defLineClipFilter;
@property(readonly, nonatomic) CDUnknownBlockType defReduceFilter;

@end

