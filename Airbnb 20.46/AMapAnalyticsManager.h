//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AMapCacheFileManager, NSArray, NSMutableDictionary;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface AMapAnalyticsManager : NSObject
{
    NSObject<OS_dispatch_queue> *_logDispatchQueue;
    NSObject<OS_dispatch_queue> *_uploadDispatchQueue;
    NSMutableDictionary *_componentMapping;
    NSMutableDictionary *_regularExpressionMapping;
    NSMutableDictionary *_logServerStateException;
    NSMutableDictionary *_logServerStateCommon;
    AMapCacheFileManager *_fileManager;
    NSObject<OS_dispatch_group> *_group;
    _Bool _logEnabled;
    _Bool _upLoading;
    NSArray *_waitingUploadDirectorys;
    NSMutableDictionary *_cacheDataPool;
    long long _currentCacheSize;
}

+ (id)errorWithURLError:(id)arg1;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property long long currentCacheSize; // @synthesize currentCacheSize=_currentCacheSize;
@property(retain, nonatomic) NSMutableDictionary *cacheDataPool; // @synthesize cacheDataPool=_cacheDataPool;
@property(getter=isUpLoading) _Bool upLoading; // @synthesize upLoading=_upLoading;
@property(retain, nonatomic) NSArray *waitingUploadDirectorys; // @synthesize waitingUploadDirectorys=_waitingUploadDirectorys;
@property(nonatomic, getter=isLogEnabled) _Bool logEnabled; // @synthesize logEnabled=_logEnabled;
- (_Bool)isUploadSucceededWithResponseData:(id)arg1;
- (_Bool)canAppendLogDataWithLength:(unsigned long long)arg1 queueLength:(unsigned long long)arg2;
- (id)nameWithLogType:(long long)arg1;
- (void)logsWithType:(long long)arg1 subDirectoryName:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)logsWithType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)crashComponentWithCrashInfo:(id)arg1;
- (_Bool)isLogServerEnableWithComponent:(id)arg1 type:(long long)arg2;
- (void)saveEventStateWithFlag:(_Bool)arg1 component:(id)arg2;
- (void)saveExceptionStateWithFlag:(_Bool)arg1 component:(id)arg2;
- (void)reportCrash:(id)arg1 withName:(id)arg2 withComponent:(id)arg3;
- (void)saveLogServerStateWithResponseData:(id)arg1 component:(id)arg2;
- (void)requestManifestWithComponent:(id)arg1;
- (void)registerProductCrashInfoFilterWithComponent:(id)arg1 forKey:(id)arg2;
- (id)uploadDataWithType:(long long)arg1 logArray:(id)arg2;
- (void)uploadLogWithType:(long long)arg1 component:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)uploadLogWithType:(long long)arg1;
- (void)uploadLogWithType:(long long)arg1 subDirectoryName:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)logCrash:(id)arg1 crashInfo:(id)arg2 component:(id)arg3;
- (void)logRESTError:(id)arg1 forURL:(id)arg2 component:(id)arg3;
- (void)logURLError:(id)arg1 forURL:(id)arg2 component:(id)arg3;
- (void)logError:(id)arg1 errorInfo:(id)arg2 component:(id)arg3;
- (void)logEvent:(id)arg1 params:(id)arg2 component:(id)arg3 customFileName:(id)arg4;
- (void)logEvent:(id)arg1 params:(id)arg2 component:(id)arg3;
- (unsigned long long)getCacheItemCountWithLogType:(long long)arg1 component:(id)arg2;
- (id)getCacheItemDataWithLogType:(long long)arg1 component:(id)arg2 fileName:(id)arg3;
- (void)clearFileOrDirectoryWithPath:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)removeLogWithType:(long long)arg1 component:(id)arg2 fileName:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)clearLogsWithType:(long long)arg1 subDirectoryName:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)clearAllLogsComplete:(CDUnknownBlockType)arg1;
- (void)clearLogsWithType:(long long)arg1 component:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)clearLogWithType:(long long)arg1 complete:(CDUnknownBlockType)arg2;
- (void)registerProductWithComponentWithoutManifestRequest:(id)arg1;
- (void)registerProductWithComponent:(id)arg1;
- (void)writToFileFromMemoryDataFileName:(id)arg1;
- (void)writToFileFromMemory;
- (void)syncWritToFileFromMemory;
- (void)appDidEnterBackground;
- (void)appWillTerminte;
- (id)init;

@end

