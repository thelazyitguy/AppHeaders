//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BTUIThemedView.h"

#import "BTUITextFieldEditDelegate-Protocol.h"
#import "UIKeyInput-Protocol.h"
#import "UITextFieldDelegate-Protocol.h"

@class BTUIFloatLabel, BTUITextField, NSMutableArray, NSString, UITextInputPasswordRules, UIView;
@protocol BTUIFormFieldDelegate;

@interface BTUIFormField : BTUIThemedView <BTUITextFieldEditDelegate, UITextFieldDelegate, UIKeyInput>
{
    _Bool _vibrateOnInvalidInput;
    _Bool _displayAsValid;
    _Bool _bottomBorder;
    _Bool _backspace;
    id <BTUIFormFieldDelegate> _delegate;
    BTUIFloatLabel *_floatLabel;
    NSString *_previousTextFieldText;
    NSMutableArray *_layoutConstraints;
    BTUITextField *_textField;
    UIView *_accessoryView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIView *accessoryView; // @synthesize accessoryView=_accessoryView;
@property(readonly, nonatomic) BTUITextField *textField; // @synthesize textField=_textField;
@property(retain, nonatomic) NSMutableArray *layoutConstraints; // @synthesize layoutConstraints=_layoutConstraints;
@property(copy, nonatomic) NSString *previousTextFieldText; // @synthesize previousTextFieldText=_previousTextFieldText;
@property(retain, nonatomic) BTUIFloatLabel *floatLabel; // @synthesize floatLabel=_floatLabel;
@property(nonatomic) _Bool backspace; // @synthesize backspace=_backspace;
@property(nonatomic) _Bool bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(nonatomic) _Bool displayAsValid; // @synthesize displayAsValid=_displayAsValid;
@property(nonatomic) _Bool vibrateOnInvalidInput; // @synthesize vibrateOnInvalidInput=_vibrateOnInvalidInput;
@property(nonatomic) __weak id <BTUIFormFieldDelegate> delegate; // @synthesize delegate=_delegate;
- (id)addInvalidAccessibilityToString:(id)arg1;
- (id)stripInvalidAccessibilityFromString:(id)arg1;
@property(readonly, nonatomic) _Bool hasText;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (void)tappedField;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)editingDidEnd;
- (void)editingDidBegin;
- (void)fieldContentDidChange;
@property(copy, nonatomic) NSString *text;
- (void)setAccessoryHighlighted:(_Bool)arg1;
- (void)textField:(id)arg1 didInsertText:(id)arg2;
- (void)textField:(id)arg1 willInsertText:(id)arg2;
- (void)textFieldDidDeleteBackward:(id)arg1 originalText:(id)arg2;
- (void)textFieldWillDeleteBackward:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)tintColorDidChange;
- (void)updateFloatLabelTextColor;
- (void)didDeleteBackward;
- (void)updateConstraints;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateAppearance;
- (void)setThemedAttributedPlaceholder:(id)arg1;
- (void)setThemedPlaceholder:(id)arg1;
- (void)setTheme:(id)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
@property(readonly, nonatomic) _Bool entryComplete;
@property(readonly, nonatomic) _Bool valid;
- (void)dealloc;
- (void)orientationChange;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType;

@end

