//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseViewController.h"

#import "ASCollectionDelegate-Protocol.h"
#import "ListingStateControllerDelegate-Protocol.h"
#import "PostCollectionGalleryPostNodeDelegate-Protocol.h"
#import "PostCollectionNodeDelegate-Protocol.h"
#import "PostCollectionPresentable-Protocol.h"
#import "_TtP18AnalyticsFramework26AnalyticsScreenViewContext_-Protocol.h"

@class ASCollectionNode, AnalyticsEvent, BaseView, ListingStateController, NSString, NSTimer, NSURL, PostCollectionChildViewControllerCoordinator, PostCollectionNavigator, PostCollectionPresenter, PostCollectionViewControllerDataSource, PostDetailViewController, UIBarButtonItem, UICollectionView;
@protocol _TtP18AnalyticsFramework15AnalyticsLogger_;

@interface PostCollectionViewController : BaseViewController <ASCollectionDelegate, PostCollectionNodeDelegate, ListingStateControllerDelegate, PostCollectionGalleryPostNodeDelegate, _TtP18AnalyticsFramework26AnalyticsScreenViewContext_, PostCollectionPresentable>
{
    NSString *_analyticsReason;
    NSURL *_analyticsReferringURL;
    ASCollectionNode *_feedCollectionNode;
    UICollectionView *_feedCollectionView;
    UIBarButtonItem *_followButton;
    UIBarButtonItem *_unFollowButton;
    PostCollectionPresenter *_presenter;
    PostCollectionViewControllerDataSource *_dataSource;
    PostDetailViewController *_postDetailViewController;
    double _topGap;
    NSTimer *_timer;
    PostCollectionChildViewControllerCoordinator *_childViewControllerCoordinator;
    BaseView *_backgroundView;
    ListingStateController *_listingStateController;
    PostCollectionNavigator *_navigator;
    struct CGPoint _previousScrollPosition;
}

+ (id)postCollectionViewControllerWithAccountContext:(id)arg1 postCollection:(id)arg2 post:(id)arg3 options:(id)arg4;
+ (id)postCollectionViewControllerWithAccountContext:(id)arg1 postCollectionURL:(id)arg2 options:(id)arg3;
+ (id)postCollectionViewControllerWithAccountContext:(id)arg1 postCollectionId:(id)arg2 post:(id)arg3 options:(id)arg4;
- (void).cxx_destruct;
@property(nonatomic) struct CGPoint previousScrollPosition; // @synthesize previousScrollPosition=_previousScrollPosition;
@property(retain, nonatomic) PostCollectionNavigator *navigator; // @synthesize navigator=_navigator;
@property(retain, nonatomic) ListingStateController *listingStateController; // @synthesize listingStateController=_listingStateController;
@property(retain, nonatomic) BaseView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) PostCollectionChildViewControllerCoordinator *childViewControllerCoordinator; // @synthesize childViewControllerCoordinator=_childViewControllerCoordinator;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) double topGap; // @synthesize topGap=_topGap;
@property(retain, nonatomic) PostDetailViewController *postDetailViewController; // @synthesize postDetailViewController=_postDetailViewController;
@property(retain, nonatomic) PostCollectionViewControllerDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) PostCollectionPresenter *presenter; // @synthesize presenter=_presenter;
@property(retain, nonatomic) UIBarButtonItem *unFollowButton; // @synthesize unFollowButton=_unFollowButton;
@property(retain, nonatomic) UIBarButtonItem *followButton; // @synthesize followButton=_followButton;
@property(retain, nonatomic) UICollectionView *feedCollectionView; // @synthesize feedCollectionView=_feedCollectionView;
@property(retain, nonatomic) ASCollectionNode *feedCollectionNode; // @synthesize feedCollectionNode=_feedCollectionNode;
@property(copy, nonatomic) NSURL *analyticsReferringURL; // @synthesize analyticsReferringURL=_analyticsReferringURL;
@property(copy, nonatomic) NSString *analyticsReason; // @synthesize analyticsReason=_analyticsReason;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollToPost:(id)arg1;
- (void)navigateToChatPost:(id)arg1;
- (void)postCollectionGalleryPostNode:(id)arg1 didTapImage:(id)arg2;
- (void)listingStateController:(id)arg1 didTapLoadingSpinner:(id)arg2;
- (void)listingStateController:(id)arg1 didPullToRefresh:(id)arg2;
- (void)configureNavigationBarAppearance;
@property(readonly, nonatomic) id <_TtP18AnalyticsFramework15AnalyticsLogger_> analyticsLogger;
@property(readonly, nonatomic) AnalyticsEvent *screenViewEvent;
@property(readonly, copy, nonatomic) NSString *analyticsScreenViewName;
@property(readonly, copy, nonatomic) NSString *analyticsPageType;
- (void)postCollectionHeaderNodeDidTapSubreddit:(id)arg1;
- (void)postCollectionTitleNode:(id)arg1 didTapPostCollection:(id)arg2;
- (void)calculateTopGap;
- (void)constructPostDetailViewControllerWithPost:(id)arg1;
- (void)embedPostDetailWithPost:(id)arg1;
- (void)collectionNode:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (CDStruct_90e057aa)collectionNode:(id)arg1 sizeRangeForHeaderInSection:(long long)arg2;
- (CDStruct_90e057aa)collectionNode:(id)arg1 constrainedSizeForItemAtIndexPath:(id)arg2;
- (void)updateFollowButton;
- (void)followPost;
- (void)createUnfollowButton;
- (void)createFollowButton;
- (void)addCollectionView;
- (void)presenter:(id)arg1 didFailedToUnfollowPost:(id)arg2 error:(id)arg3;
- (void)presenter:(id)arg1 didUnfollowPost:(id)arg2;
- (void)presenter:(id)arg1 didFailedToFollowPost:(id)arg2 error:(id)arg3;
- (void)presenter:(id)arg1 didFollowPost:(id)arg2;
- (void)presenterWillStartFetchingPosts:(id)arg1;
- (void)presenter:(id)arg1 didFailWithError:(id)arg2;
- (void)presenter:(id)arg1 didFetchCollection:(id)arg2;
- (void)startTimer;
- (void)addBackgroundView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithPresenter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

