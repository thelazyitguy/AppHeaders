//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MetaCommunityManager, RedditService, Subreddit, TimeoutExpirationCache;
@protocol OS_dispatch_queue;

@interface MetaBadgeManager : NSObject
{
    RedditService *_redditService;
    MetaCommunityManager *_metaCommunityService;
    Subreddit *_subreddit;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _batchSize;
    TimeoutExpirationCache *_cache;
}

- (void).cxx_destruct;
@property(retain, nonatomic) TimeoutExpirationCache *cache; // @synthesize cache=_cache;
@property(nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) Subreddit *subreddit; // @synthesize subreddit=_subreddit;
@property(nonatomic) __weak MetaCommunityManager *metaCommunityService; // @synthesize metaCommunityService=_metaCommunityService;
@property(nonatomic) __weak RedditService *redditService; // @synthesize redditService=_redditService;
- (void)didFetchUncachedBadgesForUserPKs:(id)arg1 badges:(id)arg2 error:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchUncachedBadgesForUserPKs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)cachedBadgesForUserPKs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performFetchBadgesForUserPKs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)verifySubredditEnabledAndPerform:(CDUnknownBlockType)arg1;
- (void)invalidateBadgesForUserPK:(id)arg1;
- (void)fetchBadgesForUserPKs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchBadgesForUserPK:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithSubreddit:(id)arg1 redditService:(id)arg2 metaCommunityService:(id)arg3 queue:(id)arg4 batchSize:(unsigned long long)arg5 cacheExpirationTimeout:(double)arg6;
- (id)initWithSubreddit:(id)arg1 redditService:(id)arg2 metaCommunityService:(id)arg3;

@end

