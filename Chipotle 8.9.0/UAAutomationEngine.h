//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSNotificationCenter, NSString, UAAppStateTracker, UAAutomationStore, UADate, UADispatcher, UATimerScheduler, UIApplication;
@protocol UAAutomationEngineDelegate;

@interface UAAutomationEngine : NSObject
{
    _Bool _isStarted;
    _Bool _paused;
    id <UAAutomationEngineDelegate> _delegate;
    UAAutomationStore *_automationStore;
    UAAppStateTracker *_appStateTracker;
    UATimerScheduler *_timerScheduler;
    UADispatcher *_dispatcher;
    UIApplication *_application;
    NSNotificationCenter *_notificationCenter;
    UADate *_date;
    NSString *_currentScreen;
    NSString *_currentRegion;
    NSMutableArray *_activeTimers;
    unsigned long long _backgroundTaskIdentifier;
    NSMutableDictionary *_stateConditions;
}

+ (void)applyEdits:(id)arg1 toData:(id)arg2;
+ (id)predicateFromData:(id)arg1;
+ (id)delayFromData:(id)arg1;
+ (id)triggersFromData:(id)arg1;
+ (id)automationEngineWithAutomationStore:(id)arg1;
+ (id)automationEngineWithAutomationStore:(id)arg1 appStateTracker:(id)arg2 timerScheduler:(id)arg3 notificationCenter:(id)arg4 dispatcher:(id)arg5 application:(id)arg6 date:(id)arg7;
- (void).cxx_destruct;
@property _Bool paused; // @synthesize paused=_paused;
@property(retain) NSMutableDictionary *stateConditions; // @synthesize stateConditions=_stateConditions;
@property(nonatomic) _Bool isStarted; // @synthesize isStarted=_isStarted;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain, nonatomic) NSMutableArray *activeTimers; // @synthesize activeTimers=_activeTimers;
@property(copy, nonatomic) NSString *currentRegion; // @synthesize currentRegion=_currentRegion;
@property(copy, nonatomic) NSString *currentScreen; // @synthesize currentScreen=_currentScreen;
@property(retain, nonatomic) UADate *date; // @synthesize date=_date;
@property(retain) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain) UIApplication *application; // @synthesize application=_application;
@property(retain) UADispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) UATimerScheduler *timerScheduler; // @synthesize timerScheduler=_timerScheduler;
@property(retain, nonatomic) UAAppStateTracker *appStateTracker; // @synthesize appStateTracker=_appStateTracker;
@property(retain, nonatomic) UAAutomationStore *automationStore; // @synthesize automationStore=_automationStore;
@property(nonatomic) __weak id <UAAutomationEngineDelegate> delegate; // @synthesize delegate=_delegate;
- (id)scheduleFromData:(id)arg1;
- (void)endBackgroundTask;
- (void)notifyDelegateOnScheduleLimitReached:(id)arg1;
- (void)notifyDelegateOnScheduleCancelled:(id)arg1;
- (void)notifyDelegateOnScheduleExpired:(id)arg1;
- (void)scheduleFinishedExecuting:(id)arg1;
- (void)finishSchedule:(id)arg1;
- (void)handleExpiredScheduleData:(id)arg1;
- (void)attemptExecution:(id)arg1;
- (void)prepareScheduleWithIdentifier:(id)arg1;
- (void)prepareSchedules:(id)arg1;
- (void)processTriggeredSchedules:(id)arg1;
- (_Bool)isScheduleConditionsSatisfied:(id)arg1;
- (void)scheduleConditionsChanged;
- (void)checkCompoundTriggerState:(id)arg1 forStateNewerThanDate:(id)arg2;
- (void)checkCompoundTriggerState:(id)arg1;
- (void)restoreCompoundTriggers;
- (void)createStateConditions;
- (void)resetExecutingSchedules;
- (void)rescheduleTimers;
- (void)cancelTimers;
- (void)cancelTimersWithGroup:(id)arg1;
- (void)cancelTimersWithIdentifiers:(id)arg1;
- (void)intervalTimerFired:(id)arg1;
- (void)delayTimerFired:(id)arg1;
- (void)finishTimer:(id)arg1;
- (void)startTimerForSchedule:(id)arg1 timeInterval:(double)arg2 selector:(SEL)arg3;
- (void)updateTriggersWithType:(long long)arg1 argument:(id)arg2 incrementAmount:(double)arg3;
- (void)updateTriggersWithScheduleID:(id)arg1 type:(long long)arg2 argument:(id)arg3 incrementAmount:(double)arg4;
- (id)sortedSchedulesByPriority:(id)arg1;
- (id)sortedScheduleDataByPriority:(id)arg1;
- (void)screenTracked:(id)arg1;
- (void)regionEventAdded:(id)arg1;
- (void)customEventAdded:(id)arg1;
- (void)applicationDidTransitionToBackground;
- (void)applicationDidTransitionToForeground;
- (void)cleanSchedules;
@property(readonly, nonatomic) _Bool isForegrounded;
- (void)editScheduleWithID:(id)arg1 edits:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getSchedulesWithGroup:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getAllSchedules:(CDUnknownBlockType)arg1;
- (void)getSchedules:(CDUnknownBlockType)arg1;
- (void)getScheduleWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelSchedulesWithGroup:(id)arg1;
- (void)cancelSchedulesWithGroup:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelAll;
- (void)cancelScheduleWithID:(id)arg1;
- (void)cancelScheduleWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)scheduleMultiple:(id)arg1 metadata:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)schedule:(id)arg1 metadata:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)resume;
- (void)pause;
- (void)stop;
- (void)start;
- (id)initWithAutomationStore:(id)arg1 appStateTracker:(id)arg2 timerScheduler:(id)arg3 notificationCenter:(id)arg4 dispatcher:(id)arg5 application:(id)arg6 date:(id)arg7;
- (void)dealloc;

@end

