//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSString, UAChannelAPIClient, UAChannelRegistrationPayload, UADate, UADispatcher, UAPreferenceDataStore, UIApplication;
@protocol UAChannelRegistrarDelegate;

@interface UAChannelRegistrar : NSObject
{
    _Bool _isRegistrationInProgress;
    id <UAChannelRegistrarDelegate> _delegate;
    UAPreferenceDataStore *_dataStore;
    unsigned long long _registrationBackgroundTask;
    UAChannelAPIClient *_channelAPIClient;
    UADate *_date;
    UADispatcher *_dispatcher;
    UIApplication *_application;
}

+ (id)channelRegistrarWithConfig:(id)arg1 dataStore:(id)arg2 channelID:(id)arg3 channelAPIClient:(id)arg4 date:(id)arg5 dispatcher:(id)arg6 application:(id)arg7;
+ (id)channelRegistrarWithConfig:(id)arg1 dataStore:(id)arg2;
- (void).cxx_destruct;
@property(retain) UIApplication *application; // @synthesize application=_application;
@property(retain) UADispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) UADate *date; // @synthesize date=_date;
@property(retain, nonatomic) UAChannelAPIClient *channelAPIClient; // @synthesize channelAPIClient=_channelAPIClient;
@property(nonatomic) unsigned long long registrationBackgroundTask; // @synthesize registrationBackgroundTask=_registrationBackgroundTask;
@property _Bool isRegistrationInProgress; // @synthesize isRegistrationInProgress=_isRegistrationInProgress;
@property(retain, nonatomic) UAPreferenceDataStore *dataStore; // @synthesize dataStore=_dataStore;
@property(nonatomic) __weak id <UAChannelRegistrarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDate *lastSuccessfulUpdateDate;
@property(retain, nonatomic) UAChannelRegistrationPayload *lastSuccessfulPayload;
@property(copy, nonatomic) NSString *channelID;
- (void)succeededWithPayload:(id)arg1;
- (void)failedWithPayload:(id)arg1;
- (void)createChannelWithPayload:(id)arg1;
- (void)updateChannelWithPayload:(id)arg1;
- (void)endRegistrationBackgroundTask;
- (_Bool)beginRegistrationBackgroundTask;
- (_Bool)shouldUpdateRegistration:(id)arg1;
- (void)resetChannel;
- (void)cancelAllRequests;
- (void)registerForcefully:(_Bool)arg1;
- (id)initWithDataStore:(id)arg1 channelAPIClient:(id)arg2 date:(id)arg3 dispatcher:(id)arg4 application:(id)arg5;

@end

