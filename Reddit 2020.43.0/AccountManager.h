//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class Account, NSArray, NSURL, NSURLSession, NSUserDefaults, RedditService;

@interface AccountManager : NSObject
{
    RedditService *_currentService;
    NSArray *_services;
    NSURLSession *_session;
    NSUserDefaults *_defaults;
    NSURL *_accountsDirectory;
    NSURL *_dataDirectory;
}

+ (void)saveAccount:(id)arg1 inDirectoryAtURL:(id)arg2;
+ (id)loadAccountsFromDirectory:(id)arg1;
+ (id)defaultAccountsDirectory;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURL *dataDirectory; // @synthesize dataDirectory=_dataDirectory;
@property(readonly, nonatomic) NSURL *accountsDirectory; // @synthesize accountsDirectory=_accountsDirectory;
@property(readonly, nonatomic) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(copy, nonatomic) NSArray *services; // @synthesize services=_services;
@property(retain, nonatomic) RedditService *currentService; // @synthesize currentService=_currentService;
- (id)sessionCookieFromResponse:(id)arg1;
- (void)addAdditionalHeadersToRequest:(id)arg1;
- (_Bool)isPOSIXError:(id)arg1 withCode:(long long)arg2;
- (_Bool)isURLError:(id)arg1 withCode:(long long)arg2;
- (id)generateHMACForInput:(id)arg1 epochTime:(unsigned long long)arg2;
- (void)addSignedResultHMACHeader:(id)arg1;
- (void)addSignedBodyHMACHeader:(id)arg1;
- (void)getAllAuthTokensWithCompletion:(CDUnknownBlockType)arg1;
- (void)verifyEmailWithCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)linkableAccountsFromData:(id)arg1;
- (id)errorWithCode:(long long)arg1 underlyingError:(id)arg2 data:(id)arg3 response:(id)arg4 apiErrors:(id)arg5;
- (void)notifyRequestError:(id)arg1 response:(id)arg2 duration:(double)arg3;
- (void)logoutAccount:(id)arg1 deletingAccountData:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchAccountDuringLoginWithTokenPayload:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getAccessTokenForCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getCodeWithSessionCookie:(id)arg1 modhash:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)singleSignOnWithIdentityToken:(id)arg1 username:(id)arg2 shouldGenerateUser:(_Bool)arg3 emailPermission:(id)arg4 shouldCheckExistingAccounts:(_Bool)arg5 linkableAccount:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)signUpWithUsername:(id)arg1 password:(id)arg2 email:(id)arg3 emailPermission:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)loginWithUsername:(id)arg1 password:(id)arg2 twoFactorAuthCode:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)removeAccount:(id)arg1 deletingAccountData:(_Bool)arg2;
- (void)saveAccount:(id)arg1;
- (void)removeAnonymousService:(id)arg1;
- (void)switchToAnonymousAccountWithService:(id)arg1;
- (id)createAnonymousService;
- (void)handleAccountUpdated:(id)arg1;
- (id)serviceForAccountPk:(id)arg1;
- (id)serviceForAccount:(id)arg1;
- (id)accountForPk:(id)arg1;
- (void)addService:(id)arg1;
- (void)switchToService:(id)arg1;
- (void)switchToLoggedOutAccount;
@property(readonly, nonatomic) Account *currentAccount;
@property(readonly, nonatomic) Account *loggedOutAccount;
@property(readonly, nonatomic) RedditService *loggedOutService;
@property(readonly, nonatomic) NSArray *loggedInAccounts;
@property(readonly, nonatomic) NSArray *accounts;
- (id)initWithAccountsDirectory:(id)arg1 dataDirectory:(id)arg2 userDefaults:(id)arg3 services:(id)arg4 currentService:(id)arg5;
- (id)initWithAccountsDirectory:(id)arg1 dataDirectory:(id)arg2 userDefaults:(id)arg3;
- (id)init;

@end

