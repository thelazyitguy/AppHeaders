//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <RedditCore/Post.h>

#import "IGListDiffable-Protocol.h"
#import "_TtP11RedditVideo17VideoIdentifiable_-Protocol.h"

@class NSAttributedString, NSString, NSURL;

@interface Post (AttributedStrings) <IGListDiffable, _TtP11RedditVideo17VideoIdentifiable_>
- (id)previewTextWithTheme:(id)arg1;
- (id)cardIndicatorStringUsingBase:(id)arg1 theme:(id)arg2;
- (id)commentsStringWithParagraphStyle:(id)arg1 theme:(id)arg2;
- (id)compactIndicatorStringUsingBase:(id)arg1 theme:(id)arg2;
@property(readonly, copy, nonatomic) NSAttributedString *previewFeedPostTextString;
@property(readonly, copy, nonatomic) NSAttributedString *postDetailTextString;
@property(readonly, copy, nonatomic) NSAttributedString *feedPostTextStringCompact;
@property(readonly, copy, nonatomic) NSAttributedString *feedPostTitleString;
- (id)baseIndicatorString;
@property(readonly, nonatomic) NSString *videoId;
@property(readonly, nonatomic) NSURL *downloadableMP4URL;
@property(readonly, nonatomic) _Bool isRedditVideoStream;
@property(readonly, nonatomic) Post *originalPost;
@property(readonly, nonatomic) NSString *shortDomain;
- (id)postTimeString;
- (id)authorString;
- (_Bool)isGalleryPresentable;
- (id)commentsString;
- (id)pointsString;
- (id)pointsAndCommentsString;
- (id)indicatorsTextWithAttributes:(id)arg1;
- (id)indicators;
- (void)appendTitleIcons:(id)arg1 subredditSupporter:(id)arg2 options:(id)arg3;
- (id)authorUsernameTitleColorWithAdditionalAttributes:(id)arg1;
- (void)appendUserName:(id)arg1 options:(id)arg2 additionalAttributes:(id)arg3;
- (void)appendUserName:(id)arg1 options:(id)arg2;
- (id)compactHeaderStringWithOptions:(id)arg1 metaSubredditPointBalance:(id)arg2 metaUsernameDecoration:(id)arg3 subredditSupporter:(id)arg4 imagesLoaded:(CDUnknownBlockType)arg5;
- (id)compactHeaderStringWithOptions:(id)arg1;
- (id)crossPostFooterString;
- (id)crossPostHeaderString;
- (id)previewPostText:(id)arg1;
- (id)compactFeedPostText:(id)arg1;
- (id)feedPostText:(id)arg1;
- (_Bool)shouldDisplayShortDomain;
- (id)headerIconsWithOptions:(id)arg1;
- (id)headerDetailsWithOptions:(id)arg1 metaSubredditPointBalance:(id)arg2 metaUsernameDecoration:(id)arg3 subredditSupporter:(id)arg4 richTextLoader:(id)arg5 imagesLoaded:(CDUnknownBlockType)arg6;
- (id)headerDetailsWithOptions:(id)arg1 richTextLoader:(id)arg2 imagesLoaded:(CDUnknownBlockType)arg3;
- (_Bool)shouldEnableTappableSubredditNameWithTitleOptions:(id)arg1;
- (id)subredditHeaderTitleWithOptions:(id)arg1;
- (id)headerTitleWithOptions:(id)arg1;
- (id)thumbnailURLForFeedWithBlur:(_Bool)arg1;
- (id)thumbnailURLForGalleryItem:(id)arg1 withBlur:(_Bool)arg2;
- (id)thumbnailURLForFeed;
- (struct CGSize)mediaSizeForTargetWidth:(double)arg1;
@property(readonly, nonatomic) _Bool isReplyInFeedSupported;
@property(readonly, nonatomic) NSURL *unavailableVideoURL;
@property(readonly, nonatomic) _Bool isVideoEmbed;
@property(readonly, nonatomic) _Bool hasThumbnailOrMedia;
- (_Bool)hasNsfwContent;
- (_Bool)hasSpoilerContent;
@property(readonly, nonatomic) _Bool isPostedToUsersOwnProfile;
@property(readonly, nonatomic) _Bool isFromProfile;
@property(readonly, nonatomic) _Bool shouldShowAdCallToAction;
@property(readonly, nonatomic) _Bool shouldShowAdMediaContent;
@property(readonly, nonatomic) _Bool shouldHandleAdClick;
- (_Bool)shouldBlurThumbnailWithOptions:(id)arg1;
- (_Bool)shouldShowFullSizeMediaForOptions:(id)arg1;
- (_Bool)shouldHideThumbnailWithOptions:(id)arg1 account:(id)arg2;
- (id)feedPostTextString;
- (_Bool)isEqualToDiffableObject:(id)arg1;
- (id)diffIdentifier;
- (void)duplicatePostsWithService:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)subtopicsFromNewsTopics:(id)arg1;
- (id)newsAttributedTitleFromNewsTopics:(id)arg1;
- (_Bool)canPostInSubreddit:(id)arg1;
- (_Bool)canCrosspostWithAccount:(id)arg1;
@property(nonatomic, readonly) _Bool isGif;
@property(nonatomic, readonly) NSString *videoIdentifier;
@end

