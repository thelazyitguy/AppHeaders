//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TwitterLifecycleTools/NSURLSessionDataDelegate-Protocol.h>
#import <TwitterLifecycleTools/NSURLSessionDownloadDelegate-Protocol.h>

@class NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, NSURLSession, TFSMutableBidirectionalMap, TFSTimer;
@protocol OS_dispatch_queue, TLTBackgroundFetchManagerDelegate;

@interface TLTBackgroundFetchManager : NSObject <NSURLSessionDownloadDelegate, NSURLSessionDataDelegate>
{
    long long _state;
    _Bool _isCompletingBackgroundFetch;
    _Bool _supportsBackgroundFetch;
    _Bool _backgroundSessionWasUsed;
    NSOperationQueue *_sessionQueue;
    NSObject<OS_dispatch_queue> *_transactionQueue;
    NSURLSession *_backgroundSession;
    NSURLSession *_defaultSession;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _backgroundSessionGetTasksMutex;
    NSMutableDictionary *_registeredFetchTasks;
    NSMutableDictionary *_activeFetchTasks;
    NSMutableSet *_generalFetchTaskIdentifiers;
    CDUnknownBlockType _backgroundSessionCompletionHandler;
    CDUnknownBlockType _backgroundFetchCompletionHandler;
    TFSTimer *_backgroundFetchTimeoutTimer;
    double _backgroundFetchStartTime;
    unsigned long long _backgroundFetchResult;
    NSMutableDictionary *_urlSessionTaskResults;
    TFSMutableBidirectionalMap *_allURLSessionTaskIdentifiersToBackgroundFetchTaskIdentifiers;
    TFSMutableBidirectionalMap *_currentURLSessionTaskIdentifiersToBackgroundFetchTaskIdentifiers;
    id <TLTBackgroundFetchManagerDelegate> _delegate;
}

+ (_Bool)isBackgroundFetchSupported;
- (void).cxx_destruct;
@property(nonatomic) __weak id <TLTBackgroundFetchManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_URLSessionDidFinish:(id)arg1 error:(id)arg2;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)_unregisterBackgroundFetchTaskByIdentifier:(id)arg1;
- (void)unregisterBackgroundFetchTaskByIdentifier:(id)arg1;
- (void)unregisterBackgroundFetchTask:(id)arg1;
- (void)registerBackgroundFetchTask:(id)arg1;
- (_Bool)isBackgroundFetchSessionId:(id)arg1;
- (_Bool)handleEventsForBackgroundFetchURLSessionId:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)startBackgroundFetchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)normalURLSession;
- (id)backgroundURLSession;
- (id)_backgroundURLSession;
@property(readonly, nonatomic) long long state;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)forceCompleteBackgroundSession:(long long)arg1;
- (void)finalCompleteBackgroundFetch:(long long)arg1;
- (void)completeBackgroundFetch:(long long)arg1;
- (void)completeBackgroundFetchIfNeeded;
- (void)timeoutBackgroundFetchSessions;
- (void)scheduleTimeout;
- (void)heartbeat;
- (void)startHeartbeatIfNeeded;
- (void)persistKnownIdentifiers;
- (void)completeBackgroundFetchTask:(id)arg1 result:(unsigned long long)arg2;
- (void)startBackgroundFetchTask:(id)arg1;
- (void)cancelSessionTaskWithIdentifier:(id)arg1;
- (void)updateBackgroundTaskResult:(unsigned long long)arg1;
- (_Bool)isRunningBackgroundTasks;
- (void)postBackgroundFetchStateChangedOnBackgroundThread:(long long)arg1;
- (void)postBackgroundFetchStateChanged:(long long)arg1;
- (void)backgroundFetchDidCompleteWithResult:(unsigned long long)arg1 reason:(long long)arg2;
- (void)backgroundFetchWillCompleteWithResult:(unsigned long long)arg1 reason:(long long)arg2;
- (void)backgroundFetchDidBegin;
- (void)backgroundFetchWillBegin;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

