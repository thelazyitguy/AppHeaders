//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <T1Twitter/T1TimelinesFeatureSwitches-Protocol.h>
#import <T1Twitter/TAVTwitterFeatures-Protocol.h>
#import <T1Twitter/TBCTwitterAccount-Protocol.h>
#import <T1Twitter/TFNTwitterAPIConfiguration-Protocol.h>
#import <T1Twitter/TFNTwitterMediaUploadConfigurationDataSource-Protocol.h>
#import <T1Twitter/TFSTwitterAccountContext-Protocol.h>

@class NSArray, NSDate, NSDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, T1AccountNotificationSettingsManager, T1AdaptiveMediaParameters, TBCPeriscopeAccount, TBCPeriscopeAccountManager, TFNDirectMessageService, TFNTwitterAPIConfiguration, TFNTwitterAccountModel, TFNTwitterCachableVideoMonetizationSettings, TFNTwitterCardPersistedStateManager, TFNTwitterCompositionOutboxController, TFNTwitterCompositionPersistenceManager, TFNTwitterDynamicVideoAdManager, TFNTwitterHomeMutingSet, TFNTwitterLoginVerification, TFNTwitterPromotedEventLogger, TFNTwitterScribe, TFNTwitterScribeFlush, TFNTwitterScribeImpressionLogger, TFNTwitterSearchTypeaheadStore, TFNTwitterSettings, TFNTwitterTeams, TFNTwitterTimelineManager, TFNTwitterUser, TFNTwitterUserDataSource, TFSModelContext, TFSTwitterAPICommandService, TFSTwitterAccountUserDetails, TFSTwitterFeatureAccountScopedData, TFSTwitterUserReference;
@protocol OS_dispatch_queue, T1CardViewRegistry, TFNTwitterAccountPushSettingsManager, TFNTwitterAccountPushSettingsProvider, TFNTwitterAuthenticatedScribeDelegate, TFNTwitterFeatureSwitches, TFNTwitterGeoDataProvider, TFNTwitterPromotableTrend, TFSTwitterAPICommandContext, TFSTwitterCanonicalUser, TFSTwitterLegacyScribeLogMethods, _TtP9T1Twitter24PeopleAddressBookService_;

@interface TFNTwitterAccount : NSObject <T1TimelinesFeatureSwitches, TAVTwitterFeatures, TFNTwitterMediaUploadConfigurationDataSource, TBCTwitterAccount, TFNTwitterAPIConfiguration, TFSTwitterAccountContext>
{
    NSMutableDictionary *_followCountUpdaters;
    NSMutableDictionary *_unfollowCountUpdaters;
    NSMutableArray *_savedSearches;
    NSArray *_sulCategories;
    NSArray *_followerRequests;
    unsigned long long _unreadFollowerRequestsCount;
    NSMutableSet *_followerRequestUserIDs;
    NSArray *_pendingTeamsInvitation;
    _Bool _refreshingFollowerRequests;
    double _lastFollowerRequestListRefresh;
    _Bool _refreshingTeamsInvitation;
    double _lastTeamInvitationtListRefresh;
    id <TFNTwitterFeatureSwitches> _featureSwitches;
    // Error parsing type: {?="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"predicate"{atomic_flag="_Value"AB}}, name: _cardsPersistedStateOnceToken
    TFNTwitterCardPersistedStateManager *_cardPersistedStateManager;
    struct {
        unsigned int staleSavedSearches:1;
        unsigned int loadingSavedSearches:1;
        unsigned int loadingSULCategories:1;
        unsigned int lastGeotaggingState:1;
        unsigned int osNotificationsStateinitialized:1;
    } _flags;
    id _featureSwitchObserver;
    long long _userID;
    NSDate *_freshMentions;
    TFNTwitterTimelineManager *_timelineManager;
    _Bool _hasAccountUser;
    TFNTwitterUserDataSource *_userDataSource;
    TFNTwitterSettings *_settings;
    double _lastSettingsRequestTime;
    NSMutableArray *_settingsResponseBlockQueue;
    TFNTwitterSearchTypeaheadStore *_typeaheadStore;
    TFNTwitterCompositionPersistenceManager *_compositionPersistenceManager;
    _Bool _isActive;
    NSObject<OS_dispatch_queue> *_isActiveQueue;
    _Bool _needToSaveCredentials;
    _Bool _autoRefreshAccountUser;
    TFNTwitterAccountModel *_model;
    NSMapTable *_pendingFavorites;
    NSMapTable *_pendingRetweets;
    _Bool _loadedBasicInfo;
    _Bool _loadedDetailInfo;
    NSMutableSet *_pendingMutedConversations;
    _Bool _allowDeferredPasswordFetch;
    // Error parsing type: {?="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"predicate"{atomic_flag="_Value"AB}}, name: _timelineManagerToken
    _Bool _verified;
    _Bool _scribeShouldSuspend;
    _Bool _needsPhoneVerification;
    _Bool _everTweetedFromThisDevice;
    _Bool _hasAttemptedToSaveWebCredentials;
    _Bool _accountHasBeenRemoved;
    _Bool _composeGeoDefaultTooltipShownInitial;
    _Bool _composeDraftsTooltipHasBeenTapped;
    _Bool _videoCaptureTooltipShownFirstLaunched;
    _Bool _videoCaptureTooltipShownFirstOverrecord;
    _Bool _videoCaptureTooltipShownFirstSegmentPlayed;
    _Bool _videoCaptureTooltipShownFirstSegmentRecorded;
    _Bool _videoCaptureTooltipShownFirstVideoAvailable;
    _Bool _videoDockingDockButtonTooltipShownInitial;
    _Bool _videoDockingSwipeToDismissTooltipShownInitial;
    _Bool _processingBlockedIDs;
    _Bool _migratedOAuthCredentialsToBothKeychainGroups;
    int _backupCodeScreenshots;
    NSString *_accountID;
    NSString *_displayFullName;
    NSString *_displayUsername;
    id <TFNTwitterGeoDataProvider> _geoDataProvider;
    NSString *_oAuthTokenSecret;
    TFNTwitterCompositionOutboxController *_outboxController;
    TFNTwitterDynamicVideoAdManager *_dynamicVideoAdManager;
    TFSTwitterFeatureAccountScopedData *_accountScopedData;
    long long _identityType;
    NSString *_username;
    NSDate *_lastActiveDate;
    long long _lastScribeFlushId;
    NSString *_oAuthToken;
    NSDictionary *_lastSavedMutedKeywordConfiguration;
    id <TFNTwitterAccountPushSettingsProvider> _pushSettingsProvider;
    TFNTwitterLoginVerification *_loginVerification;
    TFNTwitterTeams *_teams;
    NSArray *_contributeeUserIDs;
    NSDate *_lastTweetedFromDevice;
    TFNTwitterAPIConfiguration *_apiConfiguration;
    TFNTwitterScribe<TFNTwitterAuthenticatedScribeDelegate> *_tfnScribe;
    NSString *_fullName;
    unsigned long long _lastReauthSuccessMachTime;
    NSMutableSet *_blockedIDs;
    id <TFNTwitterPromotableTrend> _lastImpressedPromotedTrend;
    NSString *_phoneNumber;
    NSDate *_accountCreationDate;
    NSDate *_credentialsVerificationLastUpdate;
    NSArray *_pickedInterests;
    unsigned long long _composeGeoDefaultTooltipNumberOfTimesShown;
    NSDate *_composeGeoDefaultTooltipLastPresentationTime;
    unsigned long long _composeGeoPhotoTooltipNumberOfTimesShown;
    NSDate *_composeGeoPhotoTooltipLastPresentationTime;
    TBCPeriscopeAccountManager *_periscopeAccountManager;
    NSDate *_lastBlockedIDsCheckDate;
    TFNTwitterPromotedEventLogger *_promotedEventLogger;
    NSDictionary *_timelineManagerDic;
    NSMutableSet *_lastPassBlockedIDs;
    TFNTwitterCachableVideoMonetizationSettings *_cachedMonetizationSettings;
    unsigned long long _oAuthCredentialsKeychainGroupMigrationErrorCount;
    TFNTwitterHomeMutingSet *_homeMutingSet;
    id _vitModeEnabledToken;
    TFNTwitterScribeFlush *_scribeFlush;
    TFSTwitterAccountUserDetails *_accountUserDetails;
    id _accountUserDetailsObserver;
}

+ (unsigned long long)maxPasswordLength;
+ (unsigned long long)minPasswordLength;
+ (unsigned long long)maxUsernameLength;
+ (unsigned long long)maxFullNameLength;
+ (id)clientApplicationID;
+ (id)twitterFollowArticleURL;
+ (id)twitterRulesURL;
+ (void)updateBadgingFromServerForAccounts:(id)arg1 maxConcurrentRequests:(long long)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)darkreadLifecycleShutdownInfoURL;
+ (long long)darkreadLifecycleShutdownLevel;
+ (_Bool)darkreadLifecycleShutdownEnabled;
+ (void)_tfs_apiInputInvalidWithDescription:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
+ (id)guestScribeThriftGroups;
+ (id)guestScribeGroups;
+ (id)guestScribeThriftGroup;
+ (id)guestScribeGroup;
+ (id)contributeeAccountWithUser:(id)arg1 privilige:(_Bool)arg2 contributorAccountID:(id)arg3 contributorUserID:(long long)arg4;
+ (void)removeAuthTimelineToken;
+ (id)authTimelineToken;
+ (void)setAuthTimelineToken:(id)arg1;
+ (void)removeKnownDeviceTokenForTesting;
+ (id)knownDeviceToken;
+ (void)setKnownDeviceToken:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) id accountUserDetailsObserver; // @synthesize accountUserDetailsObserver=_accountUserDetailsObserver;
@property(retain, nonatomic) TFSTwitterAccountUserDetails *accountUserDetails; // @synthesize accountUserDetails=_accountUserDetails;
@property(retain, nonatomic) TFNTwitterScribeFlush *scribeFlush; // @synthesize scribeFlush=_scribeFlush;
@property(retain, nonatomic) id vitModeEnabledToken; // @synthesize vitModeEnabledToken=_vitModeEnabledToken;
@property(retain, nonatomic) TFNTwitterHomeMutingSet *homeMutingSet; // @synthesize homeMutingSet=_homeMutingSet;
@property(nonatomic) unsigned long long oAuthCredentialsKeychainGroupMigrationErrorCount; // @synthesize oAuthCredentialsKeychainGroupMigrationErrorCount=_oAuthCredentialsKeychainGroupMigrationErrorCount;
@property(nonatomic) _Bool migratedOAuthCredentialsToBothKeychainGroups; // @synthesize migratedOAuthCredentialsToBothKeychainGroups=_migratedOAuthCredentialsToBothKeychainGroups;
@property(retain, nonatomic) TFNTwitterCachableVideoMonetizationSettings *cachedMonetizationSettings; // @synthesize cachedMonetizationSettings=_cachedMonetizationSettings;
@property(retain, nonatomic) NSMutableSet *lastPassBlockedIDs; // @synthesize lastPassBlockedIDs=_lastPassBlockedIDs;
@property(readonly, nonatomic) NSDictionary *timelineManagerDic; // @synthesize timelineManagerDic=_timelineManagerDic;
@property(retain, nonatomic) TFNTwitterPromotedEventLogger *promotedEventLogger; // @synthesize promotedEventLogger=_promotedEventLogger;
@property(retain, nonatomic) NSDate *lastBlockedIDsCheckDate; // @synthesize lastBlockedIDsCheckDate=_lastBlockedIDsCheckDate;
@property(nonatomic) _Bool processingBlockedIDs; // @synthesize processingBlockedIDs=_processingBlockedIDs;
@property(readonly, nonatomic) TBCPeriscopeAccountManager *periscopeAccountManager; // @synthesize periscopeAccountManager=_periscopeAccountManager;
@property(nonatomic) _Bool videoDockingSwipeToDismissTooltipShownInitial; // @synthesize videoDockingSwipeToDismissTooltipShownInitial=_videoDockingSwipeToDismissTooltipShownInitial;
@property(nonatomic) _Bool videoDockingDockButtonTooltipShownInitial; // @synthesize videoDockingDockButtonTooltipShownInitial=_videoDockingDockButtonTooltipShownInitial;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstVideoAvailable; // @synthesize videoCaptureTooltipShownFirstVideoAvailable=_videoCaptureTooltipShownFirstVideoAvailable;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstSegmentRecorded; // @synthesize videoCaptureTooltipShownFirstSegmentRecorded=_videoCaptureTooltipShownFirstSegmentRecorded;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstSegmentPlayed; // @synthesize videoCaptureTooltipShownFirstSegmentPlayed=_videoCaptureTooltipShownFirstSegmentPlayed;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstOverrecord; // @synthesize videoCaptureTooltipShownFirstOverrecord=_videoCaptureTooltipShownFirstOverrecord;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstLaunched; // @synthesize videoCaptureTooltipShownFirstLaunched=_videoCaptureTooltipShownFirstLaunched;
@property(nonatomic) _Bool composeDraftsTooltipHasBeenTapped; // @synthesize composeDraftsTooltipHasBeenTapped=_composeDraftsTooltipHasBeenTapped;
@property(retain, nonatomic) NSDate *composeGeoPhotoTooltipLastPresentationTime; // @synthesize composeGeoPhotoTooltipLastPresentationTime=_composeGeoPhotoTooltipLastPresentationTime;
@property(nonatomic) unsigned long long composeGeoPhotoTooltipNumberOfTimesShown; // @synthesize composeGeoPhotoTooltipNumberOfTimesShown=_composeGeoPhotoTooltipNumberOfTimesShown;
@property(retain, nonatomic) NSDate *composeGeoDefaultTooltipLastPresentationTime; // @synthesize composeGeoDefaultTooltipLastPresentationTime=_composeGeoDefaultTooltipLastPresentationTime;
@property(nonatomic) unsigned long long composeGeoDefaultTooltipNumberOfTimesShown; // @synthesize composeGeoDefaultTooltipNumberOfTimesShown=_composeGeoDefaultTooltipNumberOfTimesShown;
@property(nonatomic) _Bool composeGeoDefaultTooltipShownInitial; // @synthesize composeGeoDefaultTooltipShownInitial=_composeGeoDefaultTooltipShownInitial;
@property(copy, nonatomic) NSArray *pickedInterests; // @synthesize pickedInterests=_pickedInterests;
@property(retain, nonatomic) NSDate *credentialsVerificationLastUpdate; // @synthesize credentialsVerificationLastUpdate=_credentialsVerificationLastUpdate;
@property(readonly, nonatomic) NSDate *accountCreationDate; // @synthesize accountCreationDate=_accountCreationDate;
@property(copy, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) TFNTwitterAccountModel *model; // @synthesize model=_model;
@property(retain, nonatomic) id <TFNTwitterPromotableTrend> lastImpressedPromotedTrend; // @synthesize lastImpressedPromotedTrend=_lastImpressedPromotedTrend;
@property(readonly, nonatomic) NSMutableSet *blockedIDs; // @synthesize blockedIDs=_blockedIDs;
@property _Bool accountHasBeenRemoved; // @synthesize accountHasBeenRemoved=_accountHasBeenRemoved;
@property(nonatomic) unsigned long long lastReauthSuccessMachTime; // @synthesize lastReauthSuccessMachTime=_lastReauthSuccessMachTime;
@property(nonatomic) _Bool hasAttemptedToSaveWebCredentials; // @synthesize hasAttemptedToSaveWebCredentials=_hasAttemptedToSaveWebCredentials;
@property(readonly, copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(readonly, nonatomic) TFNTwitterScribe<TFNTwitterAuthenticatedScribeDelegate> *tfnScribe; // @synthesize tfnScribe=_tfnScribe;
@property(retain) TFNTwitterAPIConfiguration *apiConfiguration; // @synthesize apiConfiguration=_apiConfiguration;
@property(retain, nonatomic) NSDate *lastTweetedFromDevice; // @synthesize lastTweetedFromDevice=_lastTweetedFromDevice;
@property(nonatomic) _Bool everTweetedFromThisDevice; // @synthesize everTweetedFromThisDevice=_everTweetedFromThisDevice;
@property(copy, nonatomic) NSArray *contributeeUserIDs; // @synthesize contributeeUserIDs=_contributeeUserIDs;
@property(retain, nonatomic) TFNTwitterTeams *teams; // @synthesize teams=_teams;
@property(nonatomic) int backupCodeScreenshots; // @synthesize backupCodeScreenshots=_backupCodeScreenshots;
@property(readonly, nonatomic) TFNTwitterLoginVerification *loginVerification; // @synthesize loginVerification=_loginVerification;
@property(nonatomic) _Bool needsPhoneVerification; // @synthesize needsPhoneVerification=_needsPhoneVerification;
@property(nonatomic) __weak id <TFNTwitterAccountPushSettingsProvider> pushSettingsProvider; // @synthesize pushSettingsProvider=_pushSettingsProvider;
@property(copy, nonatomic) NSDictionary *lastSavedMutedKeywordConfiguration; // @synthesize lastSavedMutedKeywordConfiguration=_lastSavedMutedKeywordConfiguration;
@property(copy, nonatomic) NSString *oAuthToken; // @synthesize oAuthToken=_oAuthToken;
@property(nonatomic) _Bool scribeShouldSuspend; // @synthesize scribeShouldSuspend=_scribeShouldSuspend;
@property(nonatomic) long long lastScribeFlushId; // @synthesize lastScribeFlushId=_lastScribeFlushId;
@property(retain, nonatomic) NSDate *lastActiveDate; // @synthesize lastActiveDate=_lastActiveDate;
@property(readonly, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) long long identityType; // @synthesize identityType=_identityType;
@property(nonatomic) _Bool verified; // @synthesize verified=_verified;
@property(retain, nonatomic) TFSTwitterFeatureAccountScopedData *accountScopedData; // @synthesize accountScopedData=_accountScopedData;
@property(readonly, copy, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
- (void)_tfn_configureAccountUserDetailsObserverIfNecessary;
- (id)_detailInfoDictionary;
- (void)_loadDetailInfoWithDictionary:(id)arg1;
- (void)_saveDetailInfoToDisk;
- (void)_tfn_loadDetailInfo;
- (void)deleteDetailInfoFile;
- (id)_basicInfoDictionary;
- (void)_loadBasicInfoWithDictionary:(id)arg1;
- (void)_saveBasicInfoToDisk;
- (void)_loadBasicInfo;
- (void)deleteBasicInfoFile;
- (id)_detailInfoFile;
- (id)_basicInfoFile;
- (void)saveInfo;
- (void)deleteInfoFiles;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applyActiveExperiments;
- (void)_notifyUnretweetForOriginalStatusID:(long long)arg1 retweetID:(long long)arg2;
- (void)_notifyRetweet:(long long)arg1 representedStatusID:(long long)arg2 fromUserID:(long long)arg3;
- (void)_notifyWithFavorite:(_Bool)arg1 statusID:(long long)arg2 fromUserID:(long long)arg3;
- (void)_postSettingsDidChangeNotificationWithOldSettings:(id)arg1 newSettings:(id)arg2;
- (void)_setUpModelDatabase;
- (void)removeUserFromCache:(id)arg1;
- (void)removeStatusFromCacheWithStatusID:(long long)arg1;
- (id)definitiveTwitterObjects:(id)arg1;
- (id)definitiveUsers:(id)arg1;
- (id)definitiveStatus:(id)arg1;
- (id)definitiveUser:(id)arg1;
- (void)setCurrentAccountForBadgingWithCompletion:(CDUnknownBlockType)arg1;
- (void)unhideTweetStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)hideTweetStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)ouchTweetStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)private_homeMutingSetStartObserving;
- (unsigned long long)mutedUsersCount;
- (void)private_updateUserWithUserReference:(id)arg1 muted:(_Bool)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)unmuteUserWithUserReference:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)muteUserWithUserReference:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateUserMuteCachePolling:(_Bool)arg1;
- (_Bool)isMutingUser:(id)arg1;
- (void)unblockUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)blockUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (_Bool)_removeStatusesFromUser:(id)arg1 reason:(unsigned long long)arg2;
- (_Bool)_eradicateBlockedUser:(id)arg1;
- (void)_eradicateBlockedUserIDs:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_updateBlockedUsers:(id)arg1 applyUpdates:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_processBlockedIDsResponse:(id)arg1 applyUpdates:(_Bool)arg2 monitoring:(id)arg3;
- (void)_didReceiveBlockingIDSuccess:(_Bool)arg1 object:(id)arg2 error:(id)arg3 applyUpdates:(_Bool)arg4 monitoring:(id)arg5;
- (void)_refreshBlocksApplyingUpdatesCursor:(id)arg1 applyUpdates:(_Bool)arg2 monitoring:(id)arg3;
- (void)_updateUnblockedUsers:(id)arg1 applyUpdates:(_Bool)arg2;
- (void)refreshBlocks;
- (void)refreshBlocksApplyingUpdatesMonitoring:(id)arg1;
- (_Bool)blockedIDsNeedRefreshing;
- (_Bool)_refreshBlocksEnabled;
- (void)removeTaggedAccountUserFromStatus:(id)arg1;
- (void)unretweet:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_updateStatesForRetweetStatus:(id)arg1 originalStatus:(id)arg2;
- (void)retweetWithStatusID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)retweet:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)deleteStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)deleteStatus:(id)arg1;
- (void)dismissStatus:(id)arg1 withEvent:(long long)arg2 notify:(_Bool)arg3;
- (void)sendFeedbackForSuggestsInfo:(id)arg1 feedbackType:(id)arg2 undo:(_Bool)arg3;
- (void)sendFeedbackForUserSuggestsInfo:(id)arg1 feedbackType:(id)arg2 userIDNumbers:(id)arg3 undo:(_Bool)arg4;
- (void)sendFeedbackForSuggestsInfo:(id)arg1 feedbackType:(id)arg2 statusIDNumbers:(id)arg3 undo:(_Bool)arg4;
- (void)unfavoriteStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_favoriteStatusWithStatusID:(long long)arg1 representedStatusID:(id)arg2 fromUserID:(long long)arg3 isEarnedImpression:(_Bool)arg4 impressionID:(id)arg5 responseBlock:(CDUnknownBlockType)arg6;
- (void)favoriteStatusWithStatusID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)favoriteStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)_fetchRemoteStatusWithID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)fetchStatusWithID:(long long)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)lookUpStatusForQuotedStatusInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)lookUpStatusForID:(long long)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)lookUpLocallyCachedStatusForID:(long long)arg1;
- (id)_fetchRemoteUserWithUsername:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)_fetchRemoteUserWithID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)fetchUserWithUserReference:(id)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (id)_tfn_fetchUserWithUsername:(id)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (id)fetchUserWithID:(long long)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)lookUpUserForUserReference:(id)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)lookUpUserForUsername:(id)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)lookUpUserForID:(long long)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_refreshMyUserForce:(_Bool)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)_apiConfiguration;
- (void)_tfn_accountUserDetailsUpdated:(id)arg1;
- (void)_userDataSourceDidUpdate:(id)arg1;
- (void)_tfn_removeStatusIDFromStreams:(id)arg1 reason:(unsigned long long)arg2 relatedToUser:(id)arg3;
- (_Bool)isRetweetStatus:(id)arg1;
- (_Bool)isFavoriteStatus:(id)arg1;
- (_Bool)isAuthorOfQuotedStatusInfo:(id)arg1;
- (_Bool)isAuthorOfStatus:(id)arg1;
- (_Bool)isAuthorOfStatusFromUsername:(id)arg1;
- (_Bool)isAuthorOfStatusFromUserID:(long long)arg1;
- (_Bool)myUserIsEqualToUserDataSource:(id)arg1;
- (_Bool)myUserIsEqualToUserReference:(id)arg1;
- (_Bool)myUserIsEqualToUser:(id)arg1;
@property(readonly, nonatomic) TBCPeriscopeAccount *periscopeAccount;
@property(readonly, nonatomic) _Bool isPeriscopeAuthenticationAllowed;
@property(readonly, nonatomic) TFSModelContext *modelContext;
- (void)flushScribe;
- (void)updateSettings:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateCurrentPassword:(id)arg1 updatedPassword:(id)arg2 passwordConfirmation:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)updateSettingsWithBlock:(CDUnknownBlockType)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)fetchMonetizationSetting:(CDUnknownBlockType)arg1;
- (void)markSettingsDirty;
- (void)getSettingsMaxStale:(double)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)getSettings:(CDUnknownBlockType)arg1;
- (void)overrideSettings:(id)arg1;
- (void)refreshUserTypeaheadStoreCacheIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)refreshForced:(_Bool)arg1 source:(unsigned long long)arg2;
- (void)_tfn_refreshTimelinesWithSource:(long long)arg1;
- (void)refreshMyUserImmediatelyWithCompletion:(CDUnknownBlockType)arg1;
- (void)refreshMyUserIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)saveLoginVerificationToKeychainFromUserDefaultsIfNecessary;
@property(readonly, nonatomic) int loginVerificationMode;
@property(readonly, nonatomic) _Bool isLoginVerificationEnabled;
- (id)autosaveName;
- (id)accountScopedFeatureForIdentifier:(id)arg1;
- (void)updateUserInfoAndCredentialsWithToken:(id)arg1 secret:(id)arg2 username:(id)arg3 userID:(long long)arg4;
- (id)deleteOAuthCredentialsInKeychain;
- (void)_timelineManagerDidDeserializeTimeline:(id)arg1;
@property(readonly, nonatomic) TFNTwitterTimelineManager *timelineManager;
- (void)setOAuthTokenForTeamsAccount:(id)arg1 withOAuthTokenSecret:(id)arg2;
- (void)resetOAuthCredentials;
@property(readonly, copy, nonatomic) NSString *oAuthConsumerSecret;
@property(readonly, copy, nonatomic) NSString *oAuthConsumerKey;
@property(readonly, nonatomic) _Bool hasOAuthTokens;
@property(readonly, nonatomic) TFNTwitterDynamicVideoAdManager *dynamicVideoAdManager; // @synthesize dynamicVideoAdManager=_dynamicVideoAdManager;
- (double)simulatedCompositionUploadDelayTimeInteral;
- (_Bool)peekIfNudgeTestingKeywordIsEnabled;
- (void)writeNudgeFeatureSwitchImpresssionsIfControlGroup;
- (void)writeNudgeFeatureSwitchImpressionsIfNeeded;
@property(readonly, nonatomic) unsigned long long toastNudgeFlags;
@property(readonly, nonatomic) unsigned long long compositionNudgeFlags;
- (void)updateScribeOptions;
- (id)_scribeOptionsFromDictionary:(id)arg1;
- (id)_scribeOptions;
@property(nonatomic) _Bool osNotificationsInitialized;
@property(readonly, nonatomic) TFNTwitterSearchTypeaheadStore *typeaheadStore;
@property(readonly, nonatomic) TFNTwitterCompositionPersistenceManager *compositionPersistenceManager;
@property(readonly, nonatomic) TFNTwitterCompositionOutboxController *outboxController; // @synthesize outboxController=_outboxController;
@property(readonly, nonatomic) TFNTwitterScribeImpressionLogger *impressionLogger;
@property(readonly, nonatomic) id <TFSTwitterLegacyScribeLogMethods> scribe;
@property(nonatomic) _Bool lastGeotaggingState;
@property(readonly, nonatomic, getter=isUsingRetainedGeoDataForCreatingTweetAllowed) _Bool usingRetainedGeoDataForCreatingTweetAllowed;
@property(readonly, nonatomic) id <TFNTwitterGeoDataProvider> geoDataProvider; // @synthesize geoDataProvider=_geoDataProvider;
@property(retain, nonatomic) TFNTwitterSettings *settings;
@property(readonly, nonatomic) _Bool isAllowedForAdsSubscription;
@property(readonly, nonatomic) id <TFNTwitterAccountPushSettingsManager> pushSettings;
@property(readonly, copy, nonatomic) NSString *displayFullName; // @synthesize displayFullName=_displayFullName;
@property(readonly, copy, nonatomic) NSString *displayUsername; // @synthesize displayUsername=_displayUsername;
@property(readonly, copy, nonatomic) TFSTwitterUserReference *userReference;
@property(readonly, nonatomic) TFNTwitterUser *legacyUser;
@property(readonly, nonatomic) id <TFSTwitterCanonicalUser> user;
@property(readonly, nonatomic) TFNTwitterUserDataSource *userDataSource;
- (void)_initUserDataSource;
@property(readonly, nonatomic) long long userID;
@property _Bool isActive;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)_postSaveCredentialToKeychainErrorNotification:(id)arg1;
- (id)_keychainErrorScribeParameters:(id)arg1;
- (void)_migrateOAuthCredentialsToBothKeychainGroups;
- (void)_performDeferredPasswordFetchIfAllowed;
@property(copy, nonatomic) NSString *oAuthTokenSecret; // @synthesize oAuthTokenSecret=_oAuthTokenSecret;
- (void)_saveOAuthTokenSecretWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)saveOAuthCredentialWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)saveOAuthTokenSecretToKeychainIfNecessary;
- (id)userDefaultsDictionaryValueForGroupUserDefaults:(_Bool)arg1;
- (id)initWithUserDefaultsDictionary:(id)arg1;
- (void)releaseTimelines;
- (void)updateWithAccount:(id)arg1;
- (void)dealloc;
- (id)initTestAccountWithUser:(id)arg1 autoRefreshAccountUser:(_Bool)arg2;
- (id)initTestAccountWithUser:(id)arg1;
- (id)initTestAccountWithUsername:(id)arg1;
- (id)initWithAccountID:(id)arg1 username:(id)arg2 userID:(long long)arg3 user:(id)arg4 dtabHeaderValue:(id)arg5;
- (id)initWithUsername:(id)arg1 userID:(long long)arg2 dtabHeaderValue:(id)arg3;
- (id)initWithUsername:(id)arg1 userID:(long long)arg2;
- (id)initWithUser:(id)arg1;
- (id)init;
- (_Bool)isModernStatusViewsQuoteTweetEnabled;
- (_Bool)isAutoTranslateSourceGoogleEnabled;
- (_Bool)isAutoTranslateSourceMicrosoftEnabled;
- (_Bool)isAutoTranslateExpandedViewEnabled;
- (_Bool)isAutoTranslateEnabled;
- (id)eligibleURLEntityForLinksNudgeWithStatus:(id)arg1;
- (_Bool)isSimpleQuoteActionLabelEnabled;
- (_Bool)isQuoteStatRearrangeEnabled;
- (_Bool)isRetweetsAndCommentsLabelEnabled;
- (_Bool)isConversationControlFlexibleParticipationReplyEnabled;
- (_Bool)isConversationControlCreationEnabled;
- (_Bool)isVerificationV2ElectionsBadgeEnabled;
- (_Bool)isVerificationV2AffiliateBadgingM2Enabled;
- (_Bool)isVerificationV2AffiliateBadgingEnabled;
- (_Bool)canShareStatus:(id)arg1;
- (_Bool)canQuoteStatus:(id)arg1;
- (_Bool)canRetweetStatus:(id)arg1;
@property(readonly, nonatomic, getter=isDisplayTextCachingEnabled) _Bool displayTextCachingEnabled;
@property(readonly, nonatomic) _Bool isSlideshowStatusTextEnabled;
- (id)momentEditingDeprecationWarningHelpURL;
- (_Bool)shouldShowMomentEditingDeprecationWarning;
- (_Bool)_tfn_canShowPromoteModeForAllowedAccount;
- (_Bool)_tfn_canShowPromoteModeForSMBAccount;
- (_Bool)areAdsCategoriesForExcludedTagsEnabled;
- (_Bool)canShowPromoteModeForAccount;
- (_Bool)hasSMBAccountServiceLevel;
- (_Bool)hasAdvertiserAccountSubscription;
- (_Bool)isAdsPromoteModeAllowListingEnabled;
- (_Bool)isAdsPromoteModeSMBServiceLevelEnabled;
- (_Bool)isAdsPromoteModeEnabled;
- (_Bool)isAdvertiser;
- (_Bool)isAdsCompanionEnabled;
@property(readonly, nonatomic, getter=isLoadingHighestQualityImageVariantPermitted) _Bool loadingHighestQualityImageVariantPermitted;
- (double)photoStickersFeaturedCategoryRefreshRate;
- (id)invalidStickersLastModifiedDate;
- (id)foundMediaConfiguration;
- (long long)foundMediaImageFormat;
@property(readonly, nonatomic) unsigned long long animatedLivePhotoType;
@property(readonly, nonatomic, getter=isAnimatedLivePhotoAttachmentEnabled) _Bool animatedLivePhotoAttachmentEnabled;
- (id)photoFilterLibraryId;
- (_Bool)shouldShowImagesBelowMinSizeInline;
- (unsigned long long)minSizeOfImageInMediaForward;
- (unsigned long long)waitTimeSampleRate;
- (_Bool)isUpdatedNSFWInterstitialingEnabled;
- (_Bool)areAEMAuthenticatedWebviewsEnabled;
- (_Bool)isReportFlowIdReportTypeEnabled;
- (_Bool)isReportFlowIdEnabled;
- (_Bool)unsafePeekIsSoftInterventionsRetweetNudgeEnabled;
- (_Bool)isSoftInterventionsRetweetNudgeEnabled;
- (_Bool)isSoftInterventionsNudgeBackendControlEnabled;
- (_Bool)isSoftInterventionsLikeNudgeEnabled;
- (_Bool)isSoftInterventionsInnerQuoteTweetForwardPivotEnabled;
- (_Bool)isSoftInterventionsForwardPivotEnabled;
- (_Bool)isNavigationStackReportClientEventsEnabled;
- (_Bool)isNavigationStackReferrerParamEnabled;
- (_Bool)isNavigationStackEnabled;
- (_Bool)isDominantColorInCardsEnabled;
- (double)pollDurationComposeMaxInterval;
- (double)pollDurationComposeMinInterval;
- (double)pollDurationComposeDefaultInterval;
- (double)poll2ChoiceTextCapiRefreshInterval;
- (double)cardComposePreviewRetryTotalTimeout;
- (unsigned long long)cardComposePreviewPermittedRetryCount;
- (_Bool)shouldCardComposePreviewTombstoneIfNotDisplayed;
- (long long)cardComposePreviewFetchDelayMsec;
- (_Bool)isComposerPulldownThreadingLookbackLimited;
- (_Bool)isComposerProtectedAccountPulldownThreadingEnabled;
- (_Bool)isComposerPulldownThreadingEnabled;
- (_Bool)isComposerGeoPreciseLocationEnabled;
- (long long)selfThreadComposerAddToThreadTooltipCharacterLimit;
- (_Bool)selfThreadComposerLimitAttachments;
- (long long)selfThreadComposerMaxTweets;
- (double)dockingVideoMinimumDuration;
@property(readonly, nonatomic, getter=isDockingHapticFeedbackEnabled) _Bool dockingHapticFeedbackEnabled;
- (double)dockingViewSwipeVelocity;
- (_Bool)isURTViewModelBuildingOffMainThreadEnabled;
- (_Bool)isTweetDetailsRichTextPrototypeViewEnabled;
- (_Bool)isHomeTimelineEarlyStartupEnabled;
- (_Bool)isBarButtonItemConfigurationLazyImageLoadEnabled;
- (_Bool)isURTImpressionCacheStoreAsyncWriteEnabled;
- (_Bool)isTIPImageUnloadingOptimizationEnabled;
- (_Bool)isModelCacheCloseAsyncOnDeallocEnabled;
- (_Bool)isMediaRailAsyncAssetLibraryLoadingEnabled;
- (_Bool)isIndividuallyURLRegexCompilationEnabled;
- (_Bool)isIgnoreTraitCollectionUIStyleInEqualityEnabled;
- (_Bool)isAttributedTextModelColorDifferenceOptimizationEnabled;
- (long long)isAsyncImageCodecLoadingEnabledWithImpression:(_Bool)arg1;
- (_Bool)isAsyncHomeTopCursorPrefetchEnabled;
- (_Bool)isCardPersistedStateManagerWarmingEnabled;
- (_Bool)isUserViewUsernameHeightCachingEnabled;
- (unsigned long long)dataViewModelBoundViewCacheLimit;
- (unsigned long long)dataViewGeneralViewCacheLimit;
- (unsigned long long)FPSTraceReportThreshold;
- (_Bool)isFPSTraceReportEnabled;
- (unsigned long long)FPSStallReportThreshold;
- (_Bool)isFPSStallReportEnabled;
- (_Bool)isDoubleMaxZoomFor4KImagesEnabled;
- (void)updateBadgingFromServerWithCompletion:(CDUnknownBlockType)arg1;
- (long long)reactivePromptTimeoutOverride;
- (long long)reactivePromptMaxLikeCount;
- (long long)reactivePromptMaxFollowCount;
- (_Bool)isReactivePromptUserFollowReactionEnabled;
- (_Bool)isReactivePromptFirstLikeReactionEnabled;
- (id)onboardingAccountFollowEmbeddedPromptTintColorOverDarkBackground:(_Bool)arg1;
- (_Bool)shouldShowOnboardingAccountFollowEmbeddedPromptToast;
- (_Bool)shouldShowOnboardingAccountFollowEmbeddedPromptForStatus:(id)arg1;
- (long long)onboardingAccountFollowPromptMaxFollowingCount;
- (_Bool)shouldOnboardingAccountFollowPromptShowToastWhenFollowing;
- (_Bool)shouldOnboardingAccountFollowPromptHideWhenFollowing;
- (_Bool)shouldOnboardingAccountFollowPromptShowFollow;
- (_Bool)shouldOnboardingAccountFollowPromptShowUsername;
- (_Bool)isOnboardingAccountFollowPromptEnabled;
- (_Bool)isOnboardingNotificationsBackstopPromptEnabled;
- (_Bool)isOnboardingAddressBookReuploadEnabled;
- (_Bool)isProfileOnboardingBioAutoFocusEnabled;
- (id)replyControlLimitedActionsConfig;
- (_Bool)isDisabledEngagementEducationConfigEnabled;
- (_Bool)isLimitedActionsConfigEnabled;
- (id)nonCompliantLimitedActionsConfig;
- (_Bool)isCountryWithheldContentTweetInterstitialEnabled;
- (_Bool)isCountryWithheldContentProfileInterstitialEnabled;
- (_Bool)isAuthorModeratedReplyURTContainerEnabled;
- (_Bool)isConversationalSafetyOuchEnabled;
- (_Bool)isTOTPGeneratorEnabled;
- (_Bool)isSMS2faEnabled;
- (_Bool)performAnimationOnSkippedStatusNavigation;
- (_Bool)isRedundantStatusNavigationDisabled;
- (unsigned long long)tweetDetailsInlineActionStyle;
- (_Bool)isConversationsIncreasedDensityEnabled;
- (_Bool)isTweetDetailsRUXLandingPageEnabled;
- (_Bool)isTweetDetailsInlineReplyRemovalEnabled;
- (_Bool)isTweetDetailsViewControllerURTV2Enabled;
- (_Bool)isTweetDetailsModernStatusViewsFocalTweetEnabled;
- (_Bool)isTweetDetailsReplyLabelsEnabled;
- (_Bool)isMacTestExperimentEnabled;
- (_Bool)isOpenLinksInNativeAppsFailureDebuggingEnabled;
- (_Bool)canOpenURLInExternalApp:(id)arg1;
- (_Bool)isSafariViewControllerModalEnabled;
- (_Bool)isSafariViewControllerEnabled;
- (long long)conversationThreadingMaximumIndentationLevels;
- (long long)conversationThreadingCursorIndentationLevelDelta;
- (long long)conversationThreadingInitialRequestIndentationLevels;
- (double)conversationPeekHeight;
- (_Bool)isConversationThreadingEmptyModuleRetryEnabled;
- (_Bool)isConversationThreadingSelectedStateExtendedSendReplyViewNoOpEnabled;
- (_Bool)isConversationThreadingSelectedStateTapInlineActionsViewNoOpEnabled;
- (_Bool)isConversationThreadingSelectedStateTapInInlineReplyViewNoOpEnabled;
- (_Bool)isConversationThreadingInitiallyFocusedStatusSelected;
- (unsigned long long)_t1_conversationThreadingStyle;
- (_Bool)isConversationShowFocalStatusWhileLoadingEnabled;
- (_Bool)isConversationConnectorLinesToSelectedStateContainerEnabled;
- (_Bool)isConversationThreadingCollapseEnabled;
- (_Bool)isConversationEmphasizedDirectDescendentsOnlyEnabled;
- (_Bool)isConversationEmphasizedDirectAncestorOnlyEnabled;
- (_Bool)isConversationEmphasizedConnectorLinesInBlueEnabled;
- (_Bool)isConversationEmphasizedConnectorLinesEnabled;
- (_Bool)isConversationThreadingAQCursorsAlwaysVisible;
- (_Bool)isConversationThreadingLQCursorsAlwaysVisible;
- (_Bool)isConversationThreadingCaretAlwaysVisible;
- (_Bool)isConversationThreadingInlineActionsCountsAlwaysVisible;
- (_Bool)isConversationThreadingInlineActionsAlwaysVisible;
- (_Bool)isConversationAttachedCursorEnabled;
- (_Bool)isConversationThreadingPushNavigationEnabled;
- (_Bool)isConversationMaximumIndentationSentWithCursorsEnabled;
- (_Bool)isConversationThreadingInlineActionsVerticallyAlignedEnabled;
- (_Bool)isConversationThreadingReplyInlineActionFocusesInlineReplyFieldEnabled;
- (_Bool)isConversationThreadingFloatingReplyBarHiddenForSelectedInlineReplyBar;
- (_Bool)isConversationThreadingFloatingReplyBarEnabled;
- (_Bool)isConversationThreadingInlineRepliesEnabled;
- (_Bool)isConversationThreadingVoiceOverSupportEnabled;
- (_Bool)isConversationThreadingEnabled;
- (_Bool)isProfileBioTranslationEnabled;
- (id)canonicalProfileURLString;
- (_Bool)isProfileQRCodeButtonEnabled;
- (_Bool)isProfileModalViewAvatarEnabled;
- (_Bool)isProfileModalEnabled;
- (_Bool)_t1_isInProfileModalViewAvatarBucket;
- (_Bool)_t1_isInProfileModalEnabledBucket;
- (_Bool)isProfileEmptySocialProofEnabled;
- (id)profileBirthdayBalloonOverrides;
- (_Bool)isProfileBirthdayBalloonOverridesEnabled;
- (_Bool)isEditProfileUsernameEnabled;
- (_Bool)isItemPathScrollStateIdentifiersEnabled;
@property(readonly, nonatomic) _Bool isDeepStatusGraphItemPathProcessingEnable;
- (_Bool)isConsecutiveAdHoistingPreventionEnabled;
- (_Bool)isConsecutiveAdDedupPreventionEnabled;
- (id)pinToTopManagerConfiguration;
@property(readonly, nonatomic) _Bool isHomeLegacyToURTFeedbackBridgeEnabled;
- (_Bool)isHomeTimelineFeedbackCaretDisplayTreatmentOverflowInlineEnabled;
- (id)homeTimelineFeedbackCaretDisplayTreatment;
- (_Bool)isHomeTimelineFeedbackMenuSheetSubpromptsEnabled;
- (_Bool)jumpToTopNavigationMinScrollCancelEnabled;
- (long long)jumpToTopNavigationMinScrollCancel;
- (long long)jumpToTopNavigationMinBackgroundMinutes;
- (_Bool)isJumpToTopNavigationLatestEnabled;
- (_Bool)isJumpToTopNavigationHomeEnabled;
- (_Bool)isJumpToTopNavigationCacheRestorePreventionEnabled;
- (id)homeTimelineFeedbackImmediateDismissTreatment;
- (_Bool)isHomeTimelineFeedbackImmediateDismissEnabled;
- (_Bool)isHomeTimelineFeedbackMoreIconEnabled;
- (_Bool)showCaretAlignedWithSocialProof;
- (_Bool)isTopicsTweetDetailsRecommendedTopicContextEnabled;
- (_Bool)isTopicsContextFollowControlLeftAlignedEnabled;
- (_Bool)isTopicsContextInlineNotInterestedEnabled;
- (_Bool)isTopicsNewSocialContextIconColorEnabled;
- (_Bool)isTopicsNewSocialContextEnabled;
- (_Bool)isTopicsMenuSeparatorEnabled;
@property(readonly, nonatomic) _Bool isTopicsProfileEntryPointEnabled;
- (_Bool)isURTEmptyCursorChunkClearingEnabled;
- (double)latestTimelineProgressiveAutoSwitchThresholdMultiplier;
- (double)latestTimelineProgressiveAutoSwitchHalfLife;
- (double)latestTimelineProgressiveAutoSwitchMaximumTime;
- (double)latestTimelineProgressiveAutoSwitchMinimumTime;
- (double)latestTimelineFrustrationThreshold;
- (_Bool)isLatestTimelineProgressiveAutoSwitchFatigueEnabled;
- (double)latestTimelineStaticAutoSwitchTimeoutThreshold;
- (id)homeTimeline;
- (id)homeTimelineVariantCoordinator;
- (_Bool)isLatestHomeTimelineSwitchEnabled;
- (_Bool)isTimelineItemsHydrationScribingEnabled;
- (unsigned long long)maxRecentCacheEntriesToUseForClientDeduping;
- (_Bool)isConversationHoistingPreventionEnabled;
- (_Bool)isClientDedupingUsingImpressionCacheEnabled;
- (unsigned long long)maxSeenIDsInHomeTimelineRequest;
- (_Bool)isShowLessOftenCopyChangeEnabled;
- (_Bool)isTweetRelevancePromptCompactStyleEnabled;
- (_Bool)isTweetRelevancePromptEnabled;
- (double)tweetReplyPromptCellHeightPercentage;
- (double)tweetReplyPromptLingerThreshold;
- (_Bool)isTweetReplyPromptMediaClickEnabled;
- (_Bool)isTweetReplyPromptLingerEnabled;
- (double)urtLoadBottomBackoffInterval;
@property(readonly, nonatomic) NSNumber *tileCustomTitleLineCount;
- (_Bool)threadedHomeConversationModuleRenderingEnabled;
- (_Bool)isModuleItemTreeDisplayMetadataSupportEnabled;
- (double)_jumpBackToHomeTimeInterval;
- (_Bool)_isJumpBackToHomeEnabled;
- (_Bool)_inactivePeriodSatisfiesJumpBackIntervalWithActiveTimeStamp:(double)arg1 inactiveTimeStamp:(double)arg2;
- (_Bool)shouldJumpBackToHomeWithActiveTimeStamp:(double)arg1 inactiveTimeStamp:(double)arg2;
- (_Bool)isEdgeProfileDominantColorEnabled;
- (_Bool)isHashflagsAnimationLikeButtonEnabled;
- (_Bool)isHashflagsEnabled;
@property(readonly, nonatomic) T1AdaptiveMediaParameters *adaptiveMediaParameters;
- (_Bool)isLiveEventVODPromotedContentEnabled;
- (_Bool)isLiveEventHappeningNowTilesNewStylingEnabled;
- (double)liveEventMultiVideoAutoAdvanceTransitionDuration;
- (_Bool)isLiveEventMultiVideoAutoAdvanceDockEnabled;
- (_Bool)isLiveEventMultiVideoAutoAdvanceEnabled;
- (_Bool)isLiveEventMultiVideoCarouselEnabled;
- (_Bool)isLiveEventShowShareButtonEnabled;
- (_Bool)isLiveEventVideoInitiallyMutedEnabled;
- (_Bool)isLiveEventSquishyHeaderShowTapToExpandLabelEnabled;
- (_Bool)isLiveEventSquishyHeaderSubtitleBlueEnabled;
- (_Bool)isLiveEventHeaderLockingEnabled;
- (_Bool)isLiveEventSquishyHeaderMultiVideoCarouselPinningEnabled;
- (_Bool)isLiveEventSquishyHeaderScoreCardRedesignEnabled;
- (_Bool)isLiveEventScoreCardPinningEnabled;
- (_Bool)isLiveEventChromeSyncEnabled;
- (_Bool)isLiveEventSquishyHeaderEnabled;
- (_Bool)isLiveEventHeaderVodEnabled;
- (_Bool)isLiveEventCardVodEnabled;
- (_Bool)isLiveEventCardUserAttributionEnabled;
- (double)liveEventCardUBSRefreshInterval;
- (double)liveEventCardCAPIRefreshInterval;
- (double)liveEventTimelineNewTweetsPillShowingInterval;
- (double)liveEventTimelineMinimumRefreshRateInterval;
- (double)liveEventTimelineDefaultRefreshRateInterval;
- (_Bool)isLiveEventTimelineServerControlledRefreshRateEnabled;
- (_Bool)isLiveEventDockingEnabled;
- (long long)liveEventVideoLoopingCount;
- (double)liveEventVideoLoopingThresholdDuration;
- (_Bool)isLiveEventExperienceEnabled;
- (long long)hlsPlaylistEmbeddedConfiguration;
@property(readonly, nonatomic) _Bool isPreferredPeakBitrateCappingDisabled;
@property(readonly, nonatomic) double playerCacheTTL;
- (unsigned long long)playerFactoryThresholdForCacheSizeOne;
- (unsigned long long)playerFactoryThresholdForCacheSizeTwo;
- (id)playerCacheResizingPolicy;
@property(readonly, nonatomic) double autoplayBitRateForHighQuality;
@property(readonly, nonatomic) double networkBandwidthFractionForMp4VariantSelection;
@property(readonly, nonatomic) double networkBandwidthFractionForInitialVariantSelection;
@property(readonly, nonatomic) _Bool isVODAttributionSourceTweetDetailPivotEnabled;
@property(readonly, nonatomic) _Bool tavFoundationAvoidBlockingReads;
@property(readonly, nonatomic) _Bool isAVCoreSingleThreaded;
@property(readonly, nonatomic) _Bool isMixedMediaBadgeEnabled;
@property(readonly, nonatomic) _Bool shouldUseComponentizedInlineMediaViewsForEverythingElse;
@property(readonly, nonatomic) _Bool shouldUseComponentizedInlineMediaViewsForVine;
@property(readonly, nonatomic) _Bool shouldUseComponentizedInlineMediaViewsForGIF;
@property(readonly, nonatomic) _Bool shouldUseComponentizedInlineMediaViewsForMediaEntityVod;
@property(readonly, nonatomic) NSNumber *skipButtonTimeWithImpressionLogging;
@property(readonly, nonatomic) double viewThresholdContent;
@property(readonly, nonatomic) _Bool isPostPlaybackEnabled;
@property(readonly, nonatomic) _Bool isVODInlineAudioToggleUniversalMuteDisabled;
@property(readonly, nonatomic) _Bool isVODInlineAudioToggleEnabled;
- (_Bool)shouldVODDockingFullScreenDisableAutoplayBehindDock;
- (_Bool)isVODDockingFullScreenEnabled;
@property(readonly, nonatomic) _Bool shouldShowViewerCountOutsideVideoInBroadcastCards;
@property(readonly, nonatomic) _Bool shouldExtractPreviewFromPrecachedVideo;
@property(readonly, nonatomic) _Bool areSmallerVideoThumbnailsEnabled;
@property(readonly, nonatomic) _Bool isGIFPrecachingEnabled;
@property(readonly, nonatomic) _Bool isPrecachingDisabled;
@property(readonly, nonatomic) _Bool isPrecachingAllowedByLegacyAutoplaySystem;
@property(readonly, nonatomic) _Bool isVideoDynamicAdEnabled;
@property(readonly, nonatomic) double autoplayStartPlayerViewVisibleYFraction;
@property(readonly, nonatomic) _Bool disableVideoRenderingForTwitterVoice;
@property(readonly, nonatomic) NSArray *videoAdsAuditAllowedUsers;
@property(readonly, nonatomic) double skipAdDurationRequirement;
@property(readonly, nonatomic) NSNumber *skipButtonTime;
- (_Bool)isShortFormCompleteEnabled;
- (_Bool)isPromotedAudibleViewEnabled;
@property(readonly, nonatomic) double vodHeartbeatPeriod;
@property(readonly, nonatomic) double liveHeartbeatPeriod;
- (_Bool)isVideoAnalyticsScribeThriftVerifyRequiredFieldsEnabled;
@property(readonly, nonatomic) _Bool isNewTAVFoundationOutputViewEnabled;
@property(readonly, nonatomic) _Bool isMediaForwardYTCardEnabled;
@property(readonly, nonatomic) double playbackStartForwardBufferDuration;
@property(readonly, nonatomic) _Bool isVODCaptionsEnabled;
@property(readonly, nonatomic) double videoPreferMP4OverHLSThreshold;
@property(readonly, nonatomic) double videoLoopingDurationThreshold;
@property(readonly, nonatomic) _Bool videoLoopingInCardsEnabled;
@property(readonly, nonatomic) NSArray *additionalQueryParametersForHLSURL;
- (id)hlsURLAdditionalQueryParameterValue;
- (id)hlsURLAdditionalQueryParameterName;
@property(readonly, nonatomic) _Bool isCookieAcquiringPolicyOn;
@property(readonly, nonatomic) _Bool isLHLSLibEnabledForReplaysOfLiveStreams;
@property(readonly, nonatomic) _Bool isLHLSLibEnabledForHighLatencyLiveStreams;
@property(readonly, nonatomic) _Bool isLHLSLibMasterPlayerClientEnabledForLHLSStreams;
@property(readonly, nonatomic) _Bool isVoiceConsumptionEnabled;
@property(readonly, nonatomic) _Bool isLHLSLibEnabledForLowLatencyLiveStreams;
@property(readonly, nonatomic) double tavPlayerDiagnosticStateTrackerGracePeriodInterval;
@property(readonly, nonatomic) unsigned long long contentRetryLimit;
@property(readonly, nonatomic) _Bool isAVRKitPreferredForAllVideos;
- (double)viewDidAppearUrtNtabThrottleRate;
- (double)appDidBecomeActiveUrtNtabThrottleRate;
- (double)pushReceiptUrtNtabThrottleRate;
- (double)baselineUrtNtabThrottleRate;
- (_Bool)isFullStatusInNTabEnabled;
- (_Bool)isDismissTypeX;
- (_Bool)isInRuxHoldbackExperimentWithImpression:(_Bool)arg1;
- (_Bool)isInRuxHoldback;
- (_Bool)isNewsCameraReactionsEnabled;
- (_Bool)isNewsCameraCreationEnabled;
- (_Bool)canViewTweetAnalyticsForViewModel:(id)arg1;
- (_Bool)shouldShowBrazilVoiceEducationModal;
- (_Bool)isDMVoiceRenderingEnabled;
- (_Bool)isDMVoiceCreationEnabled;
- (_Bool)isDMShareSheetReplyToAuthorEnabled;
- (_Bool)dmSearchServerEnabled;
- (long long)dmSearchAdditionalPagesCount;
- (id)reactionsConfiguration;
- (id)_fetchFreshConfiguration;
- (_Bool)isReactionUserEducationEnabled;
- (_Bool)isReactionHapticFeedbackEnabled;
- (_Bool)isReactionCreationEnabled;
- (double)inboxPollingInterval;
- (double)conversationPollingInterval;
- (long long)directMessageMaxGroupSize;
- (_Bool)isIOS13ShareSheetDonationEnabled;
- (_Bool)isDMConversationNSFWMediaFilterEnabled;
- (_Bool)isDMConversationMutingEnabled;
- (_Bool)isDMConversationMutedListEnabled;
- (_Bool)isDMConversationGroupJoinedEntryEnabled;
- (_Bool)isDMConversationNavBarAvatarEnabled;
- (_Bool)isDMRequestsInboxActionsButtonEnabled;
- (_Bool)isTopRequestsHideHeadersEnabled;
- (_Bool)isTopRequestsSectionEnabled;
- (_Bool)isTopRequestsDdgMembershipEnabled;
- (_Bool)isDMRequestConsolidatedButtonsEnabled;
- (_Bool)isDMConversationSocialProofEnabled;
- (_Bool)isRequestProfileInfoEnabled;
- (double)typingIndicatorDuration;
- (_Bool)isDMExpandedInfoAvailable;
- (_Bool)isDMConversationInfoSharedContentEnabled;
- (_Bool)isDMBadgeCalculatedFromClientUntrustedCountEnabled;
@property(readonly, nonatomic) id <T1CardViewRegistry> cardRegistry;
- (_Bool)isBetaBugButtonEnabled;
- (void)unmuteUserWithUserReference:(id)arg1 unmuteFleets:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unmuteFleetsForUserID:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)muteFleetsForUserID:(long long)arg1 completion:(CDUnknownBlockType)arg2;
@property(nonatomic, readonly) id <_TtP9T1Twitter24PeopleAddressBookService_> addressBookService;
@property(nonatomic, readonly) T1AccountNotificationSettingsManager *notificationSettingsManager;
- (unsigned long long)unseenUntrustedDMCountForBadging;
- (unsigned long long)unseenDMCountForBadging;
@property(nonatomic, readonly) TFNDirectMessageService *directMessages;
- (long long)articlesNudgeRateLimit;
- (id)articlesNudgeNewsDomainSetWithImpression:(_Bool)arg1;
- (void)markAllFollowerRequestsAsRead;
- (void)_tfn_setNeedsFollowerRequestsRefresh;
- (_Bool)hasFollowerRequestFromUserWithUserID:(long long)arg1;
- (void)denyFollowerRequestFromUserWithUserReference:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_tfn_removeFollowerRequest:(id)arg1;
- (void)acceptFollowerRequestFromUserWithUserReference:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_tfn_fetchFollowerIDsWithCursor:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)unreadFollowerRequestsCountForceRefresh:(_Bool)arg1;
- (id)followerRequestsForceRefresh:(_Bool)arg1;
- (id)_followCountUpdatersForFollowing:(_Bool)arg1;
- (void)_handleFollowCountsForCompletionOfRequestToUserWithID:(id)arg1 forFollowing:(_Bool)arg2 success:(_Bool)arg3;
- (void)_handleFollowCountsStartOfRequestToUserWithID:(id)arg1 forFollowing:(_Bool)arg2;
- (void)_expireExtendedProfilesForUserID:(id)arg1;
- (void)liveUnfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)deviceUnfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)unfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 associatedStatusForLeaveBehindConfirmation:(id)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)_sendFollowRequest:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_followUser:(id)arg1 withFollowRequest:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)followUserWithFollowRequest:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)liveFollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 supportsChallenges:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)deviceFollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 supportsChallenges:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)followUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 supportsChallenges:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)cancelFollowRequestWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)enableRetweetsForUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)disableRetweetsForUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)lookupFullRelationshipForUserID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)lookupFullRelationshipForUserID:(long long)arg1;
- (void)_lookupRelationshipsForUsersWithIDs:(id)arg1 usersWithUsernames:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)lookupRelationshipsForUsers:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)lookupRelationshipsForUsers:(id)arg1;
- (CDUnknownBlockType)_updatePinnedTweetResponseBlockWithResponseBlock:(CDUnknownBlockType)arg1 pendingStateToken:(id)arg2;
- (void)unpinTweetWithID:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)pinTweetWithID:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateProfileName:(id)arg1 username:(id)arg2 email:(id)arg3 urlString:(id)arg4 location:(id)arg5 placeID:(id)arg6 description:(id)arg7 birthday:(id)arg8 responseBlock:(CDUnknownBlockType)arg9;
- (void)removeBannerImageWithResponseBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isProfileImageUploadHashingEnabled) _Bool profileImageUploadHashingEnabled;
@property(readonly, nonatomic, getter=isMediaUploadHashingEnabled) _Bool mediaUploadHashingEnabled;
@property(readonly, nonatomic, getter=isDmPerformanceMediaLoggingEnabled) _Bool dmPerformanceMediaLoggingEnabled;
@property(readonly, nonatomic, getter=isMediaUploadAllPerformanceLoggingEnabled) _Bool mediaUploadAllPerformanceLoggingEnabled;
@property(readonly, nonatomic, getter=isMediaUploadLocalTweetVideoPerformanceLoggingEnabled) _Bool mediaUploadLocalTweetVideoPerformanceLoggingEnabled;
@property(readonly, nonatomic) long long mediaAsyncUploadBestAllowedExportMode;
@property(readonly, nonatomic) unsigned long long mediaAsyncUploadMaxGifSizeInMBs;
@property(readonly, nonatomic) double mediaAsyncUploadMaxVideoDuration;
@property(readonly, nonatomic) long long photoLosslessCompressionMaximumResolution;
@property(readonly, nonatomic) long long photoLowBandwidthUploadDimension;
@property(readonly, nonatomic) long long photoMediumBandwidthUploadDimension;
@property(readonly, nonatomic) long long photoHighBandwidthUploadDimension;
@property(readonly, nonatomic) long long mediaUploadGroupPolicy;
@property(readonly, nonatomic) long long videosSegmentedUploadMaxiumRetryPerRequest;
@property(readonly, nonatomic) long long videosSegmentedUploadMinimumSegmentSize;
@property(readonly, nonatomic) long long videosSegmentedUploadSegmentSizeForPoorNetwork;
@property(readonly, nonatomic) long long videosSegmentedUploadSegmentSizeForGoodNetwork;
@property(readonly, nonatomic) long long videosSegmentedUploadSegmentSizeForGreatNetwork;
@property(readonly, nonatomic, getter=isVideosSegmentedUploadSegmentSizeBackoffPolicyEnabled) _Bool videosSegmentedUploadSegmentSizeBackoffPolicyEnabled;
@property(readonly, nonatomic) long long photosSegmentedUploadMaxiumRetryPerRequest;
@property(readonly, nonatomic) long long photosSegmentedUploadMinimumSegmentSize;
@property(readonly, nonatomic) long long photosSegmentedUploadSegmentSizeForGreatNetwork;
@property(readonly, nonatomic) long long photosSegmentedUploadSegmentSizeForGoodNetwork;
@property(readonly, nonatomic) long long photosSegmentedUploadSegmentSizeForPoorNetwork;
@property(readonly, nonatomic, getter=isPhotosSegmentedUploadSegmentSizeBackoffPolicyEnabled) _Bool photosSegmentedUploadSegmentSizeBackoffPolicyEnabled;
- (void)_postNotificationWithName:(id)arg1 error:(id)arg2;
@property(readonly, nonatomic) NSArray *sulCategories;
- (void)updateSULCategories;
@property(readonly, nonatomic) _Bool isProtectedUser;
@property(readonly, nonatomic) id <TFSTwitterAPICommandContext> tbc_apiCommandContext;
@property(readonly, nonatomic) TFSTwitterAPICommandService *tbc_apiCommandService;
- (_Bool)isMixedMediaGIFCreationEnabled;
- (_Bool)preferToCancelOnBackgroundTaskExpiration;
- (_Bool)isTweetOutboxIgnoreNetworkReachabilityEnabled;
- (id)scribeThriftGroups;
- (id)scribeGroups;
- (id)scribeThriftGroup;
- (id)scribeGroup;
- (void)private_updateConversationMutingForStatus:(id)arg1 mute:(_Bool)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)unmuteConversation:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)muteConversation:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)warmCardPersistedStateManager;
@property(readonly, nonatomic) TFNTwitterCardPersistedStateManager *cardPersistedStateManager;
- (id)_tfn_baseSignedMutableURLRequest:(id)arg1 parameters:(id)arg2;
- (id)authenticatedMutableURLRequestForURLRequest:(id)arg1 parameters:(id)arg2 error:(id *)arg3;
@property(readonly, nonatomic) long long analyticsType;
@property(readonly, nonatomic) NSArray *advertiserAccountServiceLevels;
@property(readonly, nonatomic) long long advertiserAccountType;
- (void)_removeResolvedTeamsInvitationFromUserReference:(id)arg1;
- (void)denyTeamsInvitationFromUserReference:(id)arg1;
- (void)acceptTeamsInvitationFromUserReference:(id)arg1;
- (void)_fetchTeamsInvitationWithCursorWithResponseBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)pendingTeamsInvitationCountForceRefresh:(_Bool)arg1;
- (id)pendingTeamsInvitationForceRefresh:(_Bool)arg1;
- (_Bool)hasContributee;
- (_Bool)isDisabledForTeamsAccount;
- (id)headerStringForTeams;
- (_Bool)isAccountSettingsAccessible;
- (_Bool)canQuitTeam;
- (_Bool)canManageTeam;
- (_Bool)isProfileAccessible;
- (_Bool)isOwner;
- (_Bool)isAdministrator;
- (_Bool)isContributor;
@property(readonly, nonatomic) _Bool isIdentityBadgingEnabled;
@property(readonly, nonatomic) _Bool isBirdwatchHistoryEnabled;
@property(readonly, nonatomic) _Bool isBirdwatchConsumptionEnabled;
@property(readonly, nonatomic) _Bool isGraphQLTweetResultEnabled;
@property(readonly, nonatomic) long long scribeAPIErrorSampleSize;
@property(readonly, nonatomic) long long scribeAPISampleSize;
- (id)legacyClientEventDenyList;
- (_Bool)isProvisionalAuthorizationEnabled;
- (_Bool)isQuoteTweetCombinedEnabled;
- (_Bool)isLivePipelineEventsScribeEnabled;
- (_Bool)isQRLoginEnabled;
- (_Bool)isGraphQLStatusesShowGraphQLModelBuilderValidateParsingEnabled;
- (_Bool)isGraphQLStatusesShowGraphQLModelBuilderEnabled;
- (_Bool)_isVITModeEnabled;
- (_Bool)isDMConvoUpdateNameUsingGraphQLEnabled;
- (_Bool)isConversationControlFlexibleParticipationEnabled;
- (_Bool)isDataSensitiveCountryDefaultsEnabled;
- (_Bool)isDataInsensitiveCountryDefaultsEnabled;
- (id)_dataSensitiveDefaultsBucketName;
- (id)countrySettingCodesAllowList;
- (long long)oAuthCredentialsKeychainGroupMigrationMaximumErrorCount;
- (_Bool)shouldUseChangePasswordEndpoint;
- (_Bool)isOAuthCredentialsKeychainGroupMigrationEnabled;
- (_Bool)shouldRunFeatureSwitchesAATest;
- (id)perftownEventAllowList;
- (_Bool)isPerftownEnabled;
- (_Bool)isStackTraceForPromotedEventErrorsEnabled;
- (double)intervalMultiplierForLoginChallengePolling;
- (long long)pollingIntervalForLoginChallenge;
- (long long)followersCountForTitleMinimum;
- (long long)followersCountForTitleEnabled;
- (_Bool)isVitVerifiedFollowersViewEnabled;
- (_Bool)isVitScopedNotificationsEnabled;
- (_Bool)isVitNotificationFilteringEnabled;
- (void)_applyInitialFeatureSwitches;
@property(readonly, nonatomic) id <TFNTwitterFeatureSwitches> featureSwitches;
- (void)removeSavedSearch:(id)arg1;
- (void)addSavedSearch:(id)arg1;
- (_Bool)containsSavedSearch:(id)arg1;
- (id)savedSearches;
- (void)updateSavedSearches;
- (_Bool)isLoadingSavedSearches;
- (void)_tfn_logNoImpressionErrorForStatus:(id)arg1 promotedEvent:(long long)arg2;
- (void)_tfn_logPromotedFlybyImpressionEventIfNeededOnStatus:(id)arg1 extraParameters:(id)arg2;
- (void)logPromotedImpressionEventIfNeededOnStatus:(id)arg1 viewController:(id)arg2 extraParameters:(id)arg3;
- (void)logPromotedEventWithParameters:(id)arg1;
- (void)logPromotedEventIfNeeded:(long long)arg1 onTrend:(id)arg2;
- (void)logPromotedEventIfNeeded:(long long)arg1 onStatus:(id)arg2 extraParameters:(id)arg3;
- (void)logPromotedEventIfNeeded:(long long)arg1 onStatus:(id)arg2;
- (void)logPromotedUserEventIfNeeded:(long long)arg1 onUserPromotedContent:(id)arg2;
- (void)_getTOTPKeyRemote:(CDUnknownBlockType)arg1;
- (void)updateTOTPKey;
- (void)qrLoginSubmitWithQRCode:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)qrLoginValidateWithQRCode:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateLoginVerificationFromKeychain;
- (void)_makeNewOnlineCode:(CDUnknownBlockType)arg1;
- (_Bool)_makeNewOfflineCode;
- (void)makeNewBackupCode:(CDUnknownBlockType)arg1;
- (void)_currentOnlineCode:(CDUnknownBlockType)arg1;
- (id)_currentOfflineCode;
- (void)currentBackupCode:(CDUnknownBlockType)arg1;
- (_Bool)validateLegacyPushKeyIfNecessary;
- (id)signLoginVerificationChallenge:(id)arg1;
- (void)unregisterDeviceForLoginVerification:(CDUnknownBlockType)arg1 useInRequestOAuth:(_Bool)arg2;
- (void)_unenroll:(CDUnknownBlockType)arg1;
- (int)_modeForEnrollmentStringValue:(id)arg1;
- (void)checkForLoginVerification:(CDUnknownBlockType)arg1;
- (void)updateTwoFactorAuthStatusFromServer:(CDUnknownBlockType)arg1;
- (void)registerForPushLoginVerification:(CDUnknownBlockType)arg1;
- (void)_delLoginVerificationStatus;
- (void)updateTimesShownUserMuteConfirmationAlert;
- (_Bool)shouldDisplayUserMuteConfirmationAlert;
- (void)updateSettingsMarkMediaAsSensitiveEnabled:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsPasswordResetProtectEnabled:(_Bool)arg1 password:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsPersonalizedTrendsEnabled:(_Bool)arg1 location:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsAllPersonalizations:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsSharingDataWithPartnersPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsLocationHistoryPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsLoggedOutDevicesPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsCookiesPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAdsPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowAuthenticatedPeriscopeRequests:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsMentionFilter:(unsigned long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsUniversalQualityFilter:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowAutomatedMute:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowAbuseFiltering:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsCountryCode:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowMediaTagging:(unsigned long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAccountProtection:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAcceptDirectMessagesFrom:(unsigned long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmNSFWMediaFilter:(unsigned long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmLowQualityFilter:(unsigned long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmReadReceipts:(unsigned long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsScreenName:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsPassword:(id)arg1 passwordConfirmation:(id)arg2 currentPassword:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)updateSettingsPassword:(id)arg1 currentPassword:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsEmail:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsEmail:(id)arg1 password:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsDiscoverableByPhone:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDiscoverableByEmail:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly) Class superclass;

@end

