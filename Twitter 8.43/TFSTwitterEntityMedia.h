//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TFSTwitterCore/TFSTwitterEntityURL.h>

@class NSDictionary, NSNumber, NSString, TFSTwitterEntityMediaFeatureSet, TFSTwitterEntityMediaSourceUser, TFSTwitterEntityMediaVideoInfo, TFSTwitterMediaColorPalette, TFSTwitterRects, TFSTwitterTagSet;

@interface TFSTwitterEntityMedia : TFSTwitterEntityURL
{
    _Bool _monetizable;
    _Bool _dmcaRestricted;
    long long _mediaType;
    NSString *_mediaURL;
    NSString *_mediaID;
    NSString *_mediaKey;
    NSString *_sourceStatusID;
    NSNumber *_sourceUserID;
    TFSTwitterEntityMediaVideoInfo *_videoInfo;
    TFSTwitterRects *_focusRects;
    TFSTwitterEntityMediaFeatureSet *_mediaFeatures;
    TFSTwitterTagSet *_tagSet;
    NSString *_title;
    NSString *_mediaDescription;
    NSString *_watchNowCTAURL;
    NSString *_visitSiteCTAURL;
    NSString *_appStoreId;
    NSString *_iPadAppStoreId;
    TFSTwitterEntityMediaSourceUser *_sourceUser;
    NSString *_altText;
    NSString *_mediaAvailabilityReason;
    NSString *_copyrightHolderName;
    unsigned long long _videoViewCount;
    NSDictionary *_hlsPlaylists;
    TFSTwitterMediaColorPalette *_mediaPalette;
    struct CGSize _mediaDimensions;
}

+ (id)focusRectsFromOriginalInfoDictionary:(id)arg1 imageDimensions:(struct CGSize)arg2;
+ (id)encodableName;
- (void).cxx_destruct;
@property(readonly, nonatomic) TFSTwitterMediaColorPalette *mediaPalette; // @synthesize mediaPalette=_mediaPalette;
@property(readonly, copy, nonatomic) NSDictionary *hlsPlaylists; // @synthesize hlsPlaylists=_hlsPlaylists;
@property(readonly, nonatomic) unsigned long long videoViewCount; // @synthesize videoViewCount=_videoViewCount;
@property(readonly, copy, nonatomic) NSString *copyrightHolderName; // @synthesize copyrightHolderName=_copyrightHolderName;
@property(readonly, copy, nonatomic) NSString *mediaAvailabilityReason; // @synthesize mediaAvailabilityReason=_mediaAvailabilityReason;
@property(readonly, nonatomic) _Bool dmcaRestricted; // @synthesize dmcaRestricted=_dmcaRestricted;
@property(readonly, copy, nonatomic) NSString *altText; // @synthesize altText=_altText;
@property(readonly, nonatomic) TFSTwitterEntityMediaSourceUser *sourceUser; // @synthesize sourceUser=_sourceUser;
@property(readonly, copy, nonatomic) NSString *iPadAppStoreId; // @synthesize iPadAppStoreId=_iPadAppStoreId;
@property(readonly, copy, nonatomic) NSString *appStoreId; // @synthesize appStoreId=_appStoreId;
@property(readonly, copy, nonatomic) NSString *visitSiteCTAURL; // @synthesize visitSiteCTAURL=_visitSiteCTAURL;
@property(readonly, copy, nonatomic) NSString *watchNowCTAURL; // @synthesize watchNowCTAURL=_watchNowCTAURL;
@property(readonly, copy, nonatomic) NSString *mediaDescription; // @synthesize mediaDescription=_mediaDescription;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) _Bool monetizable; // @synthesize monetizable=_monetizable;
@property(readonly, nonatomic) TFSTwitterTagSet *tagSet; // @synthesize tagSet=_tagSet;
@property(readonly, nonatomic) TFSTwitterEntityMediaFeatureSet *mediaFeatures; // @synthesize mediaFeatures=_mediaFeatures;
@property(readonly, nonatomic) TFSTwitterRects *focusRects; // @synthesize focusRects=_focusRects;
@property(readonly, nonatomic) struct CGSize mediaDimensions; // @synthesize mediaDimensions=_mediaDimensions;
@property(readonly, nonatomic) TFSTwitterEntityMediaVideoInfo *videoInfo; // @synthesize videoInfo=_videoInfo;
@property(readonly, copy, nonatomic) NSNumber *sourceUserID; // @synthesize sourceUserID=_sourceUserID;
@property(readonly, copy, nonatomic) NSString *sourceStatusID; // @synthesize sourceStatusID=_sourceStatusID;
@property(readonly, copy, nonatomic) NSString *mediaKey; // @synthesize mediaKey=_mediaKey;
@property(readonly, copy, nonatomic) NSString *mediaID; // @synthesize mediaID=_mediaID;
@property(readonly, copy, nonatomic) NSString *mediaURL; // @synthesize mediaURL=_mediaURL;
@property(readonly, nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
- (id)assimilateInto:(id)arg1;
- (id)imageFeatures;
- (_Bool)isDeadVideo;
- (_Bool)isPlayable;
- (_Bool)hasAltText;
- (_Bool)representsURL:(id)arg1;
- (id)imageURLString;
- (struct CGSize)imageDimensions;
- (_Bool)isMedia;
- (_Bool)isVideo;
- (_Bool)isImage;
- (_Bool)isAnimatedGif;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)_setEntityMediaPropertiesForCopy:(id)arg1;
- (void)_tfs_setMediaPalette:(id)arg1 forEntityCopy:(id)arg2;
- (id)entityMediaByRemovingTaggedUserWithUserID:(long long)arg1;
- (id)_tfs_copyWithMediaPalette:(id)arg1 videoViewCount:(unsigned long long)arg2;
- (id)copyWithAltText:(id)arg1;
- (id)copyWithHTMLTitle:(id)arg1;
- (id)copyWithURL:(id)arg1;
- (id)copyWithCustomTitle:(id)arg1;
- (id)copyWithOriginalDisplayURL:(id)arg1;
- (id)copyWithRange:(struct _NSRange)arg1;
- (void)encodeWithEncoder:(id)arg1;
- (id)initWithDecoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1 strict:(_Bool)arg2 fromGraphQL:(_Bool)arg3;
- (id)initWithURL:(id)arg1 mediaType:(long long)arg2 mediaDimensions:(struct CGSize)arg3;
- (id)initWithURL:(id)arg1 mediaType:(long long)arg2 mediaPalette:(id)arg3;
- (id)initWithMediaType:(long long)arg1;
- (id)initWithMediaType:(long long)arg1 videoInfo:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 url:(id)arg2 expandedURL:(id)arg3 originalDisplayURL:(id)arg4 htmlTitle:(id)arg5 customTitle:(id)arg6 mediaType:(long long)arg7 mediaURL:(id)arg8 mediaDimensions:(struct CGSize)arg9 focusRects:(id)arg10 mediaFeatures:(id)arg11 mediaID:(id)arg12 mediaKey:(id)arg13 sourceStatusID:(id)arg14 sourceUserID:(id)arg15 videoInfo:(id)arg16 tagSet:(id)arg17 monetizable:(_Bool)arg18 title:(id)arg19 mediaDescription:(id)arg20 watchNowCTAURL:(id)arg21 visitSiteCTAURL:(id)arg22 appStoreId:(id)arg23 iPadAppStoreId:(id)arg24 sourceUser:(id)arg25 altText:(id)arg26 dmcaRestricted:(_Bool)arg27 mediaAvailabilityReason:(id)arg28 copyrightHolderName:(id)arg29 videoViewCount:(unsigned long long)arg30 hlsPlaylists:(id)arg31 mediaPalette:(id)arg32;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)initWithRange:(struct _NSRange)arg1 url:(id)arg2 expandedURL:(id)arg3 originalDisplayURL:(id)arg4 htmlTitle:(id)arg5 customTitle:(id)arg6;
- (id)asDisplayTextRange;

@end

