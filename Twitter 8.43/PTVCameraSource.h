//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PeriscopeSDK/AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h>
#import <PeriscopeSDK/AVCaptureMetadataOutputObjectsDelegate-Protocol.h>
#import <PeriscopeSDK/AVCapturePhotoCaptureDelegate-Protocol.h>
#import <PeriscopeSDK/AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h>
#import <PeriscopeSDK/PTVVideoSource-Protocol.h>

@class AVCaptureAudioDataOutput, AVCaptureConnection, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCapturePhotoOutput, AVCaptureSession, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, NSArray, NSDictionary, NSMutableArray, NSString, PTVAACEncoder, TAVSharedAudioSessionSuspensionToken;
@protocol OS_dispatch_queue, PTVVideoSourceDelegate;

@interface PTVCameraSource : NSObject <AVCapturePhotoCaptureDelegate, PTVVideoSource, AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureMetadataOutputObjectsDelegate>
{
    NSDictionary *_settings;
    NSObject<OS_dispatch_queue> *_cameraProcessingQueue;
    TAVSharedAudioSessionSuspensionToken *_sharedAudioSessionToken;
    AVCaptureDevice *_inputCamera;
    AVCaptureDevice *_microphone;
    AVCaptureDeviceInput *_videoInput;
    AVCaptureVideoDataOutput *_videoOutput;
    long long _desiredCameraPosition;
    AVCaptureConnection *_videoConnection;
    long long _cameraState;
    AVCapturePhotoOutput *_photoOutput;
    AVCaptureConnection *_photoConnection;
    NSMutableArray *_photoCaptureBlockQueue;
    long long _flashMode;
    AVCaptureConnection *_audioConnection;
    AVCaptureAudioDataOutput *_audioOutput;
    PTVAACEncoder *_audioEncoder;
    NSObject<OS_dispatch_queue> *_audioCaptureQueue;
    AVCaptureMetadataOutput *_metadataOutput;
    NSObject<OS_dispatch_queue> *_metadataOutputQueue;
    NSArray *_receivedMetadataObjects;
    struct CGSize _size;
    int _inputs;
    _Bool _mute;
    float _zoomFactor;
    double _sourceFrameRate;
    _Bool _shouldBlank;
    int _audioRate;
    double _audioFrequency;
    id _this;
    struct CGSize _cameraOutput;
    _Bool _cameraValid;
    long long _orientation;
    long long _captureOrientation;
    _Bool _enableStabilisation;
    _Bool _saveAsHQEnabled;
    _Bool audioPresent;
    _Bool isEncoding;
    _Bool _isActive;
    _Bool _inStartSession;
    NSObject<PTVVideoSourceDelegate> *delegate;
    AVCaptureVideoPreviewLayer *_videoPreviewLayer;
    long long _audioOutputMode;
    AVCaptureSession *_captureSession;
}

+ (id)createJPEGSnapshot:(struct __CVBuffer *)arg1 orientation:(double)arg2;
+ (_Bool)canGetCameraForPosition:(long long)arg1;
- (void).cxx_destruct;
@property(retain) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property _Bool inStartSession; // @synthesize inStartSession=_inStartSession;
@property _Bool isActive; // @synthesize isActive=_isActive;
@property long long audioOutputMode; // @synthesize audioOutputMode=_audioOutputMode;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *videoPreviewLayer; // @synthesize videoPreviewLayer=_videoPreviewLayer;
@property(readonly) _Bool cameraValid; // @synthesize cameraValid=_cameraValid;
@property(readonly) struct CGSize previewSize; // @synthesize previewSize=_cameraOutput;
@property(readonly) struct CGSize imageSize; // @synthesize imageSize=_size;
@property _Bool isEncoding; // @synthesize isEncoding;
@property(retain) NSObject<PTVVideoSourceDelegate> *delegate; // @synthesize delegate;
@property _Bool audioPresent; // @synthesize audioPresent;
- (void)captureOutput:(id)arg1 didFinishProcessingPhoto:(id)arg2 error:(id)arg3;
- (void)updateStabilisationMode;
@property _Bool enableStabilisation;
- (_Bool)enableStabilisationForCameraPosition;
- (void)cameraProcessingQueue_setTorchMode:(long long)arg1;
- (void)setTorchMode:(long long)arg1;
- (void)setPhotoFlashMode:(long long)arg1;
- (void)cameraProcessingQueue_capturePhoto;
- (void)capturePhotoWithCompletion:(CDUnknownBlockType)arg1;
- (id)settingsForPhotoCapture;
- (void)updatePhotoConnectionWithCaptureOrientation;
- (void)addPhotoOutput;
- (_Bool)addAudioOutput;
@property(readonly) long long captureOrientation;
- (_Bool)updateCaptureSessionPreset;
- (_Bool)addVideoIO;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)analyzeSampleBufferForPeakSample:(struct opaqueCMSampleBuffer *)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
@property(readonly) _Bool receivingSilentAudio;
- (void)resetFocusAndExposure;
- (void)focusAndExposureAreaDidChange:(id)arg1;
- (void)setFocusAndExposure:(struct CGPoint)arg1;
@property(readonly) _Bool canSetFocusPoint;
- (void)onAudioData:(id)arg1 pts:(double)arg2;
- (void)setCameraPosition:(long long)arg1;
- (_Bool)audioOutputEnabled;
- (_Bool)canSwitchToPosition:(long long)arg1;
- (void)setZoomAndRate:(id)arg1;
- (id)getCameraForPosition:(long long)arg1;
- (void)stopEncoding;
- (_Bool)startEncoding;
- (void)createAudioEncoder:(const struct AudioStreamBasicDescription *)arg1;
- (void)handleInterfaceOrientation:(long long)arg1;
- (void)updateCaptureOrientationWithAngle:(double)arg1;
- (long long)validDevicePositionForDesiredPosition:(long long)arg1;
- (void)shutdown;
- (void)startShutdown;
- (void)resumeCapture;
- (void)pauseCapture;
@property(readonly, nonatomic) long long preferredOrientation;
- (void)cameraProcessingQueue_avCaptureInputPortFormatDescriptionDidChange:(id)arg1;
- (void)avCaptureInputPortFormatDescriptionDidChange:(id)arg1;
- (void)avCaptureSessionRuntimeError:(id)arg1;
- (void)startCamera;
@property(readonly) long long cameraType;
- (struct opaqueCMFormatDescription *)audioEncoderFormat;
@property int audioRate;
@property _Bool mute;
@property(readonly) _Bool hasOpticalZoom;
@property(readonly) float maxZoomFactor;
@property float zoomFactor;
@property(readonly) double frameRate;
- (_Bool)setInterfaceOrientation:(long long)arg1;
@property long long cameraState;
@property(readonly) double cameraOrientation;
@property(readonly) _Bool suppliesOrientation;
- (void)requestAudioFrequency:(int)arg1;
- (id)initForPosition:(long long)arg1 size:(struct CGSize)arg2 frameRate:(double)arg3 audioFrequency:(double)arg4 saveAsHQEnabled:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

