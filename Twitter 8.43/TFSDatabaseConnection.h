//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary;
@protocol TFSDatabaseLog;

@interface TFSDatabaseConnection : NSObject
{
    _Bool _usesPreparedStatementCache;
    _Bool _supportsIncrementalVacuum;
    id <TFSDatabaseLog> _log;
    struct sqlite3 *_sqliteConnection;
    NSMutableDictionary *_sqlToPreparedStatements;
}

+ (id)newConnection;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *sqlToPreparedStatements; // @synthesize sqlToPreparedStatements=_sqlToPreparedStatements;
@property(readonly, nonatomic) struct sqlite3 *sqliteConnection; // @synthesize sqliteConnection=_sqliteConnection;
@property(retain, nonatomic) id <TFSDatabaseLog> log; // @synthesize log=_log;
@property(nonatomic) _Bool supportsIncrementalVacuum; // @synthesize supportsIncrementalVacuum=_supportsIncrementalVacuum;
@property(nonatomic) _Bool usesPreparedStatementCache; // @synthesize usesPreparedStatementCache=_usesPreparedStatementCache;
- (void)dealloc;
- (void)close;
- (_Bool)backupToPath:(id)arg1;
- (_Bool)column:(id)arg1 existsInTable:(id)arg2;
- (_Bool)isAutocommitEnabled;
- (void)_tfs_logErrorWithDomain:(id)arg1 code:(long long)arg2 message:(id)arg3;
- (void)_tfs_logSQLiteError;
- (_Bool)_tfs_isResultCode:(int)arg1 equalToExpectedResultCode:(int)arg2;
- (_Bool)isDone:(int)arg1;
- (_Bool)isOK:(int)arg1;
- (id)_tfs_valueFromExecutingSQL:(id)arg1 withParameters:(id)arg2 columnReadFunction:(CDUnknownFunctionPointerType)arg3;
- (id)numberFromExecutingSQL:(id)arg1 withParameters:(id)arg2;
- (id)numberFromExecutingSQL:(id)arg1;
- (id)stringFromExecutingSQL:(id)arg1 withParameters:(id)arg2;
- (id)stringFromExecutingSQL:(id)arg1;
- (_Bool)executeSQL:(id)arg1 withParameters:(id)arg2 enumerateRowsWithBlock:(CDUnknownBlockType)arg3;
- (_Bool)executeSQL:(id)arg1 withParameters:(id)arg2;
- (_Bool)executeSQL:(id)arg1;
- (_Bool)_tfs_openPath:(id)arg1;
- (_Bool)openInMemory;
- (_Bool)openPath:(id)arg1;
- (void)withLog:(id)arg1 perform:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long freePageCount;
@property(readonly, nonatomic) long long pageCount;
@property(readonly, nonatomic) long long totalChangedRowCount;
@property(readonly, nonatomic) long long mostRecentChangedRowCount;

@end

