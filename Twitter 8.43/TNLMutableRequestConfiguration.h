//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TwitterNetworkLayer/TNLRequestConfiguration.h>

@class NSArray, NSHTTPCookieStorage, NSString, NSURLCache, NSURLCredentialStorage;
@protocol TNLContentEncoder, TNLRequestRetryPolicyProvider;

@interface TNLMutableRequestConfiguration : TNLRequestConfiguration
{
}

- (void)configureAsLowPriority;
@property(nonatomic) _Bool shouldUseExtendedBackgroundIdleMode; // @dynamic shouldUseExtendedBackgroundIdleMode;
@property(nonatomic) long long multipathServiceType; // @dynamic multipathServiceType;
@property(retain, nonatomic) NSHTTPCookieStorage *cookieStorage; // @dynamic cookieStorage;
@property(retain, nonatomic) NSURLCache *URLCache; // @dynamic URLCache;
@property(retain, nonatomic) NSURLCredentialStorage *URLCredentialStorage; // @dynamic URLCredentialStorage;
@property(nonatomic) _Bool shouldLaunchAppForBackgroundEvents; // @dynamic shouldLaunchAppForBackgroundEvents;
@property(copy, nonatomic) NSString *sharedContainerIdentifier; // @dynamic sharedContainerIdentifier;
@property(nonatomic, getter=isDiscretionary) _Bool discretionary; // @dynamic discretionary;
@property(nonatomic) _Bool allowsCellularAccess; // @dynamic allowsCellularAccess;
@property(nonatomic) _Bool shouldSetCookies; // @dynamic shouldSetCookies;
@property(nonatomic) unsigned long long cookieAcceptPolicy; // @dynamic cookieAcceptPolicy;
@property(nonatomic) unsigned long long networkServiceType; // @dynamic networkServiceType;
@property(nonatomic) unsigned long long cachePolicy; // @dynamic cachePolicy;
@property(nonatomic) double deferrableInterval; // @dynamic deferrableInterval;
@property(nonatomic) double operationTimeout; // @dynamic operationTimeout;
@property(nonatomic) double attemptTimeout; // @dynamic attemptTimeout;
@property(nonatomic) double idleTimeout; // @dynamic idleTimeout;
@property(copy, nonatomic) NSArray *additionalContentDecoders; // @dynamic additionalContentDecoders;
@property(retain, nonatomic) id <TNLContentEncoder> contentEncoder; // @dynamic contentEncoder;
@property(retain, nonatomic) id <TNLRequestRetryPolicyProvider> retryPolicyProvider; // @dynamic retryPolicyProvider;
@property(nonatomic) long long responseComputeHashAlgorithm; // @dynamic responseComputeHashAlgorithm;
@property(nonatomic) _Bool skipHostSanitization; // @dynamic skipHostSanitization;
@property(nonatomic) _Bool contributeToExecutingNetworkConnectionsCount; // @dynamic contributeToExecutingNetworkConnectionsCount;
@property(nonatomic) long long connectivityOptions; // @dynamic connectivityOptions;
@property(nonatomic) long long protocolOptions; // @dynamic protocolOptions;
@property(nonatomic) long long responseDataConsumptionMode; // @dynamic responseDataConsumptionMode;
@property(nonatomic) long long redirectPolicy; // @dynamic redirectPolicy;
@property(nonatomic) long long executionMode; // @dynamic executionMode;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

