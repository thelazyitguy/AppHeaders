//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIButton.h>

#import <TFNUI/TFNHapticFeedback-Protocol.h>
#import <TFNUI/TFNLegacyButtonAppearanceDelegate-Protocol.h>

@class NSAttributedString, NSString, TFNLegacyButtonActiveAnimation, TFNLegacyButtonAppearance, TFNLegacyButtonAppearanceImpl, TFNLegacyButtonAppearanceKey, UIColor, UIImage, UIImageView, UIImpactFeedbackGenerator, UILabel, UINotificationFeedbackGenerator, UISelectionFeedbackGenerator;
@protocol TFNLegacyButtonAnimationCoordinator, TFNLegacyButtonImageProvider;

@interface TFNLegacyButton : UIButton <TFNLegacyButtonAppearanceDelegate, TFNHapticFeedback>
{
    UILabel *_localTitleLabel;
    UIImageView *_localImageView;
    UIImageView *_backgroundImageView;
    UIImageView *_knockoutImageView;
    struct {
        unsigned int havePerformedInitialLayout:1;
        unsigned int shouldUpdateLayout:1;
        unsigned int layoutIsInProgress:1;
    } _flags;
    _Bool _enforcesDefaultButtonMetrics;
    _Bool _tfs_shouldFlipImageForRightToLeftTransform;
    _Bool _shouldTriggerHapticFeedback;
    _Bool _didInhibitLayout;
    UIImpactFeedbackGenerator *_impactFeedbackGenerator;
    unsigned long long _size;
    unsigned long long _strength;
    unsigned long long _variant;
    unsigned long long _presentation;
    unsigned long long _currentSize;
    unsigned long long _currentStrength;
    unsigned long long _currentVariant;
    unsigned long long _currentPresentation;
    id <TFNLegacyButtonAnimationCoordinator> _animationCoordinator;
    TFNLegacyButtonAppearanceImpl *_appearanceImpl;
    TFNLegacyButtonAppearanceKey *_visibleAppearanceKey;
    unsigned long long _inhibitLayoutCount;
}

+ (_Bool)tfn_defaultShouldFlipForRightToLeftTransform;
+ (struct CGSize)sizeForButtonWithSize:(unsigned long long)arg1 strength:(unsigned long long)arg2 variant:(unsigned long long)arg3 presentation:(unsigned long long)arg4 title:(id)arg5 attributedTitle:(id)arg6 imageName:(id)arg7 contentEdgeInsets:(struct UIEdgeInsets *)arg8 titleEdgeInsets:(struct UIEdgeInsets *)arg9 imageEdgeInsets:(struct UIEdgeInsets *)arg10 typographyScaleFactor:(double)arg11;
+ (id)buttonWithSize:(unsigned long long)arg1 strength:(unsigned long long)arg2 variant:(unsigned long long)arg3 presentation:(unsigned long long)arg4;
+ (id)keyPathsForValuesAffectingCurrentImageEdgeInsets;
+ (id)keyPathsForValuesAffectingCurrentTitleEdgeInsets;
+ (id)keyPathsForValuesAffectingCurrentContentEdgeInsets;
+ (id)keyPathsForValuesAffectingCurrentTouchInsets;
+ (id)keyPathsForValuesAffectingImageCurrentlyFlipsHorizontallyForRTLLanguageDirection;
+ (id)keyPathsForValuesAffectingCurrentImagePosition;
+ (id)keyPathsForValuesAffectingTintColorIsCurrentlyAppliedToImage;
+ (id)keyPathsForValuesAffectingCurrentTintColor;
- (void).cxx_destruct;
@property(nonatomic) _Bool didInhibitLayout; // @synthesize didInhibitLayout=_didInhibitLayout;
@property(nonatomic) unsigned long long inhibitLayoutCount; // @synthesize inhibitLayoutCount=_inhibitLayoutCount;
@property(retain, nonatomic) TFNLegacyButtonAppearanceKey *visibleAppearanceKey; // @synthesize visibleAppearanceKey=_visibleAppearanceKey;
@property(retain, nonatomic) TFNLegacyButtonAppearanceImpl *appearanceImpl; // @synthesize appearanceImpl=_appearanceImpl;
@property(nonatomic) _Bool shouldTriggerHapticFeedback; // @synthesize shouldTriggerHapticFeedback=_shouldTriggerHapticFeedback;
@property(nonatomic) __weak id <TFNLegacyButtonAnimationCoordinator> animationCoordinator; // @synthesize animationCoordinator=_animationCoordinator;
@property(nonatomic) _Bool tfs_shouldFlipImageForRightToLeftTransform; // @synthesize tfs_shouldFlipImageForRightToLeftTransform=_tfs_shouldFlipImageForRightToLeftTransform;
@property(nonatomic) _Bool enforcesDefaultButtonMetrics; // @synthesize enforcesDefaultButtonMetrics=_enforcesDefaultButtonMetrics;
@property(readonly, nonatomic) unsigned long long currentPresentation; // @synthesize currentPresentation=_currentPresentation;
@property(readonly, nonatomic) unsigned long long currentVariant; // @synthesize currentVariant=_currentVariant;
@property(readonly, nonatomic) unsigned long long currentStrength; // @synthesize currentStrength=_currentStrength;
@property(readonly, nonatomic) unsigned long long currentSize; // @synthesize currentSize=_currentSize;
@property(readonly, nonatomic) unsigned long long presentation; // @synthesize presentation=_presentation;
@property(readonly, nonatomic) unsigned long long variant; // @synthesize variant=_variant;
@property(readonly, nonatomic) unsigned long long strength; // @synthesize strength=_strength;
@property(readonly, nonatomic) unsigned long long size; // @synthesize size=_size;
@property(readonly, nonatomic) UIImpactFeedbackGenerator *impactFeedbackGenerator; // @synthesize impactFeedbackGenerator=_impactFeedbackGenerator;
- (void)performHapticFeedback:(unsigned long long)arg1;
- (void)prepareHapticFeedback:(unsigned long long)arg1;
- (void)backgroundImageWasModifiedForStates:(id)arg1;
- (void)displayImageWasModifiedForStates:(id)arg1;
- (void)titleWasModifiedForStates:(id)arg1;
- (void)_tfn_touchUpInside;
- (void)_tfn_touchDown;
- (void)_applyKnockoutImage;
- (void)_createKnockoutImageViewIfNil;
- (void)_createBackgroundImageViewIfNil;
- (void)_createImageViewIfNil;
- (void)_createTitleLabelIfNil;
- (struct CGRect)_tappableBounds;
- (void)_createNotificationObservers;
- (unsigned long long)accessibilityTraitsForState:(unsigned long long)arg1;
- (void)_applyAccessibilityForStateData:(id)arg1;
- (void)_applyKnockoutForAppearanceKey:(id)arg1;
- (void)_transformImageViewForAppearanceKey:(id)arg1;
- (void)_transformSubviewsForAppearanceKey:(id)arg1;
- (void)_positionSubviewsForStateData:(id)arg1;
- (void)_setVisualAppearanceKey:(id)arg1;
- (void)_tfn_applyTransformConfigToImageView;
- (void)_applyImageForStateData:(id)arg1;
- (void)_applyBackgroundImageForAppearanceKey:(id)arg1 stateData:(id)arg2;
- (void)_applyTitleForStateData:(id)arg1;
- (void)_applyViewAttributesForStateData:(id)arg1;
@property(readonly, nonatomic) TFNLegacyButtonAppearanceKey *appearanceKeyForCurrentState;
- (id)_visualFacadeForAppearanceKey:(id)arg1;
- (void)_transitionToNewButtonDescription:(_Bool)arg1 srcAppearanceKey:(id)arg2 dstAppearanceKey:(id)arg3 srcState:(unsigned long long)arg4;
- (void)buttonStateDidChangeFromState:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)convertToSize:(unsigned long long)arg1 strength:(unsigned long long)arg2 variant:(unsigned long long)arg3 presentation:(unsigned long long)arg4 animated:(_Bool)arg5;
- (void)removeCustomAppearanceForState:(unsigned long long)arg1 animated:(_Bool)arg2;
- (_Bool)hasCustomAppearanceForState:(unsigned long long)arg1;
- (void)setCustomAppearanceWithButton:(id)arg1 forState:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)tfn_fontSizeChanged;
- (void)applyVisualFacade:(id)arg1;
- (void)_applyAppearanceForAppearanceKey:(id)arg1 stateData:(id)arg2;
- (void)_performLayout;
- (void)_setNeedsInternalLayout;
- (void)layoutSubviews;
- (void)popInhibitLayout;
- (void)pushInhibitLayout;
- (void)setAlpha:(double)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSizeForState:(unsigned long long)arg1;
@property(readonly, nonatomic) struct CGSize intrinsicContentSize;
- (void)setFrame:(struct CGRect)arg1;
- (id)createImageView;
- (id)createTitleLabel;
@property(readonly, nonatomic) UIImageView *backgroundImageView;
@property(readonly, nonatomic) UIImageView *imageView;
@property(readonly, nonatomic) UILabel *titleLabel;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)contentRectForBounds:(struct CGRect)arg1;
- (void)setImageEdgeInsets:(struct UIEdgeInsets)arg1 forState:(unsigned long long)arg2;
- (struct UIEdgeInsets)imageEdgeInsetsForState:(unsigned long long)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets currentImageEdgeInsets;
- (void)setTitleEdgeInsets:(struct UIEdgeInsets)arg1 forState:(unsigned long long)arg2;
- (struct UIEdgeInsets)titleEdgeInsetsForState:(unsigned long long)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets currentTitleEdgeInsets;
- (void)setContentEdgeInsets:(struct UIEdgeInsets)arg1 forState:(unsigned long long)arg2;
- (struct UIEdgeInsets)contentEdgeInsetsForState:(unsigned long long)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets currentContentEdgeInsets;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setEnabled:(_Bool)arg1;
- (void)setImageName:(id)arg1 highContrastVariantName:(id)arg2 forState:(unsigned long long)arg3;
- (void)setImageName:(id)arg1 forState:(unsigned long long)arg2;
- (id)imageNameForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *currentImageName;
- (void)setDisplayImageNeedsUpdateForState:(unsigned long long)arg1;
@property(nonatomic) __weak id <TFNLegacyButtonImageProvider> imageProvider;
- (id)displayImageForState:(unsigned long long)arg1;
@property(readonly, nonatomic) UIImage *currentDisplayImage;
- (void)setAttributedTitle:(id)arg1 forState:(unsigned long long)arg2;
- (id)attributedTitleForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSAttributedString *currentAttributedTitle;
- (void)setTitle:(id)arg1 forState:(unsigned long long)arg2;
- (id)titleForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *currentTitle;
- (void)setLineBreakMode:(long long)arg1 forState:(unsigned long long)arg2;
- (long long)lineBreakModeForState:(unsigned long long)arg1;
@property(readonly, nonatomic) long long currentLineBreakMode;
- (void)setMinimumTitleScaleFactor:(double)arg1 forState:(unsigned long long)arg2;
- (double)minimumTitleScaleFactorForState:(unsigned long long)arg1;
@property(readonly, nonatomic) double currentMinimumTitleScaleFactor;
- (void)setMinimumKerning:(double)arg1 forState:(unsigned long long)arg2;
- (double)minimumKerningForState:(unsigned long long)arg1;
@property(readonly, nonatomic) double currentMinimumKerning;
- (void)setImageRemovalIsPermitted:(_Bool)arg1 forState:(unsigned long long)arg2;
- (_Bool)imageRemovalIsPermittedForState:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool imageRemovalIsCurrentlyPermitted;
- (void)setTitleRemovalIsPermitted:(_Bool)arg1 forState:(unsigned long long)arg2;
- (_Bool)titleRemovalIsPermittedForState:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool titleRemovalIsCurrentlyPermitted;
- (void)setAbbreviatedAttributedTitle:(id)arg1 forState:(unsigned long long)arg2;
- (id)abbreviatedAttributedTitleForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSAttributedString *currentAbbreviatedAttributedTitle;
- (void)setAbbreviatedTitle:(id)arg1 forState:(unsigned long long)arg2;
- (id)abbreviatedTitleForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *currentAbbreviatedTitle;
- (void)setMinimumWidth:(double)arg1 forState:(unsigned long long)arg2;
- (double)minimumWidthForState:(unsigned long long)arg1;
@property(readonly, nonatomic) double currentMinimumWidth;
- (void)setMaximumWidth:(double)arg1 forState:(unsigned long long)arg2;
- (double)maximumWidthForState:(unsigned long long)arg1;
@property(readonly, nonatomic) double currentMaximumWidth;
@property(readonly, nonatomic) TFNLegacyButtonAppearance *appearance;
- (void)setTouchInsets:(struct UIEdgeInsets)arg1 forState:(unsigned long long)arg2;
- (struct UIEdgeInsets)touchInsetsForState:(unsigned long long)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets currentTouchInsets;
- (void)setAccessibilityHint:(id)arg1 forState:(unsigned long long)arg2;
- (id)accessibilityHintForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *currentAccessibilityHint;
- (void)setAccessibilityHint:(id)arg1;
- (id)accessibilityHint;
- (void)setAccessibilityLabel:(id)arg1 forState:(unsigned long long)arg2;
- (id)accessibilityLabelForState:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *currentAccessibilityLabel;
- (void)setAccessibilityLabel:(id)arg1;
- (id)accessibilityLabel;
- (void)setImageFlipsHorizontallyForRTLLanguageDirection:(_Bool)arg1 forState:(unsigned long long)arg2;
- (_Bool)imageFlipsHorizontallyForRTLLanguageDirectionForState:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool imageCurrentlyFlipsHorizontallyForRTLLanguageDirection;
- (void)setImagePosition:(unsigned long long)arg1 forState:(unsigned long long)arg2;
- (unsigned long long)imagePositionForState:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long currentImagePosition;
@property(nonatomic) double typographyScaleFactor;
- (void)setTintColorIsAppliedToImage:(_Bool)arg1 forState:(unsigned long long)arg2;
- (_Bool)tintColorIsAppliedToImageForState:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool tintColorIsCurrentlyAppliedToImage;
- (void)setTintColor:(id)arg1 forState:(unsigned long long)arg2;
- (id)tintColorForState:(unsigned long long)arg1;
@property(readonly, nonatomic) UIColor *currentTintColor;
- (void)dealloc;
- (void)_commonInitWithSize:(unsigned long long)arg1 strength:(unsigned long long)arg2 variant:(unsigned long long)arg3 presentation:(unsigned long long)arg4;
- (id)initWithSize:(unsigned long long)arg1 strength:(unsigned long long)arg2 variant:(unsigned long long)arg3 presentation:(unsigned long long)arg4;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(retain, nonatomic) TFNLegacyButtonActiveAnimation *_tfn_activeAnimation;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) UINotificationFeedbackGenerator *notificationFeedbackGenerator;
@property(readonly, nonatomic) UISelectionFeedbackGenerator *selectionFeedbackGenerator;
@property(readonly) Class superclass;

@end

