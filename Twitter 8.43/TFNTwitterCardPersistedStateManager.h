//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableDictionary, NSOperationQueue, NSString;

@interface TFNTwitterCardPersistedStateManager : NSObject
{
    NSString *_accountID;
    NSMutableDictionary *_cards;
    NSDictionary *_initialCardLoadOperations;
    NSOperationQueue *_initialCardLoadOperationQueue;
}

+ (id)_cardsDirectoryNameForAccountID:(id)arg1;
+ (id)_cardsDirectoryPathForAccountID:(id)arg1;
+ (id)_cardNameForCacheId:(id)arg1;
+ (id)_fullPathForCacheId:(id)arg1 withAccountID:(id)arg2;
+ (id)_cardDirectoryPathForCacheId:(id)arg1 withAccountID:(id)arg2;
+ (id)_inMemoryQueue;
+ (id)_persistenceQueue;
+ (_Bool)isConversationCardUnlockedForCardData:(id)arg1 account:(id)arg2;
+ (_Bool)isConversationCardUnlockedForCardContext:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSOperationQueue *initialCardLoadOperationQueue; // @synthesize initialCardLoadOperationQueue=_initialCardLoadOperationQueue;
@property(retain, nonatomic) NSDictionary *initialCardLoadOperations; // @synthesize initialCardLoadOperations=_initialCardLoadOperations;
@property(retain, nonatomic) NSMutableDictionary *cards; // @synthesize cards=_cards;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
- (void)waitForDiskSynchronization;
- (void)persistence_ensureAccountCardsDirectoryExists;
- (void)removeCardStateAtPath:(id)arg1;
- (void)persistence_saveCardStateToDisk:(id)arg1 forCacheId:(id)arg2;
- (id)persistence_cardUrlsFromDiskSortedByAccessDate;
- (id)cardForFileUrl:(id)arg1;
- (void)persistence_loadMostRecentCardsFromDiskAndCleanupWithOperations:(_Bool)arg1;
- (void)waitOnInitialLoadOperationForCardWithName:(id)arg1;
- (void)clearAll;
- (void)clearAllWithCompletion:(CDUnknownBlockType)arg1;
- (void)removeCacheWithId:(id)arg1;
- (void)removeValueForKey:(id)arg1 withCacheId:(id)arg2;
- (id)objectForKey:(id)arg1 withCacheId:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 withCacheId:(id)arg3;
- (id)init;
- (id)initWithAccountID:(id)arg1;

@end

