//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, TAVAnalyticsPlayedRangesTracker, TAVAnalyticsSessionState, TAVWallTime, TVDIBitrateTracker, TVDILatencyTracker;
@protocol TAVTimerDispatchSourceProtocol;

@interface TAVAnalyticsHeartbeatTrackerPlaythroughState : NSObject
{
    _Bool _hasPlaybackStarted;
    _Bool _isPlaying;
    _Bool _isAudible;
    int _stallCount;
    TAVAnalyticsPlayedRangesTracker *_playedRangesTracker;
    TAVAnalyticsSessionState *_lastKnownState;
    TAVWallTime *_currentWaitingPeriodStart;
    long long _timeSpentWaitingBeforeCurrentWaitingPeriod;
    long long _timeSpentWaiting;
    long long _numberOfBytesTransferred;
    long long _timeSpentWaitingBeforeLastHeartbeat;
    NSDate *_programDateTimeAtMediaTimeZero;
    TVDILatencyTracker *_latencyTracker;
    TVDIBitrateTracker *_bitrateTracker;
    id <TAVTimerDispatchSourceProtocol> _heartbeatTimer;
    CDStruct_1b6d18a9 _timeSinceLastHeartbeat;
    CDStruct_1b6d18a9 _startTime;
    CDStruct_1b6d18a9 _audibleDuration;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isAudible; // @synthesize isAudible=_isAudible;
@property(nonatomic) CDStruct_1b6d18a9 audibleDuration; // @synthesize audibleDuration=_audibleDuration;
@property(retain, nonatomic) id <TAVTimerDispatchSourceProtocol> heartbeatTimer; // @synthesize heartbeatTimer=_heartbeatTimer;
@property(nonatomic) int stallCount; // @synthesize stallCount=_stallCount;
@property(retain, nonatomic) TVDIBitrateTracker *bitrateTracker; // @synthesize bitrateTracker=_bitrateTracker;
@property(retain, nonatomic) TVDILatencyTracker *latencyTracker; // @synthesize latencyTracker=_latencyTracker;
@property(retain, nonatomic) NSDate *programDateTimeAtMediaTimeZero; // @synthesize programDateTimeAtMediaTimeZero=_programDateTimeAtMediaTimeZero;
@property(nonatomic) CDStruct_1b6d18a9 startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) long long timeSpentWaitingBeforeLastHeartbeat; // @synthesize timeSpentWaitingBeforeLastHeartbeat=_timeSpentWaitingBeforeLastHeartbeat;
@property(nonatomic) long long numberOfBytesTransferred; // @synthesize numberOfBytesTransferred=_numberOfBytesTransferred;
@property(nonatomic) long long timeSpentWaiting; // @synthesize timeSpentWaiting=_timeSpentWaiting;
@property(nonatomic) long long timeSpentWaitingBeforeCurrentWaitingPeriod; // @synthesize timeSpentWaitingBeforeCurrentWaitingPeriod=_timeSpentWaitingBeforeCurrentWaitingPeriod;
@property(retain, nonatomic) TAVWallTime *currentWaitingPeriodStart; // @synthesize currentWaitingPeriodStart=_currentWaitingPeriodStart;
@property(nonatomic) _Bool hasPlaybackStarted; // @synthesize hasPlaybackStarted=_hasPlaybackStarted;
@property(nonatomic) CDStruct_1b6d18a9 timeSinceLastHeartbeat; // @synthesize timeSinceLastHeartbeat=_timeSinceLastHeartbeat;
@property(retain, nonatomic) TAVAnalyticsSessionState *lastKnownState; // @synthesize lastKnownState=_lastKnownState;
@property(retain, nonatomic) TAVAnalyticsPlayedRangesTracker *playedRangesTracker; // @synthesize playedRangesTracker=_playedRangesTracker;
- (void)cancelTimer;
- (void)resetHeartbeat;
- (void)updateTimeSpentWaitingWithWallTime:(id)arg1;
- (void)updateWithSessionState:(id)arg1 wallTimeFactory:(CDUnknownBlockType)arg2 programDateTimeDriftTolerance:(double)arg3;
- (id)init;
- (id)initWithPlaybackState:(id)arg1;

@end

