//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TwitterAVCore/TAVPlaybackObserver-Protocol.h>

@class NSArray, NSNotificationCenter, TAVAnalyticsSessionConfiguration, TAVWallTime;
@protocol OS_dispatch_queue, TAVAnalyticsPresentationState;

@interface TAVAnalyticsSession : NSObject <TAVPlaybackObserver>
{
    _Bool _hasEnded;
    NSArray *_trackers;
    NSObject<OS_dispatch_queue> *_trackerQueue;
    id <TAVAnalyticsPresentationState> _lastKnownPresentationState;
    NSNotificationCenter *_sessionNotificationCenter;
    TAVAnalyticsSessionConfiguration *_configuration;
    TAVWallTime *_playerPreparationStartWallTime;
    TAVWallTime *_firstIntentToPlay;
}

+ (id)builtInTrackersWithFeatureConfiguration:(id)arg1;
+ (id)sessionWithConfiguration:(id)arg1 playerPreparationStartWallTime:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) TAVWallTime *firstIntentToPlay; // @synthesize firstIntentToPlay=_firstIntentToPlay;
@property(readonly, nonatomic) TAVWallTime *playerPreparationStartWallTime; // @synthesize playerPreparationStartWallTime=_playerPreparationStartWallTime;
@property(copy, nonatomic) TAVAnalyticsSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) NSNotificationCenter *sessionNotificationCenter; // @synthesize sessionNotificationCenter=_sessionNotificationCenter;
@property(copy, nonatomic) id <TAVAnalyticsPresentationState> lastKnownPresentationState; // @synthesize lastKnownPresentationState=_lastKnownPresentationState;
@property(nonatomic) _Bool hasEnded; // @synthesize hasEnded=_hasEnded;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *trackerQueue; // @synthesize trackerQueue=_trackerQueue;
@property(readonly, copy, nonatomic) NSArray *trackers; // @synthesize trackers=_trackers;
- (void)dealloc;
- (void)end;
- (void)updateWithState:(id)arg1;
- (id)initWithTrackers:(id)arg1 playerPreparationStartWallTime:(id)arg2 configuration:(id)arg3;
- (void)player:(id)arg1 didUpdatePlaybackState:(id)arg2;

@end

