//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NavigationFramework/AlertControllerListener-Protocol.h>
#import <NavigationFramework/GMSNavArrivalListener-Protocol.h>
#import <NavigationFramework/GMSNavGuidanceManagerRequestReportingParamsProvider-Protocol.h>
#import <NavigationFramework/GMSNavProgressionListener-Protocol.h>
#import <NavigationFramework/GMSNavRouteChangeListener-Protocol.h>
#import <NavigationFramework/LocationPipelineListener-Protocol.h>
#import <NavigationFramework/NavSessionEventLoggerSequenceNumberProvider-Protocol.h>

@class GMSCoreClientParameters, GMSx_LOGGMMNStartRecordingEvent, GMSx_LocationPipeline, GMSx_NavSessionEventLoggerGuiderStateTracker, GMSx_NavSessionEventLoggerParameters, GMSx_NavSessionEventLoggerService, GMSx_NavSessionTripAndTrafficVersions, NSMutableArray, NSString;
@protocol GMSTimingClock, NSObject;

@interface GMSx_NavSessionEventLogger : NSObject <LocationPipelineListener, NavSessionEventLoggerSequenceNumberProvider, AlertControllerListener, GMSNavArrivalListener, GMSNavGuidanceManagerRequestReportingParamsProvider, GMSNavProgressionListener, GMSNavRouteChangeListener>
{
    GMSx_LocationPipeline *_locationPipeline;
    GMSx_NavSessionEventLoggerService *_eventLoggerService;
    id <GMSTimingClock> _clock;
    GMSx_LOGGMMNStartRecordingEvent *_recordingParameters;
    GMSx_NavSessionEventLoggerParameters *_sessionParameters;
    GMSx_NavSessionEventLoggerGuiderStateTracker *_guiderStateTracker;
    GMSCoreClientParameters *_clientParams;
    GMSx_NavSessionTripAndTrafficVersions *_forwardingTripAndTrafficVersions;
    GMSx_NavSessionTripAndTrafficVersions *_loggingTripAndTrafficVersions;
    int _nextSequenceNumber;
    _Bool _onAlternateRoute;
    NSMutableArray *_inFlightRequests;
    _Bool _routeCompleted;
    id <NSObject> _routeCompletedStopLoggingTask;
}

+ (unsigned long long)randomSessionIdOrNonce;
+ (_Bool)isTravelModeSupported:(int)arg1;
+ (_Bool)loggingSupportedForTravelMode:(int)arg1 enableLogging:(_Bool)arg2 enableForwarding:(_Bool)arg3;
+ (_Bool)loggingSupportedForTravelMode:(int)arg1 clientParameters:(id)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <GMSTimingClock> clock; // @synthesize clock=_clock;
@property(readonly, nonatomic) GMSx_NavSessionTripAndTrafficVersions *loggingTripAndTrafficVersions; // @synthesize loggingTripAndTrafficVersions=_loggingTripAndTrafficVersions;
@property(readonly, nonatomic) GMSx_NavSessionTripAndTrafficVersions *forwardingTripAndTrafficVersions; // @synthesize forwardingTripAndTrafficVersions=_forwardingTripAndTrafficVersions;
@property(readonly, nonatomic) GMSx_NavSessionEventLoggerParameters *sessionParameters; // @synthesize sessionParameters=_sessionParameters;
@property(readonly, nonatomic) GMSx_NavSessionEventLoggerGuiderStateTracker *guiderStateTracker; // @synthesize guiderStateTracker=_guiderStateTracker;
- (_Bool)isLastStepInEndScrubbingZone:(id)arg1;
- (_Bool)isRecording;
- (_Bool)isOnAlternateRoute;
- (void)alertControllerDidFinishSpeaking:(id)arg1 alert:(id)arg2;
- (void)mainRouteChangedToState:(id)arg1 fromState:(id)arg2 metadata:(id)arg3;
- (void)routeTrafficWasUpdatedFromPreviousState:(id)arg1 metadata:(id)arg2;
- (void)addLocationPipelineEventIfEventful:(id)arg1;
- (void)addAlternateTripAcceptedEventForPrompt:(id)arg1 dismissReason:(int)arg2;
- (void)addAlternateTripOfferedEventForPrompt:(id)arg1;
- (void)addPromptShownEventForPrompt:(id)arg1;
- (void)updateLocation:(id)arg1 dispatcher:(id)arg2;
- (int)getAndIncrementSequenceNumber;
- (void)navGuidanceManager:(id)arg1 didReceiveGuidanceEvent:(id)arg2 metersToStep:(int)arg3;
- (void)navGuidanceManager:(id)arg1 isApproachingGuidanceEvent:(id)arg2 metersFromGuidanceEventToStep:(int)arg3;
- (void)navGuidanceManager:(id)arg1 didChangeStepWithState:(id)arg2 metadata:(id)arg3;
- (void)navGuidanceManager:(id)arg1 didProgressWithState:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didCancelRoute:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didCompleteRouteSuccessfully:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didFailRerouteWithState:(id)arg2 metadata:(id)arg3;
- (void)navGuidanceManager:(id)arg1 didRequestRerouteWithState:(id)arg2 metadata:(id)arg3;
- (void)navGuidanceManager:(id)arg1 didChangeRouteWithState:(id)arg2 metadata:(id)arg3;
- (id)requestReportingParamsForReroute:(_Bool)arg1;
- (void)retireInFlightRequests:(long long)arg1;
- (id)findAndRemoveMatchingInFlightRequest:(int)arg1;
- (void)addInFlightRequest:(id)arg1;
- (void)logDidChangeStepTo:(id)arg1 isSuccessiveStep:(_Bool)arg2;
- (void)logDidProgressWithState:(id)arg1;
- (void)logDidCancelRoute;
- (void)logDidCompleteRouteSuccessfully:(id)arg1;
- (void)logDidDismissNavPrompt:(id)arg1 reason:(int)arg2;
- (void)logDidShowNavPrompt:(id)arg1;
- (_Bool)hasExistingSession;
- (void)stopRecordingSession;
- (void)startNewRecordingSessionWithNavGuidanceState:(id)arg1;
- (void)setupNewRecordingSessionWithNavGuidanceState:(id)arg1 isPersonalLogging:(_Bool)arg2 isThirdParty:(_Bool)arg3;
- (void)dealloc;
- (id)initWithLocationPipeline:(id)arg1 eventLoggerService:(id)arg2 clock:(id)arg3 clientParameters:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

