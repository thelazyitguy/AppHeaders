//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NavigationFramework/AlertControllerListener-Protocol.h>
#import <NavigationFramework/GMSNavPromptScheduler-Protocol.h>
#import <NavigationFramework/LocationListener-Protocol.h>
#import <NavigationFramework/RouteGuiderDelegate-Protocol.h>

@class GMSCoreClientParameters, GMSDGuidanceEvent, GMSDLocation, GMSDSearch, GMSNavGuidanceState, GMSx_AlertController, GMSx_DirectionsResponse, GMSx_DirectionsService, GMSx_DirectionsUpdateToken, GMSx_LocationDescriptorManager, GMSx_LocationPipeline, GMSx_NavigationListenerDispatcher, GMSx_RerouteRequestToken, GMSx_RouteState, NSArray, NSData, NSError, NSMutableArray, NSString;
@protocol GMSNavGuidanceManagerPromptDelegate, GMSNavGuidanceManagerRequestReportingParamsProvider, GMSNavGuidanceManagerUserSettingsProvider, GMSNavPromptPresenter, GMSNavViaPointManager, GMSTimingClock, NSObject;

@interface GMSNavGuidanceManager : NSObject <GMSNavPromptScheduler, AlertControllerListener, LocationListener, RouteGuiderDelegate>
{
    GMSx_AlertController *_alertController;
    id <GMSTimingClock> _timingClock;
    GMSx_LocationPipeline *_locationPipeline;
    long long _lastSpeakingFinishedTime;
    id <GMSNavPromptPresenter> _promptPresenter;
    NSMutableArray *_pendingNavPrompts;
    GMSx_DirectionsService *_directionsService;
    id <GMSNavViaPointManager> _viaPointManager;
    GMSx_LocationDescriptorManager *_locationDescriptorManager;
    GMSCoreClientParameters *_params;
    GMSx_NavigationListenerDispatcher *_dispatcher;
    GMSx_RouteState *_routeState;
    NSArray *_routeGuiders;
    _Bool _useSharedGuider;
    NSData *_betterTripStateToken;
    GMSNavGuidanceState *_cachedNavGuidanceState;
    NSError *_directionsResponseError;
    id <NSObject> _directionsUpdateTimingTaskID;
    _Bool _hasRerouted;
    GMSDLocation *_lastDistanceMeasureLocation;
    long long _lastRerouteRequestIssueTime;
    long long _lastTripUpdateStartTime;
    GMSx_DirectionsUpdateToken *_outstandingDirectionsUpdateCancellationToken;
    GMSx_RerouteRequestToken *_outstandingRerouteRequestCancellationToken;
    NSError *_rerouteResponseError;
    NSData *_rerouteToken;
    NSData *_trafficReportHistoryToken;
    NSData *_tripUpdateToken;
    _Bool _playGuidanceAlerts;
    _Bool _alwaysSendRerouteToken;
    _Bool _providingGuidance;
    _Bool _providingBackgroundGuidance;
    _Bool _autoReroutingEnabled;
    _Bool _trafficUpdatesEnabled;
    int _controllingVeType;
    float _directionsUpdateIntervalMultiplier;
    GMSDSearch *_directionsSearch;
    GMSx_DirectionsResponse *_directionsResponse;
    double _distanceTraveled;
    id <GMSNavGuidanceManagerPromptDelegate> _promptDelegate;
    id <GMSNavGuidanceManagerRequestReportingParamsProvider> _requestReportingParamsProvider;
    id <GMSNavGuidanceManagerUserSettingsProvider> _userSettingsProvider;
}

+ (int)indexOfFastestRouteGuiderInArray:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic, getter=areTrafficUpdatesEnabled) _Bool trafficUpdatesEnabled; // @synthesize trafficUpdatesEnabled=_trafficUpdatesEnabled;
@property(nonatomic) __weak id <GMSNavGuidanceManagerUserSettingsProvider> userSettingsProvider; // @synthesize userSettingsProvider=_userSettingsProvider;
@property(nonatomic) __weak id <GMSNavGuidanceManagerRequestReportingParamsProvider> requestReportingParamsProvider; // @synthesize requestReportingParamsProvider=_requestReportingParamsProvider;
@property(nonatomic) __weak id <GMSNavGuidanceManagerPromptDelegate> promptDelegate; // @synthesize promptDelegate=_promptDelegate;
@property(nonatomic) float directionsUpdateIntervalMultiplier; // @synthesize directionsUpdateIntervalMultiplier=_directionsUpdateIntervalMultiplier;
@property(nonatomic) int controllingVeType; // @synthesize controllingVeType=_controllingVeType;
@property(nonatomic, getter=isAutoRoutingEnabled) _Bool autoReroutingEnabled; // @synthesize autoReroutingEnabled=_autoReroutingEnabled;
@property(readonly) double distanceTraveled; // @synthesize distanceTraveled=_distanceTraveled;
@property(readonly, nonatomic, getter=isProvidingBackgroundGuidance) _Bool providingBackgroundGuidance; // @synthesize providingBackgroundGuidance=_providingBackgroundGuidance;
@property(readonly, nonatomic, getter=isProvidingGuidance) _Bool providingGuidance; // @synthesize providingGuidance=_providingGuidance;
@property(readonly, nonatomic) GMSx_DirectionsResponse *directionsResponse; // @synthesize directionsResponse=_directionsResponse;
@property(readonly, nonatomic) GMSDSearch *directionsSearch; // @synthesize directionsSearch=_directionsSearch;
- (void)setSelectedRouteGuiderForTesting:(id)arg1;
- (void)setOutstandingDirectionsUpdateCancellationTokenForTesting:(id)arg1;
- (void)setOutstandingRerouteRequestCancellationTokenForTesting:(id)arg1;
- (void)setTrafficReportPromptForTesting:(id)arg1;
- (void)setBetterRoutePromptDetailsForTesting:(id)arg1;
- (void)setDispatcherForTesting:(id)arg1;
- (void)updateRouteStateForTesting:(id)arg1 betterTripIndex:(int)arg2 isBetterTripOptional:(_Bool)arg3 isTrafficUpdate:(_Bool)arg4;
- (id)pendingNavPromptsForTesting;
- (id)tripUpdateTokenForTesting;
- (id)trafficReportHistoryTokenForTesting;
- (id)rerouteTokenForTesting;
- (void)enqueueOrNotifyDelegateWithNavPrompt:(id)arg1;
- (void)resetAlertsAndDispatchRerouteFailedWithState:(id)arg1 metadata:(id)arg2;
- (void)resetAlertsAndDispatchRouteChangedWithState:(id)arg1 metadata:(id)arg2;
- (_Bool)isTripUpdateTokenRequiredTravelMode:(int)arg1;
- (void)clearCancellationTokens;
- (_Bool)isRerouteRequestInFlight;
- (_Bool)isAnyRequestInFlight;
- (id)viaPointsForReroute;
- (void)dispatchBetterRoutePrompt:(id)arg1 iconDictionary:(id)arg2;
- (void)dispatchTrafficReportPrompt:(id)arg1;
- (void)handleDirectionsResponse:(id)arg1 updatedRouteState:(id)arg2 betterRoutePromptDetails:(id)arg3 error:(id)arg4;
- (void)handleRerouteResponse:(id)arg1 error:(id)arg2;
- (void)stopDirectionsUpdateTimer;
- (void)startDirectionsUpdateTimer;
- (void)removeExpiredTrafficForRoute:(id)arg1 navGuidanceState:(id)arg2;
- (void)requestTripUpdate;
- (long long)distanceUnit;
- (void)updateLocationDescriptorManager;
- (void)routeGuider:(id)arg1 approachingGuidanceEvent:(id)arg2 metersToStep:(double)arg3;
- (void)routeGuider:(id)arg1 dispatchingGuidanceEvent:(id)arg2 metersToStep:(double)arg3;
- (void)routeGuider:(id)arg1 didLoseViabilityAtLocation:(id)arg2;
- (void)routeGuiderDidChangeStep:(id)arg1 wasSuccessiveStep:(_Bool)arg2;
- (void)routeGuiderDidFinishGuidance:(id)arg1;
- (_Bool)shouldDispatchNavigationGuidanceEventForGuider:(id)arg1;
- (void)alertControllerDidFinishSpeaking:(id)arg1 alert:(id)arg2;
- (_Bool)triggerVoiceGuidanceAlertForCurrentStep;
- (id)waypointsAfterUserLocation;
- (_Bool)shouldThrottleRerouteWithStartTime:(long long)arg1 didDivergeFromRoute:(_Bool)arg2;
- (_Bool)shouldIgnoreRerouteWithStartTime:(long long)arg1 didDivergeFromRoute:(_Bool)arg2;
- (void)handleRerouteResponse:(id)arg1 cancellationToken:(id)arg2 refinedRequest:(id)arg3 responseStatus:(id)arg4 startTime:(long long)arg5 error:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (_Bool)requestRerouteWithWaypoints:(id)arg1 location:(id)arg2 options:(id)arg3 waypointOptions:(id)arg4 didDivergeFromRoute:(_Bool)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)requestRerouteWithWaypoints:(id)arg1 options:(id)arg2 waypointOptions:(id)arg3 didDivergeFromRoute:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)requestReroute;
- (void)removeNavigationEventListener:(id)arg1;
- (void)addNavigationEventListener:(id)arg1;
- (void)updateLocation:(id)arg1 dispatcher:(id)arg2;
- (void)notifyNavGuidanceStateChanged;
- (void)pruneDivergentRoutes;
- (void)sendLocationUpdateToRouteGuiders:(id)arg1;
- (void)startRouteGuiderEventDispatchAndSkipCurrentEvents;
- (void)startRouteGuiderEventDispatchAndDispatchCurrentEvents;
- (void)stopNavigationEventDispatch;
- (void)startNavigationEventDispatch;
- (id)routeStateWithOriginalWaypointSourceFromRouteState:(id)arg1;
- (id)routeGuiderForRouteState:(id)arg1 routeIndex:(int)arg2 hasRerouted:(_Bool)arg3;
- (void)setRouteStateAndRefreshGuidanceState:(id)arg1 receivedTrafficUpdate:(_Bool)arg2 alternateRouteSelected:(_Bool)arg3;
- (void)stopGuidance;
- (void)startRouteGuiderLocationUpdates;
- (void)startGuidanceIncludingBackground:(_Bool)arg1 playGuidanceAlerts:(_Bool)arg2 alwaysSendRerouteToken:(_Bool)arg3;
- (void)setRouteState:(id)arg1 directionsSearch:(id)arg2 directionsResponse:(id)arg3;
- (void)setUpdatedRouteState:(id)arg1 directionsSearch:(id)arg2 directionsResponse:(id)arg3;
- (void)setInitialRouteState:(id)arg1 directionsSearch:(id)arg2 directionsResponse:(id)arg3;
- (void)requestNewRouteWithWaypointOptions:(id)arg1;
- (void)requestNewRouteWithDirectionsSearchOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)requestNewRouteWithWaypoints:(id)arg1;
- (void)previewNewRouteWithWaypoints:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)selectRoute:(id)arg1;
- (void)requestTripUpdateAndResetUpdateTimer;
- (_Bool)isOffRouteButCloseToDepartureStep;
@property(readonly, nonatomic) double expectedSecondsUntilNextGuidance;
@property(readonly, nonatomic) double metersFromPreviousGuidanceEvent;
@property(readonly, nonatomic) GMSDGuidanceEvent *previousGuidanceEvent;
- (id)selectedRouteGuider;
- (void)resetNavGuidanceState;
@property(readonly, nonatomic) GMSNavGuidanceState *navGuidanceState;
- (void)getArraysForAllRoutesMetersFromStart:(id *)arg1 segmentIndices:(id *)arg2;
- (id)emptyArrayWithCount:(unsigned long long)arg1;
- (void)abandonLatestRequest;
- (void)setTripUpdateToken:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)dealloc;
- (id)initWithLocationPipeline:(id)arg1 directionsService:(id)arg2 viaPointManager:(id)arg3 timingClock:(id)arg4 alertController:(id)arg5 locationDescriptorManager:(id)arg6 params:(id)arg7;
- (void)showQueuedNavPromptIfAppropriate;
- (void)purgePromptQueue;
- (void)enqueueNavPrompt:(id)arg1 queuePolicy:(long long)arg2;
@property(nonatomic) __weak id <GMSNavPromptPresenter> promptPresenter;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

