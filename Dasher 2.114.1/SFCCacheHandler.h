//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSManagedObjectContext, NSMutableDictionary, NSMutableSet, SFCAction, SFCContainer;
@protocol SFCActionModel;

@interface SFCCacheHandler : NSObject
{
    SFCContainer *_container;
    NSArray *_objcPropertiesToSkip;
    NSDictionary *_outputModelMappings;
    struct __CFDictionary *_cachedObjects;
    struct __CFDictionary *_indexedObjects;
    NSMutableSet *_cachedFeedItems;
    _Bool _cancelling;
    NSManagedObjectContext *_context;
    NSObject<SFCActionModel> *_model;
    SFCAction *_action;
    NSMutableDictionary *_objectEntityIdDirectory;
}

+ (_Bool)isValidValueToUpdate:(id)arg1 oldValue:(id)arg2 attributeKey:(id)arg3;
+ (void)addEntity:(id)arg1 withName:(id)arg2 created:(_Bool)arg3 toJournal:(id)arg4;
@property(retain, nonatomic) NSMutableDictionary *objectEntityIdDirectory; // @synthesize objectEntityIdDirectory=_objectEntityIdDirectory;
@property(getter=isCancelling) _Bool cancelling; // @synthesize cancelling=_cancelling;
@property(retain, nonatomic) SFCAction *action; // @synthesize action=_action;
@property(retain, nonatomic) NSObject<SFCActionModel> *model; // @synthesize model=_model;
@property(retain, nonatomic) NSManagedObjectContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)handleDeleteOnReloadForModel:(id)arg1;
- (id)storeContents:(id)arg1 parentObject:(id)arg2 forResponse:(id)arg3 journal:(id)arg4;
- (id)storeObject:(id)arg1 parentObject:(id)arg2 relationship:(id)arg3 journal:(id)arg4 updated:(_Bool *)arg5;
- (void)deleteObjectWithJournal:(id)arg1;
- (_Bool)storeUsingJournal:(id)arg1;
@property(readonly, nonatomic) SFCContainer *container;
- (id)baseEntityDescriptionForEntityDescription:(id)arg1;
- (void)setIndexedObject:(id)arg1 forIndexValue:(id)arg2;
- (id)indexedObjectForIndexValue:(id)arg1 inEntityDescription:(id)arg2;
- (void)setCachedObject:(id)arg1 forResponse:(id)arg2;
- (id)cachedObjectForResponse:(id)arg1;
- (void)cancel;
- (void)dealloc;
- (id)initWithContext:(id)arg1 model:(id)arg2 action:(id)arg3;
- (id)initWithContext:(id)arg1 model:(id)arg2;
- (id)init;

@end

