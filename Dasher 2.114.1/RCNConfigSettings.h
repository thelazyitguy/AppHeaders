//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, RCNConfigDBManager, RCNUserDefaultsManager;

@interface RCNConfigSettings : NSObject
{
    NSMutableArray *_successFetchTimes;
    NSMutableArray *_failureFetchTimes;
    NSMutableDictionary *_deviceContext;
    NSMutableDictionary *_customVariables;
    NSMutableDictionary *_internalMetadata;
    long long _lastFetchStatus;
    long long _lastFetchError;
    double _lastApplyTimeInterval;
    double _lastSetDefaultsTimeInterval;
    RCNConfigDBManager *_DBManager;
    NSString *_FIRNamespace;
    NSString *_googleAppID;
    RCNUserDefaultsManager *_userDefaultsManager;
    double _lastETagUpdateTime;
    _Bool _isFetchInProgress;
    double _minimumFetchInterval;
    double _fetchTimeout;
    NSString *_deviceAuthID;
    NSString *_secretToken;
    NSString *_deviceDataVersion;
    NSString *_configInstallationsIdentifier;
    NSString *_configInstallationsToken;
    NSString *_bundleIdentifier;
    double _exponentialBackoffRetryInterval;
    double _exponentialBackoffThrottleEndTime;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) double exponentialBackoffThrottleEndTime; // @synthesize exponentialBackoffThrottleEndTime=_exponentialBackoffThrottleEndTime;
@property(nonatomic) double exponentialBackoffRetryInterval; // @synthesize exponentialBackoffRetryInterval=_exponentialBackoffRetryInterval;
@property _Bool isFetchInProgress; // @synthesize isFetchInProgress=_isFetchInProgress;
@property(nonatomic) double lastSetDefaultsTimeInterval; // @synthesize lastSetDefaultsTimeInterval=_lastSetDefaultsTimeInterval;
@property(nonatomic) double lastApplyTimeInterval; // @synthesize lastApplyTimeInterval=_lastApplyTimeInterval;
@property(nonatomic) long long lastFetchError; // @synthesize lastFetchError=_lastFetchError;
@property(nonatomic) long long lastFetchStatus; // @synthesize lastFetchStatus=_lastFetchStatus;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(copy, nonatomic) NSString *configInstallationsToken; // @synthesize configInstallationsToken=_configInstallationsToken;
@property(copy, nonatomic) NSString *configInstallationsIdentifier; // @synthesize configInstallationsIdentifier=_configInstallationsIdentifier;
@property(copy, nonatomic) NSString *deviceDataVersion; // @synthesize deviceDataVersion=_deviceDataVersion;
@property(copy, nonatomic) NSString *secretToken; // @synthesize secretToken=_secretToken;
@property(copy, nonatomic) NSString *deviceAuthID; // @synthesize deviceAuthID=_deviceAuthID;
@property(nonatomic) double fetchTimeout; // @synthesize fetchTimeout=_fetchTimeout;
@property(nonatomic) double minimumFetchInterval; // @synthesize minimumFetchInterval=_minimumFetchInterval;
- (_Bool)shouldThrottle;
- (_Bool)hasMinimumFetchIntervalElapsed:(double)arg1;
@property(copy, nonatomic) NSDictionary *customVariables;
@property(readonly, copy, nonatomic) NSDictionary *deviceContext;
@property(readonly, copy, nonatomic) NSDictionary *internalMetadata;
@property(readonly, copy, nonatomic) NSArray *failureFetchTimes;
@property(readonly, copy, nonatomic) NSArray *successFetchTimes;
- (id)nextRequestWithUserProperties:(id)arg1;
- (void)updateMetadataTable;
- (void)updateFetchTimeWithSuccessFetch:(_Bool)arg1;
- (void)updateMetadataWithFetchSuccessStatus:(_Bool)arg1;
- (void)updateExponentialBackoffTime;
- (void)updateInternalMetadataTableWithValues:(id)arg1;
- (void)updateInternalContentWithResponse:(id)arg1;
- (id)loadConfigFromMetadataTable;
- (void)updateLastFetchTimeInterval:(double)arg1;
@property(nonatomic) double lastETagUpdateTime;
@property(readonly, nonatomic) double lastFetchTimeInterval;
@property(nonatomic) NSString *lastETag;
- (id)initWithDatabaseManager:(id)arg1 namespace:(id)arg2 firebaseAppName:(id)arg3 googleAppID:(id)arg4;

@end

