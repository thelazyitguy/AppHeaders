//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <NavigationFramework/GMSx_GPBMessage.h>

@class GMSx_GPBTimestamp, GMSx_LOGGMMNActiveTripChangedEvent, GMSx_LOGGMMNAlternateTripAcceptedEvent, GMSx_LOGGMMNAlternateTripOfferedEvent, GMSx_LOGGMMNAlternateTripSelectedEvent, GMSx_LOGGMMNArrivedEvent, GMSx_LOGGMMNDeviceEvent, GMSx_LOGGMMNDropoffEvent, GMSx_LOGGMMNDroveOntoAlternateEvent, GMSx_LOGGMMNGuidanceStartedEvent, GMSx_LOGGMMNGuidanceStoppedEvent, GMSx_LOGGMMNLocationPipelineEvent, GMSx_LOGGMMNPickupEvent, GMSx_LOGGMMNPromptShownEvent, GMSx_LOGGMMNRerouteRequestedEvent, GMSx_LOGGMMNSessionEndedEvent, GMSx_LOGGMMNStartRecordingEvent, GMSx_LOGGMMNStepChangedEvent, GMSx_LOGGMMNStepPointer, GMSx_LOGGMMNStopRecordingEvent, GMSx_LOGGMMNTrafficDataUpdatedEvent;

@interface GMSx_LOGGMMNNavigationSessionEvents_ClientNavigationEvent : GMSx_GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GMSx_LOGGMMNActiveTripChangedEvent *activeTripChanged; // @dynamic activeTripChanged;
@property(retain, nonatomic) GMSx_LOGGMMNAlternateTripAcceptedEvent *alternateTripAccepted; // @dynamic alternateTripAccepted;
@property(retain, nonatomic) GMSx_LOGGMMNAlternateTripOfferedEvent *alternateTripOffered; // @dynamic alternateTripOffered;
@property(retain, nonatomic) GMSx_LOGGMMNAlternateTripSelectedEvent *alternateTripSelected; // @dynamic alternateTripSelected;
@property(retain, nonatomic) GMSx_LOGGMMNArrivedEvent *arrived; // @dynamic arrived;
@property(readonly, nonatomic) int detailsOneOfCase; // @dynamic detailsOneOfCase;
@property(retain, nonatomic) GMSx_LOGGMMNDeviceEvent *device; // @dynamic device;
@property(retain, nonatomic) GMSx_LOGGMMNDropoffEvent *dropoff; // @dynamic dropoff;
@property(retain, nonatomic) GMSx_LOGGMMNDroveOntoAlternateEvent *droveOntoAlternative; // @dynamic droveOntoAlternative;
@property(retain, nonatomic) GMSx_LOGGMMNGuidanceStartedEvent *guidanceStarted; // @dynamic guidanceStarted;
@property(retain, nonatomic) GMSx_LOGGMMNGuidanceStoppedEvent *guidanceStopped; // @dynamic guidanceStopped;
@property(nonatomic) _Bool hasInScrubbingZone; // @dynamic hasInScrubbingZone;
@property(nonatomic) _Bool hasStepPointer; // @dynamic hasStepPointer;
@property(nonatomic) _Bool hasTimestamp; // @dynamic hasTimestamp;
@property(nonatomic) _Bool inScrubbingZone; // @dynamic inScrubbingZone;
@property(retain, nonatomic) GMSx_LOGGMMNLocationPipelineEvent *locationPipeline; // @dynamic locationPipeline;
@property(retain, nonatomic) GMSx_LOGGMMNPickupEvent *pickup; // @dynamic pickup;
@property(retain, nonatomic) GMSx_LOGGMMNPromptShownEvent *promptShown; // @dynamic promptShown;
@property(retain, nonatomic) GMSx_LOGGMMNRerouteRequestedEvent *rerouteRequested; // @dynamic rerouteRequested;
@property(retain, nonatomic) GMSx_LOGGMMNSessionEndedEvent *sessionEnded; // @dynamic sessionEnded;
@property(retain, nonatomic) GMSx_LOGGMMNStartRecordingEvent *startRecording; // @dynamic startRecording;
@property(retain, nonatomic) GMSx_LOGGMMNStepChangedEvent *stepChanged; // @dynamic stepChanged;
@property(retain, nonatomic) GMSx_LOGGMMNStepPointer *stepPointer; // @dynamic stepPointer;
@property(retain, nonatomic) GMSx_LOGGMMNStopRecordingEvent *stopRecording; // @dynamic stopRecording;
@property(retain, nonatomic) GMSx_GPBTimestamp *timestamp; // @dynamic timestamp;
@property(retain, nonatomic) GMSx_LOGGMMNTrafficDataUpdatedEvent *trafficUpdated; // @dynamic trafficUpdated;

@end

