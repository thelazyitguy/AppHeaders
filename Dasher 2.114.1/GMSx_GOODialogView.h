//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <NavigationFramework/GMSx_GOOMultiLineView.h>

#import <NavigationFramework/NIAttributedLabelDelegate-Protocol.h>
#import <NavigationFramework/UIAppearanceContainer-Protocol.h>

@class GMSx_NIAttributedLabel, NSArray, NSMutableArray, NSString, UIButton, UIColor, UIFont, UIImageView, UILabel, UIScrollView, UIView;

@interface GMSx_GOODialogView : GMSx_GOOMultiLineView <NIAttributedLabelDelegate, UIAppearanceContainer>
{
    UIScrollView *_scrollView;
    NSMutableArray *_actions;
    _Bool _showActionImages;
    _Bool _shouldConsiderActionButtonsToCalculateSizeThatFits;
    NSArray *_accessibilityElementsInOrder;
    _Bool _goo_adjustsFontForContentSizeCategory;
    _Bool _subtitleScrollable;
    _Bool _insetsContentViewsToSafeArea;
    _Bool _fitDialogToContents;
    _Bool _shouldWrapButtonsLabels;
    _Bool _shouldDrawButtonDividers;
    _Bool _preferHorizontallyAlignedButtons;
    _Bool _useFullWidthButtons;
    _Bool _requireCheckboxForNonCancelActions;
    _Bool _shouldPositionCheckboxAtBottom;
    _Bool _colorizeActionButtons;
    UIImageView *_imageView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIButton *_checkboxButton;
    GMSx_NIAttributedLabel *_attributedTextLabel;
    CDUnknownBlockType _attributedTextLinkDidTapBlock;
    double _minimumActionButtonHeight;
    long long _actionButtonsContentHorizontalAlignment;
    NSArray *_justifiedViews;
    UIView *_extraContentView;
    UIView *_headerBackgroundView;
    UIImageView *_titleBackgroundImageView;
    long long _titleBackgroundImageViewHorizontalAlignment;
    double _actionButtonsBottomMarginForHorizontalLayout;
    double _minimumWidth;
    UIColor *_actionButtonTitleColor;
    UIColor *_actionButtonIconColor;
    double _actionButtonOpacity;
    UIFont *_actionButtonTitleFont;
    long long _actionLayoutStyle;
    struct UIEdgeInsets _extraContentViewInsets;
    struct UIEdgeInsets _titleBackgroundImageViewInsets;
}

+ (id)dividerWithDisposition:(int)arg1 backgroundColor:(id)arg2;
+ (void)applyDialogButtonStyle:(int)arg1 toButton:(id)arg2 shouldWrapButtonLabels:(_Bool)arg3 insets:(struct UIEdgeInsets)arg4 minimumHeight:(double)arg5 backgroundColor:(id)arg6 layoutStyle:(long long)arg7;
+ (void)applyDefaultDialogButtonStyle:(int)arg1 toButton:(id)arg2 shouldWrapButtonLabels:(_Bool)arg3;
+ (void)applyDefaultDialogButtonStyle:(int)arg1 toButton:(id)arg2 shouldWrapButtonLabels:(_Bool)arg3 layoutStyle:(long long)arg4;
+ (Class)layerClass;
+ (id)menuTitleColor;
+ (id)menuTitleFont;
+ (id)dialogBodyColor;
+ (id)dialogTitleColor;
+ (id)buttonFontForLayoutStyle:(long long)arg1;
+ (id)dialogButtonFont;
+ (id)dialogBodyFont;
+ (id)dialogTitleFont;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableArray *actions; // @synthesize actions=_actions;
@property(nonatomic) long long actionLayoutStyle; // @synthesize actionLayoutStyle=_actionLayoutStyle;
@property(retain, nonatomic) UIFont *actionButtonTitleFont; // @synthesize actionButtonTitleFont=_actionButtonTitleFont;
@property(nonatomic) double actionButtonOpacity; // @synthesize actionButtonOpacity=_actionButtonOpacity;
@property(retain, nonatomic) UIColor *actionButtonIconColor; // @synthesize actionButtonIconColor=_actionButtonIconColor;
@property(retain, nonatomic) UIColor *actionButtonTitleColor; // @synthesize actionButtonTitleColor=_actionButtonTitleColor;
@property(nonatomic) _Bool colorizeActionButtons; // @synthesize colorizeActionButtons=_colorizeActionButtons;
@property(nonatomic) _Bool shouldPositionCheckboxAtBottom; // @synthesize shouldPositionCheckboxAtBottom=_shouldPositionCheckboxAtBottom;
@property(nonatomic) _Bool requireCheckboxForNonCancelActions; // @synthesize requireCheckboxForNonCancelActions=_requireCheckboxForNonCancelActions;
@property(nonatomic) _Bool useFullWidthButtons; // @synthesize useFullWidthButtons=_useFullWidthButtons;
@property(nonatomic) _Bool preferHorizontallyAlignedButtons; // @synthesize preferHorizontallyAlignedButtons=_preferHorizontallyAlignedButtons;
@property(nonatomic) _Bool shouldDrawButtonDividers; // @synthesize shouldDrawButtonDividers=_shouldDrawButtonDividers;
@property(nonatomic) double minimumWidth; // @synthesize minimumWidth=_minimumWidth;
@property(nonatomic) _Bool shouldWrapButtonsLabels; // @synthesize shouldWrapButtonsLabels=_shouldWrapButtonsLabels;
@property(nonatomic) _Bool fitDialogToContents; // @synthesize fitDialogToContents=_fitDialogToContents;
@property(nonatomic) double actionButtonsBottomMarginForHorizontalLayout; // @synthesize actionButtonsBottomMarginForHorizontalLayout=_actionButtonsBottomMarginForHorizontalLayout;
@property(nonatomic) long long titleBackgroundImageViewHorizontalAlignment; // @synthesize titleBackgroundImageViewHorizontalAlignment=_titleBackgroundImageViewHorizontalAlignment;
@property(nonatomic) struct UIEdgeInsets titleBackgroundImageViewInsets; // @synthesize titleBackgroundImageViewInsets=_titleBackgroundImageViewInsets;
@property(readonly, nonatomic) UIImageView *titleBackgroundImageView; // @synthesize titleBackgroundImageView=_titleBackgroundImageView;
@property(readonly, nonatomic) UIView *headerBackgroundView; // @synthesize headerBackgroundView=_headerBackgroundView;
@property(nonatomic) _Bool insetsContentViewsToSafeArea; // @synthesize insetsContentViewsToSafeArea=_insetsContentViewsToSafeArea;
@property(nonatomic) struct UIEdgeInsets extraContentViewInsets; // @synthesize extraContentViewInsets=_extraContentViewInsets;
@property(readonly, nonatomic) UIView *extraContentView; // @synthesize extraContentView=_extraContentView;
@property(nonatomic) _Bool subtitleScrollable; // @synthesize subtitleScrollable=_subtitleScrollable;
@property(copy, nonatomic) NSArray *justifiedViews; // @synthesize justifiedViews=_justifiedViews;
@property(nonatomic) long long actionButtonsContentHorizontalAlignment; // @synthesize actionButtonsContentHorizontalAlignment=_actionButtonsContentHorizontalAlignment;
@property(nonatomic) double minimumActionButtonHeight; // @synthesize minimumActionButtonHeight=_minimumActionButtonHeight;
@property(copy, nonatomic) CDUnknownBlockType attributedTextLinkDidTapBlock; // @synthesize attributedTextLinkDidTapBlock=_attributedTextLinkDidTapBlock;
@property(readonly, nonatomic) GMSx_NIAttributedLabel *attributedTextLabel; // @synthesize attributedTextLabel=_attributedTextLabel;
@property(readonly, nonatomic) UIButton *checkboxButton; // @synthesize checkboxButton=_checkboxButton;
@property(readonly, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (struct UIEdgeInsets)buttonSafeAreaInsets;
- (_Bool)shouldEnableButtonWithStyle:(int)arg1;
- (void)updateButtonColors;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (long long)accessibilityElementCount;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (_Bool)isAccessibilityElement;
@property(readonly, nonatomic) id accessibilityElementForFirstAction;
- (void)didTapCheckbox:(id)arg1;
- (void)actionButtonDidTap:(id)arg1;
- (_Bool)attributedLabel:(id)arg1 shouldPresentActionSheet:(id)arg2 withTextCheckingResult:(id)arg3 atPoint:(struct CGPoint)arg4;
- (void)attributedLabel:(id)arg1 didSelectTextCheckingResult:(id)arg2 atPoint:(struct CGPoint)arg3;
- (struct UIEdgeInsets)edgeInsets;
- (void)flashScrollIndicators;
- (void)applyLink:(id)arg1 toAttributedTextInRange:(struct _NSRange)arg2;
- (void)rearrangeButtonsInViewHierarchyIfNeeded;
- (void)addButton:(id)arg1 style:(int)arg2 insets:(struct UIEdgeInsets)arg3 showHorizontalDivider:(_Bool)arg4 action:(CDUnknownBlockType)arg5;
- (void)addButton:(id)arg1 style:(int)arg2 action:(CDUnknownBlockType)arg3;
- (void)addTitle:(id)arg1 iconImage:(id)arg2 style:(int)arg3 automationIdentifier:(id)arg4 accessibilityTraits:(unsigned long long)arg5 insets:(struct UIEdgeInsets)arg6 showHorizontalDivider:(_Bool)arg7 action:(CDUnknownBlockType)arg8;
- (void)addTitle:(id)arg1 iconImage:(id)arg2 style:(int)arg3 automationIdentifier:(id)arg4 insets:(struct UIEdgeInsets)arg5 showHorizontalDivider:(_Bool)arg6 action:(CDUnknownBlockType)arg7;
- (void)addTitle:(id)arg1 style:(int)arg2 automationIdentifier:(id)arg3 action:(CDUnknownBlockType)arg4;
- (void)applyDialogButtonStyle:(int)arg1 toButton:(id)arg2 shouldWrapButtonLabels:(_Bool)arg3;
@property(nonatomic) long long checkboxTitleLineBreakMode;
- (id)lines;
- (id)actionButtonLines:(_Bool)arg1;
- (void)addVerticalSpacingToLines:(id)arg1;
- (void)addLineWithInsetView:(id)arg1 toLines:(id)arg2;
- (void)addLineWithRightAlignedButtonInset:(id)arg1 toLines:(id)arg2;
- (void)addLineWithInsetStretchyView:(id)arg1 toLines:(id)arg2;
- (void)addLineWithStretchyView:(id)arg1 toLines:(id)arg2;
- (void)addLineWithView:(id)arg1 contentInsets:(struct UIEdgeInsets)arg2 horizontalAlignment:(long long)arg3 toLines:(id)arg4;
- (void)addLineWithCenteredView:(id)arg1 toLines:(id)arg2;
- (void)addTitleBackgroundImageViewToLines:(id)arg1;
- (struct UIEdgeInsets)contentInsets;
- (void)addExtraContentViewToLines:(id)arg1;
- (_Bool)shouldLayoutButtonsHorizontally;
- (double)dialogWidth;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateActionButtonSizes;
- (double)headerHeight;
- (void)safeAreaInsetsDidChange;
- (void)layoutSubviews;
- (void)updateFonts;
- (void)contentSizeCategoryDidChange:(id)arg1;
@property(nonatomic, setter=goo_setAdjustsFontForContentSizeCategory:) _Bool goo_adjustsFontForContentSizeCategory;
@property(nonatomic, getter=isChecked) _Bool checked;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)dynamicMenuTitleFont;
- (id)dynamicButtonFontForLayoutStyle:(long long)arg1;
- (id)dynamicDialogButtonFont;
- (id)dynamicDialogBodyFont;
- (id)dynamicDialogTitleFont;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

