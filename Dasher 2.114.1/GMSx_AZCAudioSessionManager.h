//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVAudioSession, GMSAnalyticsTimer, NSArray, NSHashTable, NSMutableArray;
@protocol GMSAnalyticsLogger, GMSDUserDefaults, GMSTimingClock, GMSUserEvent3Logging, NSObject;

@interface GMSx_AZCAudioSessionManager : NSObject
{
    AVAudioSession *_cachedAudioSession;
    id <GMSDUserDefaults> _userDefaults;
    id <GMSAnalyticsLogger> _analyticsLogger;
    id <GMSUserEvent3Logging> _UE3Logger;
    id <GMSTimingClock> _clock;
    _Bool _audioSessionActive;
    _Bool _volumeCaptureAudioSessionActive;
    _Bool _duckOtherAudio;
    long long _playbackCount;
    long long _recordingCount;
    long long _interruptionCount;
    _Bool _currentAudioRouteHasBluetoothA2DP;
    NSMutableArray *_audioObjects;
    NSHashTable *_audioSessionEventListeners;
    id <NSObject> _resumeAudioCaptureTimerTask;
    _Bool _isRequestingMicPermission;
    GMSAnalyticsTimer *_audioSessionCreationTimer;
    _Bool _background;
    _Bool _shouldUseVoicePromptAudioMode;
    long long _playbackDevice;
    NSArray *_currentAudioSessionRouteOutputs;
}

- (void).cxx_destruct;
@property(copy) NSArray *currentAudioSessionRouteOutputs; // @synthesize currentAudioSessionRouteOutputs=_currentAudioSessionRouteOutputs;
@property _Bool shouldUseVoicePromptAudioMode; // @synthesize shouldUseVoicePromptAudioMode=_shouldUseVoicePromptAudioMode;
- (_Bool)isPortAutomotiveConnection:(id)arg1;
- (void)endAllPlayback;
- (void)handleRouteChange:(id)arg1;
- (void)handleInterruption:(id)arg1;
- (void)clearAudioSessionEventObservers;
- (void)removeAudioSessionEventObserver:(id)arg1;
- (void)addAudioSessionEventObserver:(id)arg1;
@property(readonly) _Bool isInputAvailable;
- (void)endRecordingAudio:(id)arg1;
- (void)beginRecordingAudio:(id)arg1;
- (void)endPlayback:(id)arg1;
- (void)beginPlayback:(id)arg1;
@property(readonly, nonatomic) _Bool isOtherAudioPlaying;
@property(readonly) float outputVolume;
@property(getter=isBackground) _Bool background; // @synthesize background=_background;
@property long long playbackDevice; // @synthesize playbackDevice=_playbackDevice;
- (void)updateMicrophonePermissionState;
@property(readonly, nonatomic) unsigned long long recordPermission;
- (void)createAudioSession;
@property(readonly, nonatomic) AVAudioSession *audioSession;
- (_Bool)isWiredHeadset;
- (_Bool)isAudioOutputAutomotive;
- (_Bool)isAudioOutputUSB;
- (_Bool)isAudioOutputBluetooth;
- (void)updateAudioSessionCategoryForAudioObject:(id)arg1;
- (void)setAudioSessionActive:(_Bool)arg1 audioObject:(id)arg2;
- (void)endPlaybackOrRecordingWithObject:(id)arg1;
- (void)beginPlaybackOrRecordingWithObject:(id)arg1;
- (_Bool)isPlayingOrRecordingAudio;
- (void)updateAudioRouteOutputs:(id)arg1;
- (_Bool)shouldDuckOtherAudio;
- (_Bool)shouldForceAudioToPhoneSpeaker;
- (_Bool)shouldForceAudioToBluetoothHFP;
- (void)postIsRequestingPermissions:(_Bool)arg1;
- (void)requestRecordPermission:(CDUnknownBlockType)arg1 withContext:(unsigned long long)arg2;
- (void)requestRecordPermission:(CDUnknownBlockType)arg1;
- (id)initWithUserDefaults:(id)arg1 analyticsLogger:(id)arg2 UE3Logger:(id)arg3 clock:(id)arg4;

@end

