//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NavigationFramework/GMSCalloutImageSource-Protocol.h>

@class NSArray, NSString, UIColor, UIImage;

@interface GMSDCalloutRenderer : NSObject <GMSCalloutImageSource>
{
    _Bool _layoutValid;
    _Bool _hasRenderedSinceContentUpdate;
    _Bool _visible;
    struct CGSize _contentSize;
    struct vector<CGSize, std::__1::allocator<CGSize>> _textSizes;
    vector_b67dfe3a _capHeightOffsets;
    struct array<UIEdgeInsets, 6> _arrowInsetsArray;
    struct CGSize _iconSize;
    double _scale;
    double _cameraPixelScale;
    _Bool _centerTextVertically;
    _Bool _useRTL;
    int _iconAlignment;
    int _iconPosition;
    int _textAlignment;
    NSArray *_textLines;
    NSArray *_scaledTextLines;
    UIImage *_icon;
    UIColor *_backgroundColor;
    UIColor *_borderColor;
    double _borderStrokeWidth;
    double _iconTextSpacing;
    double _lineSpacing;
    double _smallSizeScale;
    double _cornerRadius;
    double _arrowLength;
    double _arrowThickness;
    NSArray *_shadowMetrics;
    struct UIEdgeInsets _insets;
}

+ (double)defaultSmallSizeScale;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic, getter=isVisible) _Bool visible; // @synthesize visible=_visible;
@property(nonatomic) _Bool useRTL; // @synthesize useRTL=_useRTL;
@property(nonatomic) _Bool centerTextVertically; // @synthesize centerTextVertically=_centerTextVertically;
@property(nonatomic) int textAlignment; // @synthesize textAlignment=_textAlignment;
@property(copy, nonatomic) NSArray *shadowMetrics; // @synthesize shadowMetrics=_shadowMetrics;
@property(nonatomic) double arrowThickness; // @synthesize arrowThickness=_arrowThickness;
@property(nonatomic) double arrowLength; // @synthesize arrowLength=_arrowLength;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double smallSizeScale; // @synthesize smallSizeScale=_smallSizeScale;
@property(nonatomic) double lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) double iconTextSpacing; // @synthesize iconTextSpacing=_iconTextSpacing;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) double borderStrokeWidth; // @synthesize borderStrokeWidth=_borderStrokeWidth;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) int iconPosition; // @synthesize iconPosition=_iconPosition;
@property(nonatomic) int iconAlignment; // @synthesize iconAlignment=_iconAlignment;
@property(copy, nonatomic) UIImage *icon; // @synthesize icon=_icon;
@property(copy, nonatomic) NSArray *scaledTextLines; // @synthesize scaledTextLines=_scaledTextLines;
@property(copy, nonatomic) NSArray *textLines; // @synthesize textLines=_textLines;
- (_Bool)hasRenderedSinceContentUpdate;
- (struct UIEdgeInsets)arrowInsetsForArrowPosition:(int)arg1;
- (void)setArrowInsets:(struct UIEdgeInsets)arg1 forArrowPosition:(int)arg2;
- (id)scaledLinesForLines:(id)arg1;
- (struct CalloutImageLayout)layoutForArrowPosition:(int)arg1 imageScale:(double)arg2;
- (struct CalloutImageLayout)layoutForArrowPosition:(int)arg1 smallSize:(_Bool)arg2;
- (double)textHeight;
- (void)ensureContentLayout;
- (_Bool)isIconPrecedingText;
- (struct CGPoint)contentOriginForArrowPosition:(int)arg1;
- (double)iconTopPositionForHeight:(double)arg1;
- (double)iconLeftPositionForWidth:(double)arg1;
- (double)textLeftPositionForTextWidth:(double)arg1;
- (void)renderContentInContext:(struct CGContext *)arg1 arrowPosition:(int)arg2 exception:(id *)arg3;
- (struct CGImage *)imageWithArrowPosition:(int)arg1 smallSize:(_Bool)arg2;
- (id)initWithScreenInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

