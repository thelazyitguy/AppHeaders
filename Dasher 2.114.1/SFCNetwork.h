//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ServiceCore/NSURLSessionDataDelegate-Protocol.h>
#import <ServiceCore/NSURLSessionDownloadDelegate-Protocol.h>
#import <ServiceCore/SFCContainerDelegate-Protocol.h>

@class NSArray, NSNumber, NSOperationQueue, NSPointerArray, NSProgress, NSString, NSURLSession, SFCContainer, SFCDelegate;
@protocol OS_dispatch_queue, SFCNetworkDelegate;

@interface SFCNetwork : NSObject <SFCContainerDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
{
    SFCDelegate *_delegate;
    NSNumber *_offlineCacheEnabled;
    NSPointerArray *_outputCachePointers;
    _Bool _networkSuspended;
    _Bool _online;
    _Bool _refreshingAccessToken;
    _Bool _cancelling;
    _Bool _pausing;
    _Bool _cacheIsConfigured;
    NSURLSession *_ephemeralSession;
    SFCContainer *_container;
    NSProgress *_progress;
    NSString *_securityToken;
    NSObject<OS_dispatch_queue> *_duplicateActionDetectionQueue;
    NSObject<OS_dispatch_queue> *_actionQueue;
    NSOperationQueue *_queue;
    NSURLSession *_backgroundSession;
    NSString *_userAgent;
    unsigned long long _actionCount;
}

+ (void)removeSharedInstance:(id)arg1;
+ (id)cachedNetworkForContainer:(id)arg1;
+ (id)networkForContainer:(id)arg1;
+ (void)initialize;
@property(nonatomic, getter=hasCacheBeenConfigured) _Bool cacheIsConfigured; // @synthesize cacheIsConfigured=_cacheIsConfigured;
@property(nonatomic) unsigned long long actionCount; // @synthesize actionCount=_actionCount;
@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(retain, nonatomic) NSURLSession *backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *actionQueue; // @synthesize actionQueue=_actionQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *duplicateActionDetectionQueue; // @synthesize duplicateActionDetectionQueue=_duplicateActionDetectionQueue;
@property _Bool pausing; // @synthesize pausing=_pausing;
@property _Bool cancelling; // @synthesize cancelling=_cancelling;
@property(copy, nonatomic) NSString *securityToken; // @synthesize securityToken=_securityToken;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(readonly, getter=isRefreshingAccessToken) _Bool refreshingAccessToken; // @synthesize refreshingAccessToken=_refreshingAccessToken;
@property(retain, nonatomic) SFCContainer *container; // @synthesize container=_container;
@property(readonly, nonatomic, getter=isOnline) _Bool online; // @synthesize online=_online;
@property(nonatomic, getter=isNetworkSuspended) _Bool networkSuspended; // @synthesize networkSuspended=_networkSuspended;
@property(retain, nonatomic) NSURLSession *ephemeralSession; // @synthesize ephemeralSession=_ephemeralSession;
- (void).cxx_destruct;
- (_Bool)container:(id)arg1 willBeRemovedWithError:(id *)arg2;
- (void)container:(id)arg1 credentialAdded:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (id)delegates;
@property(readonly, nonatomic) NSObject<SFCNetworkDelegate> *delegate;
- (id)actionForSessionTask:(id)arg1;
- (void)cancelAllActionsWithContext:(id)arg1;
- (void)cancelAllActions;
- (id)actionsWithContext:(id)arg1;
- (void)executeActions:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)executeAction:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithContainer:(id)arg1;
- (void)removeOutputCache:(id)arg1;
- (void)addOutputCache:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *outputCaches;
- (id)cachesForAction:(id)arg1;
@property(readonly, nonatomic) NSPointerArray *outputCachePointers; // @dynamic outputCachePointers;
- (void)notifyDelegateForActions:(id)arg1 fromBatches:(id)arg2;
- (id)batchActionsForClass:(Class)arg1 forActions:(id)arg2 extendingCurrentBatches:(id)arg3;
- (id)coalescePendingBatchableActions:(id)arg1;
- (id)pendingBatchableActions:(id)arg1;
- (id)extendableBatchOperations;
- (id)duplicateActionInFlight:(id)arg1;
- (void)scheduleAction:(id)arg1;
@property(nonatomic) double coalescenceTimeout;
- (void)scheduleTimer;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

