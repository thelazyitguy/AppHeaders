//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NavigationFramework/GMSNavArrivalListener-Protocol.h>
#import <NavigationFramework/GMSNavProgressionListener-Protocol.h>
#import <NavigationFramework/GMSNavRouteChangeListener-Protocol.h>
#import <NavigationFramework/LocationListener-Protocol.h>

@class GMSDLocation, GMSDTrip, GMSNSpeedLimitInfo, GMSNavGuidanceManager, GMSx_LocationPipeline, GMSx_SpeedLimitChange, NSHashTable, NSString;

@interface GMSNSpeedLimitController : NSObject <GMSNavArrivalListener, GMSNavProgressionListener, GMSNavRouteChangeListener, LocationListener>
{
    GMSNavGuidanceManager *_navGuidanceManager;
    GMSx_SpeedLimitChange *_speedLimitChangeByTheEndOfLastStep;
    GMSDTrip *_route;
    NSHashTable *_listeners;
    GMSx_LocationPipeline *_locationPipeline;
    GMSDLocation *_prevLocation;
    double _minorSpeedingThresholdPercentage;
    double _majorSpeedingThresholdPercentage;
    double _minorSpeedingStartTime;
    double _speedTimestamp;
    _Bool _enabled;
    double _severityUpgradeDurationSeconds;
    double _minorSpeedingThresholdMph;
    double _minorSpeedingThresholdKph;
    double _majorSpeedingThresholdMph;
    double _majorSpeedingThresholdKph;
    double _speedLimit;
    long long _distanceUnit;
    double _speed;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) double speed; // @synthesize speed=_speed;
@property(readonly, nonatomic) long long distanceUnit; // @synthesize distanceUnit=_distanceUnit;
@property(readonly, nonatomic) double speedLimit; // @synthesize speedLimit=_speedLimit;
@property(nonatomic) double majorSpeedingThresholdKph; // @synthesize majorSpeedingThresholdKph=_majorSpeedingThresholdKph;
@property(nonatomic) double majorSpeedingThresholdMph; // @synthesize majorSpeedingThresholdMph=_majorSpeedingThresholdMph;
@property(nonatomic) double minorSpeedingThresholdKph; // @synthesize minorSpeedingThresholdKph=_minorSpeedingThresholdKph;
@property(nonatomic) double minorSpeedingThresholdMph; // @synthesize minorSpeedingThresholdMph=_minorSpeedingThresholdMph;
@property(nonatomic) double severityUpgradeDurationSeconds; // @synthesize severityUpgradeDurationSeconds=_severityUpgradeDurationSeconds;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void)updateSpeed:(double)arg1;
- (void)setSpeedLimit:(double)arg1 distanceUnit:(long long)arg2 route:(id)arg3;
- (double)speedingThresholdValueForSpeedingType:(unsigned long long)arg1 distanceUnit:(long long)arg2;
- (unsigned long long)speedingTypeWithValueThreshold;
- (unsigned long long)speedingTypeWithPercentageThresholds;
@property(readonly, nonatomic) unsigned long long speedingType;
- (void)setUnknownSpeedLimit;
- (void)updateLocation:(id)arg1 dispatcher:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didReceiveGuidanceEvent:(id)arg2 metersToStep:(int)arg3;
- (void)navGuidanceManager:(id)arg1 isApproachingGuidanceEvent:(id)arg2 metersFromGuidanceEventToStep:(int)arg3;
- (void)navGuidanceManager:(id)arg1 didChangeStepWithState:(id)arg2 metadata:(id)arg3;
- (void)navGuidanceManager:(id)arg1 didProgressWithState:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didCancelRoute:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didCompleteRouteSuccessfully:(id)arg2;
- (void)navGuidanceManager:(id)arg1 didFailRerouteWithState:(id)arg2 metadata:(id)arg3;
- (void)navGuidanceManager:(id)arg1 didRequestRerouteWithState:(id)arg2 metadata:(id)arg3;
- (void)navGuidanceManager:(id)arg1 didChangeRouteWithState:(id)arg2 metadata:(id)arg3;
- (void)resetPercentageSpeedingThresholds;
- (void)setSpeedingThresholdPercentage:(double)arg1 forSpeedingType:(unsigned long long)arg2;
- (void)removeSpeedLimitEventListener:(id)arg1;
- (void)addSpeedLimitEventListener:(id)arg1;
@property(readonly, nonatomic) GMSNSpeedLimitInfo *speedLimitInfo;
- (id)initWithNavGuidanceManager:(id)arg1 locationPipeline:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

