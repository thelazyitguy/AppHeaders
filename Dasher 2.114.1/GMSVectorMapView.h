//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <NavigationFramework/GMSGestureHandlerView.h>

#import <NavigationFramework/CAAnimationDelegate-Protocol.h>
#import <NavigationFramework/GMSAccessibilityContainer-Protocol.h>
#import <NavigationFramework/GMSEntityUIHandler-Protocol.h>
#import <NavigationFramework/GMSIndoorFocusDelegate-Protocol.h>
#import <NavigationFramework/GMSIndoorStateListener-Protocol.h>
#import <NavigationFramework/GMSIndoorTileObserverDelegate-Protocol.h>
#import <NavigationFramework/GMSMyLocationEntityProviderDelegate-Protocol.h>
#import <NavigationFramework/UIGestureRecognizerDelegate-Protocol.h>

@class GMSAnalytics, GMSColoredOverlayEntityProvider, GMSCoreClientParameters, GMSEntityResources, GMSIndoorFocusManager, GMSIndoorState, GMSIndoorTileObserver, GMSLabelsEntityProvider, GMSMyLocationEntityProvider, GMSNetworkMonitor, GMSPointsEntityProvider, GMSServerResourceManager, GMSStyleTableService, GMSTileRequestCoordinator, GMSTileType, GMSTilesEntityProvider, GMSVectorMapLayer, GMSVectorMapResources, GMSVectorMapViewAccessibilityElement, NSArray, NSMutableArray, NSString, NSThread;
@protocol GMSEntityTappableUIItem, GMSTileServiceRegistry, GMSVectorMapViewDelegate;

@interface GMSVectorMapView : GMSGestureHandlerView <UIGestureRecognizerDelegate, GMSIndoorFocusDelegate, GMSIndoorStateListener, GMSIndoorTileObserverDelegate, GMSMyLocationEntityProviderDelegate, GMSAccessibilityContainer, GMSEntityUIHandler, CAAnimationDelegate>
{
    id <GMSTileServiceRegistry> _tileServiceRegistry;
    GMSTileRequestCoordinator *_tileRequestCoordinator;
    GMSServerResourceManager *_resourceManager;
    GMSNetworkMonitor *_networkMonitor;
    NSThread *_renderingThread;
    GMSLabelsEntityProvider *_labelsEntityProvider;
    GMSTilesEntityProvider *_tilesEntityProvider;
    GMSColoredOverlayEntityProvider *_dimmingEntityProvider;
    GMSPointsEntityProvider *_pointsEntityProvider;
    NSMutableArray *_entityProviders;
    struct set<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> _behaviors;
    GMSIndoorTileObserver *_indoorTileObserver;
    GMSIndoorFocusManager *_indoorFocusManager;
    GMSMyLocationEntityProvider *_myLocationEntityProvider;
    GMSCoreClientParameters *_clientParameters;
    GMSVectorMapResources *_resources;
    reffed_ptr_933c1cb6 _textureAtlasesContext;
    GMSEntityResources *_entityResources;
    float _startingZoomForPinch;
    double _startingAngleForTilt;
    double _startingAngleForRotate;
    int _overTiltDirection;
    struct CameraPosition {
        struct GMSVectorMapCameraPosition position_;
    } _oldCameraPosition;
    unsigned long long _cameraChangeReason;
    GMSVectorMapViewAccessibilityElement *_mapAccessibilityElement;
    int _labelsPerformanceCounter;
    int _roadsPerformanceCounter;
    int _fetchOnlyRequiredBaseTilesPerformanceCounter;
    int _cameraMovementCounter;
    GMSVectorMapLayer *_mapLayer;
    NSMutableArray *_accessibilityItems;
    NSMutableArray *_visibleAccessibilityItems;
    struct TappableMapItemQueue _tappableUIItems;
    struct stack<GMSEntityTapClassStatusSet, std::__1::deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>>> _tappableUIStatusStack;
    int _uiItemTransactionCount;
    id _accessibilityItemSelected;
    reffed_ptr_329922e5 _viewCamera;
    _Bool _viewCameraHasRealPosition;
    struct Point2D _anchorGroundLocation;
    struct CGPoint _anchorScreenLocation;
    _Bool _panInProjectedSpace;
    float _minZoomForCamera;
    float _lastAspectRatio;
    struct unique_ptr<(anonymous namespace)::ViewRenderTargetChangedSizeListener, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> _viewRenderTargetChangedSizeListener;
    reffed_ptr_329922e5 _behaviorCamera;
    _Bool _shouldCallMapSettled;
    struct shared_ptr<(anonymous namespace)::LabelingUpdateListener> _labelingUpdateListener;
    long long _cameraMovementTypeFlags;
    _Bool _isLoadingTiles;
    _Bool _appStartingUp;
    _Bool _cameraFollowsUser;
    _Bool _myLocationEnabled;
    _Bool _myLocationAvailable;
    _Bool _myLocationTapEnabled;
    _Bool _userLocationUnknownOrStale;
    _Bool _incognitoMode;
    _Bool _navigating;
    _Bool _overTiltEnabled;
    _Bool _userBearingCalibrated;
    _Bool _accessibilityElementsEnabled;
    float _minZoom;
    float _maxZoom;
    float _tapPaddingSizePts;
    GMSStyleTableService *_styleTableService;
    id <GMSVectorMapViewDelegate> _delegate;
    double _userBearing;
    double _userBearingAccuracy;
    unsigned long long _activeCameraAnimationCount;
    GMSIndoorState *_indoorState;
    id <GMSEntityTappableUIItem> _selectedUIItem;
    GMSAnalytics *_analytics;
    shared_ptr_a67c817a _calloutState;
    struct GMSCoordinateRectangle _cameraAreaRestriction;
}

+ (id)createLabelsEntityProviderWithStyleTableService:(id)arg1 clientParameters:(id)arg2 resourceManager:(id)arg3 renderingThread:(id)arg4;
+ (id)createTilesEntityProviderWithVectorMapView:(id)arg1 tileServiceRegistry:(id)arg2 styleTableService:(id)arg3 tileRequestCoordinator:(id)arg4 clientParameters:(id)arg5 resourceManager:(id)arg6 tileCounterfactualLogger:(id)arg7 mapViewFlags:(unsigned long long)arg8 labelsEntityProvider:(id)arg9;
+ (Class)layerClass;
+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) float tapPaddingSizePts; // @synthesize tapPaddingSizePts=_tapPaddingSizePts;
@property(readonly, nonatomic) GMSServerResourceManager *resourceManager; // @synthesize resourceManager=_resourceManager;
@property(retain, nonatomic) GMSAnalytics *analytics; // @synthesize analytics=_analytics;
@property(retain, nonatomic) id <GMSEntityTappableUIItem> selectedUIItem; // @synthesize selectedUIItem=_selectedUIItem;
@property(nonatomic, getter=areAccessibilityElementsEnabled) _Bool accessibilityElementsEnabled; // @synthesize accessibilityElementsEnabled=_accessibilityElementsEnabled;
@property(readonly, nonatomic) shared_ptr_a67c817a calloutState; // @synthesize calloutState=_calloutState;
@property(readonly, nonatomic) GMSIndoorState *indoorState; // @synthesize indoorState=_indoorState;
@property(nonatomic) unsigned long long activeCameraAnimationCount; // @synthesize activeCameraAnimationCount=_activeCameraAnimationCount;
@property(nonatomic) _Bool userBearingCalibrated; // @synthesize userBearingCalibrated=_userBearingCalibrated;
@property(nonatomic) double userBearingAccuracy; // @synthesize userBearingAccuracy=_userBearingAccuracy;
@property(nonatomic) double userBearing; // @synthesize userBearing=_userBearing;
@property(nonatomic) struct GMSCoordinateRectangle cameraAreaRestriction; // @synthesize cameraAreaRestriction=_cameraAreaRestriction;
@property(nonatomic) float maxZoom; // @synthesize maxZoom=_maxZoom;
@property(nonatomic) float minZoom; // @synthesize minZoom=_minZoom;
@property(nonatomic, getter=isOverTiltEnabled) _Bool overTiltEnabled; // @synthesize overTiltEnabled=_overTiltEnabled;
@property(nonatomic, getter=isNavigating) _Bool navigating; // @synthesize navigating=_navigating;
@property(nonatomic) _Bool incognitoMode; // @synthesize incognitoMode=_incognitoMode;
@property(nonatomic) _Bool userLocationUnknownOrStale; // @synthesize userLocationUnknownOrStale=_userLocationUnknownOrStale;
@property(nonatomic) _Bool myLocationTapEnabled; // @synthesize myLocationTapEnabled=_myLocationTapEnabled;
@property(nonatomic) _Bool myLocationAvailable; // @synthesize myLocationAvailable=_myLocationAvailable;
@property(nonatomic) _Bool myLocationEnabled; // @synthesize myLocationEnabled=_myLocationEnabled;
@property(nonatomic) _Bool cameraFollowsUser; // @synthesize cameraFollowsUser=_cameraFollowsUser;
@property(nonatomic) __weak id <GMSVectorMapViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GMSStyleTableService *styleTableService; // @synthesize styleTableService=_styleTableService;
- (void)disablePerformanceMode:(unsigned long long)arg1;
- (void)enablePerformanceMode:(unsigned long long)arg1;
- (void)didEndGesturesIsReset:(_Bool)arg1;
@property(readonly, nonatomic) NSArray *tappableUIItems;
- (struct WrappedFrustum2D)mapFrustrumForMapPointTap:(struct CGPoint)arg1;
- (void)viewRenderTargetChangedSize;
- (void)layerDidUpdateCameraPosition;
- (void)didDestroyRenderer;
- (void)willPausePhoenixRenderer:(id)arg1;
- (void)willDestroyPhoenixRenderer:(id)arg1;
- (void)didResumePhoenixRenderer:(id)arg1;
- (void)didCreatePhoenixRenderer:(id)arg1;
- (void)didChangeRenderTarget;
- (vector_ef47c132)phoenixRenderBins;
@property(readonly, nonatomic) struct GMSCoordinateRectangle animatingViewport;
@property(readonly, nonatomic) struct GMSCoordinateRectangle viewport;
- (void)limitCameraZoomLevel;
- (void)clampToMaxViewingAngle;
- (void)networkWasFound:(id)arg1;
- (void)networkWasLost:(id)arg1;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)signalDelegateIfSettled;
- (void)draw;
- (void)setupRenderTargetAndCameras;
- (id)entityResources;
- (void)clearTextureCaches;
- (void)waitUntilAllGlyphsLoaded;
- (void)didUpdateVisibleCopyrights:(id)arg1 imageryCopyrights:(id)arg2 copyrightYear:(int)arg3;
- (id)pointsEntityProvider;
- (id)labelsEntityProvider;
- (void)lastUpdateHadPendingTiles;
- (void)lastUpdateHadAllTiles;
- (id)renderingThread;
- (void)myLocationEntityProviderWasTapped:(id)arg1;
- (void)indoorState:(id)arg1 didChangeActiveLevel:(struct GMSFeatureID)arg2 fromLevel:(struct GMSFeatureID)arg3;
- (void)indoorTileObserverProcessedTileBatch:(id)arg1;
- (void)didUpdateFocusedBuilding:(id)arg1 fromBuilding:(id)arg2 activeLevel:(id)arg3;
- (struct CGRect)accessibilityFrameForPoints:(const vector_0482d731 *)arg1;
- (struct CGRect)accessibilityFrameForPoint:(struct GMSPoint2D)arg1;
- (struct CGRect)accessibilityFrameForRect:(const struct Rectangle2D *)arg1;
- (void)accessibilityElementDidBecomeFocused;
- (void)accessibilityDecrement;
- (void)accessibilityIncrement;
- (_Bool)accessibilityScroll:(long long)arg1;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)accessibilityElementCount;
- (void)accessibilityElementDidLoseFocus:(id)arg1;
- (void)accessibilityElementDidBecomeFocused:(id)arg1;
- (_Bool)isAccessibilityElement;
- (void)buildVisibleAccessibilityItems;
- (void)commitAccessibleUIItemTransaction;
- (void)startAccessibleUIItemTransaction;
- (struct GMSEntityTapClassStatusSet)popTappableClassState;
- (void)pushTappableClassState:(const struct GMSEntityTapClassStatusSet *)arg1;
- (void)handleUIItemTransactionIfAppropriate;
- (void)replaceAccessibleUIItem:(id)arg1 withItem:(id)arg2;
- (void)removeAccessibleUIItem:(id)arg1;
- (void)addAccessibleUIItem:(id)arg1;
- (void)replaceTappableUIItem:(id)arg1 withItem:(id)arg2;
- (void)removeTappableUIItem:(id)arg1;
- (void)addTappableUIItem:(id)arg1;
- (void)didEndGestures;
- (void)willStartGestures;
- (void)resetGestureState;
- (_Bool)didStartForceTouchAt:(struct CGPoint)arg1;
- (void)didStartLongPressAt:(struct CGPoint)arg1;
- (void)clearSelectedUIItem;
- (id)calculateSelectedItemAt:(struct CGPoint)arg1;
- (void)didTapAt:(struct CGPoint)arg1;
- (void)willBeginSingleTapGestureAt:(struct CGPoint)arg1;
- (void)handleZoomOut:(struct CGPoint)arg1;
- (void)handleZoomIn:(struct CGPoint)arg1;
- (struct CGPoint)createScreenPointFromLatitude:(double)arg1 longitude:(double)arg2;
- (void)didZoomStepAt:(struct CGPoint)arg1 zoomingIn:(_Bool)arg2;
- (void)didRotateRelative:(double)arg1;
- (void)willStartRotation;
- (void)didTiltRelative:(double)arg1;
- (void)willStartTilt;
- (void)didEndRotationDeceleration;
- (void)willStartRotationDeceleration;
- (void)didEndZoomDeceleration;
- (void)willStartZoomDeceleration;
- (void)didZoomRelative:(double)arg1;
- (void)willStartZoom;
- (void)panToMapPoint:(struct Point2D)arg1;
- (void)panToScreenPoint:(struct CGPoint)arg1;
- (void)panFromViewPosition:(struct CGPoint)arg1 toViewPosition:(struct CGPoint)arg2 animated:(_Bool)arg3;
- (void)didPanTo:(struct CGPoint)arg1;
- (void)willStartPanFrom:(struct CGPoint)arg1;
- (void)didEndPanDeceleration;
- (void)willStartPanDeceleration;
- (void)decrementCameraMovementWithType:(long long)arg1;
- (void)incrementCameraMovementWithType:(long long)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStart:(id)arg1;
@property(readonly, nonatomic) double myLocationEntityRadius;
@property(nonatomic) float cameraLookAhead;
- (void)setCameraViewingAngleUnclamped:(double)arg1;
@property(nonatomic) double cameraViewingAngle;
@property(nonatomic) float cameraZoomLevel;
@property(nonatomic) double cameraBearing;
@property(nonatomic) double cameraLongitude;
@property(nonatomic) double cameraLatitude;
@property(readonly, nonatomic) struct GMSCoordinate animatingUserPosition;
@property(nonatomic) double userAccuracy;
@property(nonatomic) double userLongitude;
@property(nonatomic) double userLatitude;
- (double)locationDotTapRadiusPt;
- (unsigned long long)locationDotMode;
- (void)removeMyLocationIndicator:(const reffed_ptr_c6b907f4 *)arg1;
- (void)pushMyLocationIndicator:(const reffed_ptr_c6b907f4 *)arg1;
- (void)setBackgroundColorForMode:(int)arg1;
- (struct GMSFeatureID)levelIDForCoordinate:(struct GMSCoordinate)arg1;
- (reffed_ptr_329922e5)behaviorCamera;
- (reffed_ptr_329922e5)viewCameraCopy;
- (void)disableRendering;
- (void)enableRenderingAndRedraw;
@property(nonatomic, getter=isLabelingEnabled) _Bool labelingEnabled;
@property(readonly, nonatomic) unsigned long long mapInstabilityReasons;
@property(readonly, nonatomic, getter=isMapStable) _Bool mapStable;
@property(readonly, nonatomic) unsigned long long totalMissingVisibleTiles;
@property(readonly, nonatomic) unsigned long long totalVisibleTiles;
@property(readonly, nonatomic) _Bool lastTileUpdateHadNoTiles;
@property(readonly, nonatomic) _Bool lastTileUpdateHadAllTiles;
- (void)removeTileObserver:(id)arg1;
- (void)addTileObserver:(id)arg1;
- (void)removeOverlayTileProvider:(id)arg1;
- (void)addOverlayTileProvider:(id)arg1;
- (void)setTileServiceRegistry:(id)arg1;
- (void)setMapImageMode:(int)arg1 vectorMode:(int)arg2;
- (int)mapStyleForCurrentMode;
@property(readonly, nonatomic) int mapVectorMode;
@property(readonly, nonatomic) int mapImageMode;
- (void)stopAndRemoveAllAnimations;
@property(readonly, nonatomic) struct CameraPosition animatingCameraPosition;
@property(readonly, nonatomic) struct CameraPosition cameraPosition;
- (struct GMSPoint2D)mapPointFromWindowCoords:(struct CGPoint)arg1 valid:(_Bool *)arg2;
- (struct CameraPosition)cameraPositionForRect:(const struct Rectangle2D *)arg1 inViewRect:(const struct CGRect *)arg2;
@property(nonatomic, getter=isIndoorEnabled) _Bool indoorEnabled;
@property(nonatomic, getter=shouldMakePOIsTappable) _Bool makePOIsTappable;
@property(nonatomic, getter=isCategoricalSearchResultsMapStyleEnabled) _Bool categoricalSearchResultsMapStyleEnabled;
@property(nonatomic, getter=isBuildingsEnabled) _Bool buildingsEnabled;
- (void)handleLightDarkModeChange;
- (_Bool)isDarkMode;
@property(nonatomic, getter=isNightMode) _Bool nightMode;
@property(nonatomic) _Bool preferHighContrastDrivingStyle;
- (void)updateMyLocationMode;
- (void)updateEntityProvidersWithMyLocation;
- (void)setUserPosition:(struct GMSPoint2D)arg1 userBearing:(double)arg2 userBearingAccuracy:(double)arg3 userBearingCalibrated:(_Bool)arg4 accuracy:(double)arg5;
- (void)removeBehavior:(reffed_ptr_d6c13506)arg1;
- (void)addBehavior:(reffed_ptr_d6c13506)arg1;
- (void)removeEntityProvider:(id)arg1;
- (void)addEntityProvider:(id)arg1;
@property(readonly, nonatomic) GMSTileType *psmTileType;
@property(readonly, nonatomic) GMSTileType *baseTileType;
- (float)minZoomForCamera;
- (struct GMSCoordinate)repositionCoordinate:(struct GMSCoordinate)arg1 forNewFrame:(struct CGRect)arg2 oldFrame:(struct CGRect)arg3;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 tileServiceRegistry:(id)arg2 styleTableService:(id)arg3 tileRequestCoordinator:(id)arg4 clientParameters:(id)arg5 resourceManager:(id)arg6 sharedResourceCache:(id)arg7 networkMonitor:(id)arg8 timingClock:(id)arg9 logger:(id)arg10 displayLink:(id)arg11 offscreenSink:(id)arg12 externalTime:(struct Time *)arg13 flags:(unsigned long long)arg14;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

