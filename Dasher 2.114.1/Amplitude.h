//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AMPDatabaseHelper, AMPDeviceInfo, AMPLocationManagerDelegate, CLLocation, CLLocationManager, NSMutableDictionary, NSOperationQueue, NSString;

@interface Amplitude : NSObject
{
    NSString *_eventsDataPath;
    NSMutableDictionary *_propertyList;
    _Bool _updateScheduled;
    _Bool _updatingCurrently;
    unsigned long long _uploadTaskID;
    AMPDeviceInfo *_deviceInfo;
    _Bool _useAdvertisingIdForDeviceId;
    CLLocation *_lastKnownLocation;
    _Bool _locationListeningEnabled;
    CLLocationManager *_locationManager;
    AMPLocationManagerDelegate *_locationManagerDelegate;
    _Bool _inForeground;
    _Bool _offline;
    _Bool _trackingSessionEvents;
    _Bool _initialized;
    _Bool _sslPinningEnabled;
    _Bool _backoffUpload;
    int _eventUploadThreshold;
    int _eventUploadMaxBatchSize;
    int _eventMaxCount;
    int _eventUploadPeriodSeconds;
    int _backoffUploadBatchSize;
    NSString *_apiKey;
    NSString *_userId;
    NSString *_deviceId;
    NSString *_instanceName;
    NSString *_propertyListPath;
    long long _minTimeBetweenSessionsMillis;
    NSOperationQueue *_backgroundQueue;
    NSOperationQueue *_initializerQueue;
    AMPDatabaseHelper *_dbHelper;
    long long _sessionId;
}

+ (void)updateLocation;
+ (id)getDeviceId;
+ (void)printEventsCount;
+ (void)useAdvertisingIdForDeviceId;
+ (void)disableLocationListening;
+ (void)enableLocationListening;
+ (void)setUserId:(id)arg1;
+ (void)setUserProperties:(id)arg1;
+ (void)uploadEvents;
+ (void)logRevenue:(id)arg1 quantity:(long long)arg2 price:(id)arg3 receipt:(id)arg4;
+ (void)logRevenue:(id)arg1 quantity:(long long)arg2 price:(id)arg3;
+ (void)logRevenue:(id)arg1;
+ (void)logEvent:(id)arg1 withEventProperties:(id)arg2;
+ (void)logEvent:(id)arg1;
+ (void)initializeApiKey:(id)arg1 userId:(id)arg2;
+ (void)initializeApiKey:(id)arg1;
+ (id)instanceWithName:(id)arg1;
+ (id)instance;
- (void).cxx_destruct;
@property(nonatomic) int backoffUploadBatchSize; // @synthesize backoffUploadBatchSize=_backoffUploadBatchSize;
@property(nonatomic) _Bool backoffUpload; // @synthesize backoffUpload=_backoffUpload;
@property(nonatomic) long long sessionId; // @synthesize sessionId=_sessionId;
@property(nonatomic) _Bool sslPinningEnabled; // @synthesize sslPinningEnabled=_sslPinningEnabled;
@property(nonatomic) _Bool initialized; // @synthesize initialized=_initialized;
@property(retain, nonatomic) AMPDatabaseHelper *dbHelper; // @synthesize dbHelper=_dbHelper;
@property(retain, nonatomic) NSOperationQueue *initializerQueue; // @synthesize initializerQueue=_initializerQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundQueue; // @synthesize backgroundQueue=_backgroundQueue;
@property(nonatomic) _Bool trackingSessionEvents; // @synthesize trackingSessionEvents=_trackingSessionEvents;
@property(nonatomic) long long minTimeBetweenSessionsMillis; // @synthesize minTimeBetweenSessionsMillis=_minTimeBetweenSessionsMillis;
@property(nonatomic) int eventUploadPeriodSeconds; // @synthesize eventUploadPeriodSeconds=_eventUploadPeriodSeconds;
@property(nonatomic) int eventMaxCount; // @synthesize eventMaxCount=_eventMaxCount;
@property(nonatomic) int eventUploadMaxBatchSize; // @synthesize eventUploadMaxBatchSize=_eventUploadMaxBatchSize;
@property(nonatomic) int eventUploadThreshold; // @synthesize eventUploadThreshold=_eventUploadThreshold;
@property(readonly, nonatomic) NSString *propertyListPath; // @synthesize propertyListPath=_propertyListPath;
@property(readonly, nonatomic) NSString *instanceName; // @synthesize instanceName=_instanceName;
@property(readonly, nonatomic) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(readonly, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(readonly, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
- (_Bool)moveFileIfNotExists:(id)arg1 to:(id)arg2;
- (_Bool)archive:(id)arg1 toFile:(id)arg2;
- (id)unarchive:(id)arg1;
- (_Bool)serializePList:(id)arg1 toFile:(id)arg2;
- (id)deserializePList:(id)arg1;
- (_Bool)savePropertyList;
- (_Bool)upgradePrefs;
- (void)printEventsCount;
- (id)currentTime;
- (id)urlEncodeString:(id)arg1;
- (id)md5HexDigest:(id)arg1;
- (_Bool)isArgument:(id)arg1 validType:(Class)arg2 methodName:(id)arg3;
- (id)truncate:(id)arg1;
- (id)replaceWithEmptyJSON:(id)arg1;
- (_Bool)isValidDeviceId:(id)arg1;
- (id)_getDeviceId;
- (id)initializeDeviceId;
- (long long)getSessionId;
- (id)getDeviceId;
- (void)useAdvertisingIdForDeviceId;
- (void)disableLocationListening;
- (void)enableLocationListening;
- (void)updateLocation;
- (void)regenerateDeviceId;
- (void)setDeviceId:(id)arg1;
@property(nonatomic) _Bool optOut;
- (void)setOffline:(_Bool)arg1;
- (void)setUserId:(id)arg1;
- (void)setGroup:(id)arg1 groupName:(id)arg2;
- (void)clearUserProperties;
- (void)setUserProperties:(id)arg1 replace:(_Bool)arg2;
- (void)setUserProperties:(id)arg1;
- (void)identify:(id)arg1 outOfSession:(_Bool)arg2;
- (void)identify:(id)arg1;
- (void)startSession;
- (id)lastEventTime;
- (void)setLastEventTime:(id)arg1;
- (long long)previousSessionId;
- (void)setPreviousSessionId:(long long)arg1;
- (void)refreshSessionTime:(id)arg1;
- (_Bool)isWithinMinTimeBetweenSessions:(id)arg1;
- (_Bool)inSession;
- (void)sendSessionEvent:(id)arg1;
- (void)startNewSession:(id)arg1;
- (_Bool)startOrContinueSession:(id)arg1;
- (void)enterBackground;
- (void)enterForeground;
- (void)makeEventUploadPostRequest:(id)arg1 events:(id)arg2 numEvents:(long long)arg3 maxEventId:(long long)arg4 maxIdentifyId:(long long)arg5;
- (id)mergeEventsAndIdentifys:(id)arg1 identifys:(id)arg2 numEvents:(long long)arg3;
- (long long)getNextSequenceNumber;
- (void)uploadEventsWithLimit:(int)arg1;
- (void)uploadEvents;
- (void)uploadEventsInBackground;
- (void)uploadEventsWithDelay:(int)arg1;
- (void)logRevenueV2:(id)arg1;
- (void)logRevenue:(id)arg1 quantity:(long long)arg2 price:(id)arg3 receipt:(id)arg4;
- (void)logRevenue:(id)arg1 quantity:(long long)arg2 price:(id)arg3;
- (void)logRevenue:(id)arg1;
- (void)annotateEvent:(id)arg1;
- (void)truncateEventQueues;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2 withApiProperties:(id)arg3 withUserProperties:(id)arg4 withGroups:(id)arg5 withTimestamp:(id)arg6 outOfSession:(_Bool)arg7;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2 withGroups:(id)arg3 withTimestamp:(id)arg4 outOfSession:(_Bool)arg5;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2 withGroups:(id)arg3 withLongLongTimestamp:(long long)arg4 outOfSession:(_Bool)arg5;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2 withGroups:(id)arg3 outOfSession:(_Bool)arg4;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2 withGroups:(id)arg3;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2 outOfSession:(_Bool)arg3;
- (void)logEvent:(id)arg1 withEventProperties:(id)arg2;
- (void)logEvent:(id)arg1;
- (_Bool)runOnBackgroundQueue:(CDUnknownBlockType)arg1;
- (void)initializeApiKey:(id)arg1 userId:(id)arg2 startSession:(_Bool)arg3;
- (id)getSharedApplication;
- (void)initializeApiKey:(id)arg1 userId:(id)arg2 setUserId:(_Bool)arg3;
- (void)initializeApiKey:(id)arg1 userId:(id)arg2;
- (void)initializeApiKey:(id)arg1;
- (void)dealloc;
- (void)removeObservers;
- (void)addObservers;
- (_Bool)migrateEventsDataToDB;
- (id)initWithInstanceName:(id)arg1;
- (id)init;

@end

