//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface Challenge : NSObject
{
    double g_avgstrength;
    double g_avgpasswordlength;
    double g_strengthscore;
    double g_totalscore;
    int g_numsites;
    int g_numdictionary;
    int g_numblanksites;
    int g_allnumduppasswords;
    int g_numduppasswords;
    int g_allnumdupsites;
    int g_numdupsites;
    int g_numweak;
    int g_countscore;
    int g_numdictionarypart;
    int g_rootsites;
    NSMutableDictionary *g_aPasswords;
    NSMutableDictionary *g_allPasswords;
    NSMutableDictionary *sfcount;
    NSMutableDictionary *sharedblanksites;
    NSMutableDictionary *sharedavgpasswordlength;
    NSMutableDictionary *sharednumdictionary;
    NSMutableDictionary *sharednumweak;
    NSMutableDictionary *sharedtotalscore;
    NSMutableDictionary *sharedstrengthscore;
    NSMutableDictionary *sharedcountscore;
    NSMutableDictionary *sharedavgstrength;
    double _mpscore;
    NSString *_pwhash;
    NSMutableArray *_g_sites;
}

+ (void)writeCachedScore:(id)arg1 version:(long long)arg2 score:(double)arg3;
+ (double)getCachedScore:(id)arg1 version:(long long)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *g_sites; // @synthesize g_sites=_g_sites;
@property(retain, nonatomic) NSString *pwhash; // @synthesize pwhash=_pwhash;
@property(readonly, nonatomic) double mpscore; // @synthesize mpscore=_mpscore;
@property(readonly, nonatomic) int numdictionarypart; // @synthesize numdictionarypart=g_numdictionarypart;
@property(readonly, nonatomic) int countscore; // @synthesize countscore=g_countscore;
@property(readonly, nonatomic) int numweak; // @synthesize numweak=g_numweak;
@property(readonly, nonatomic) int numdupsites; // @synthesize numdupsites=g_numdupsites;
@property(readonly, nonatomic) int allnumdupsites; // @synthesize allnumdupsites=g_allnumdupsites;
@property(readonly, nonatomic) int numduppasswords; // @synthesize numduppasswords=g_numduppasswords;
@property(readonly, nonatomic) int allnumduppasswords; // @synthesize allnumduppasswords=g_allnumduppasswords;
@property(readonly, nonatomic) int numblanksites; // @synthesize numblanksites=g_numblanksites;
@property(readonly, nonatomic) int numdictionary; // @synthesize numdictionary=g_numdictionary;
@property(readonly, nonatomic) int numsites; // @synthesize numsites=g_rootsites;
@property(readonly, nonatomic) double totalscore; // @synthesize totalscore=g_totalscore;
@property(readonly, nonatomic) double strengthscore; // @synthesize strengthscore=g_strengthscore;
@property(readonly, nonatomic) double avgpasswordlength; // @synthesize avgpasswordlength=g_avgpasswordlength;
@property(readonly, nonatomic) double avgstrength; // @synthesize avgstrength=g_avgstrength;
- (void)runChallengeFullyAsyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)runChallengeAsyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)syncedBuildSites:(id)arg1 SFIDs:(id)arg2;
- (void)buildSites:(id)arg1 SFIDs:(id)arg2;
- (void)challengecomputescore2:(id)arg1 SFIDs:(id)arg2 numsites:(int *)arg3 rootsites:(int *)arg4;
- (void)challengecomputescore:(id)arg1 SFIDs:(id)arg2;
- (void)incrementCount:(id)arg1 key:(id)arg2 amt:(int)arg3;
- (void)incrementCount:(id)arg1 key:(id)arg2;
- (id)createDict:(id)arg1;
- (double)calculateMasterPasswordStrengthWithUsername:(id)arg1 password:(id)arg2;
- (double)calculatePasswordStrengthWithUsername:(id)arg1 password:(id)arg2;
@property(readonly, nonatomic) NSArray *sites; // @dynamic sites;
- (void)dealloc;
- (id)init;

@end

