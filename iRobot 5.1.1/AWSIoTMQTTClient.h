//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <AWSIoT/AWSMQTTSessionDelegate-Protocol.h>
#import <AWSIoT/AWSSRWebSocketDelegate-Protocol.h>
#import <AWSIoT/NSStreamDelegate-Protocol.h>

@class AWSMQTTSession, AWSSRWebSocket, AWSServiceConfiguration, NSArray, NSData, NSInputStream, NSMutableDictionary, NSOutputStream, NSString, NSThread, NSTimer;
@protocol AWSIoTMQTTClientDelegate, OS_dispatch_semaphore;

@interface AWSIoTMQTTClient : NSObject <AWSSRWebSocketDelegate, NSStreamDelegate, AWSMQTTSessionDelegate>
{
    _Bool _autoResubscribe;
    _Bool _isMetricsEnabled;
    _Bool _userDidIssueDisconnect;
    _Bool _userDidIssueConnect;
    _Bool _cleanSession;
    unsigned char _lastWillAndTestamentQoS;
    _Bool _lastWillAndTestamentRetainFlag;
    _Bool _runLoopShouldContinue;
    unsigned short _keepAliveInterval;
    unsigned int _port;
    id <AWSIoTMQTTClientDelegate> _clientDelegate;
    long long _mqttStatus;
    double _baseReconnectTime;
    double _minimumConnectionTime;
    double _maximumReconnectTime;
    unsigned long long _publishRetryThrottle;
    NSString *_userMetaData;
    NSString *_clientId;
    NSObject *_associatedObject;
    AWSMQTTSession *_session;
    NSMutableDictionary *_topicListeners;
    NSString *_host;
    NSString *_presignedURL;
    NSArray *_clientCerts;
    AWSSRWebSocket *_webSocket;
    AWSServiceConfiguration *_configuration;
    NSString *_customAuthorizerName;
    NSString *_tokenKeyName;
    NSString *_tokenValue;
    NSString *_tokenSignature;
    double _currentReconnectTime;
    long long _connectionAgeInSeconds;
    NSTimer *_reconnectTimer;
    NSTimer *_connectionAgeTimer;
    NSMutableDictionary *_ackCallbackDictionary;
    NSString *_lastWillAndTestamentTopic;
    NSData *_lastWillAndTestamentMessage;
    struct __CFWriteStream *_encoderWriteStream;
    struct __CFReadStream *_decoderReadStream;
    struct __CFWriteStream *_decoderWriteStream;
    NSOutputStream *_encoderStream;
    NSInputStream *_decoderStream;
    NSOutputStream *_toDecoderStream;
    CDUnknownBlockType _connectStatusCallback;
    NSThread *_streamsThread;
    NSThread *_reconnectThread;
    NSObject<OS_dispatch_semaphore> *_timerSemaphore;
}

@property(retain) NSObject<OS_dispatch_semaphore> *timerSemaphore; // @synthesize timerSemaphore=_timerSemaphore;
@property _Bool runLoopShouldContinue; // @synthesize runLoopShouldContinue=_runLoopShouldContinue;
@property(retain, nonatomic) NSThread *reconnectThread; // @synthesize reconnectThread=_reconnectThread;
@property(retain, nonatomic) NSThread *streamsThread; // @synthesize streamsThread=_streamsThread;
@property(copy, nonatomic) CDUnknownBlockType connectStatusCallback; // @synthesize connectStatusCallback=_connectStatusCallback;
@property(retain, nonatomic) NSOutputStream *toDecoderStream; // @synthesize toDecoderStream=_toDecoderStream;
@property(retain, nonatomic) NSInputStream *decoderStream; // @synthesize decoderStream=_decoderStream;
@property(retain, nonatomic) NSOutputStream *encoderStream; // @synthesize encoderStream=_encoderStream;
@property(nonatomic) struct __CFWriteStream *decoderWriteStream; // @synthesize decoderWriteStream=_decoderWriteStream;
@property(nonatomic) struct __CFReadStream *decoderReadStream; // @synthesize decoderReadStream=_decoderReadStream;
@property(nonatomic) struct __CFWriteStream *encoderWriteStream; // @synthesize encoderWriteStream=_encoderWriteStream;
@property _Bool lastWillAndTestamentRetainFlag; // @synthesize lastWillAndTestamentRetainFlag=_lastWillAndTestamentRetainFlag;
@property unsigned char lastWillAndTestamentQoS; // @synthesize lastWillAndTestamentQoS=_lastWillAndTestamentQoS;
@property(retain) NSData *lastWillAndTestamentMessage; // @synthesize lastWillAndTestamentMessage=_lastWillAndTestamentMessage;
@property(retain) NSString *lastWillAndTestamentTopic; // @synthesize lastWillAndTestamentTopic=_lastWillAndTestamentTopic;
@property(retain, nonatomic) NSMutableDictionary *ackCallbackDictionary; // @synthesize ackCallbackDictionary=_ackCallbackDictionary;
@property unsigned short keepAliveInterval; // @synthesize keepAliveInterval=_keepAliveInterval;
@property(retain, nonatomic) NSTimer *connectionAgeTimer; // @synthesize connectionAgeTimer=_connectionAgeTimer;
@property(retain, nonatomic) NSTimer *reconnectTimer; // @synthesize reconnectTimer=_reconnectTimer;
@property long long connectionAgeInSeconds; // @synthesize connectionAgeInSeconds=_connectionAgeInSeconds;
@property double currentReconnectTime; // @synthesize currentReconnectTime=_currentReconnectTime;
@property(retain, nonatomic) NSString *tokenSignature; // @synthesize tokenSignature=_tokenSignature;
@property(retain, nonatomic) NSString *tokenValue; // @synthesize tokenValue=_tokenValue;
@property(retain, nonatomic) NSString *tokenKeyName; // @synthesize tokenKeyName=_tokenKeyName;
@property(retain, nonatomic) NSString *customAuthorizerName; // @synthesize customAuthorizerName=_customAuthorizerName;
@property(retain, nonatomic) AWSServiceConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) AWSSRWebSocket *webSocket; // @synthesize webSocket=_webSocket;
@property(retain, nonatomic) NSArray *clientCerts; // @synthesize clientCerts=_clientCerts;
@property(nonatomic) _Bool cleanSession; // @synthesize cleanSession=_cleanSession;
@property(nonatomic) unsigned int port; // @synthesize port=_port;
@property(retain, nonatomic) NSString *presignedURL; // @synthesize presignedURL=_presignedURL;
@property(retain, nonatomic) NSString *host; // @synthesize host=_host;
@property _Bool userDidIssueConnect; // @synthesize userDidIssueConnect=_userDidIssueConnect;
@property _Bool userDidIssueDisconnect; // @synthesize userDidIssueDisconnect=_userDidIssueDisconnect;
@property(retain, nonatomic) NSMutableDictionary *topicListeners; // @synthesize topicListeners=_topicListeners;
@property(retain, nonatomic) AWSMQTTSession *session; // @synthesize session=_session;
@property(nonatomic) __weak NSObject *associatedObject; // @synthesize associatedObject=_associatedObject;
@property(retain, nonatomic) NSString *clientId; // @synthesize clientId=_clientId;
@property(retain) NSString *userMetaData; // @synthesize userMetaData=_userMetaData;
@property unsigned long long publishRetryThrottle; // @synthesize publishRetryThrottle=_publishRetryThrottle;
@property _Bool isMetricsEnabled; // @synthesize isMetricsEnabled=_isMetricsEnabled;
@property double maximumReconnectTime; // @synthesize maximumReconnectTime=_maximumReconnectTime;
@property double minimumConnectionTime; // @synthesize minimumConnectionTime=_minimumConnectionTime;
@property double baseReconnectTime; // @synthesize baseReconnectTime=_baseReconnectTime;
@property long long mqttStatus; // @synthesize mqttStatus=_mqttStatus;
@property(nonatomic) _Bool autoResubscribe; // @synthesize autoResubscribe=_autoResubscribe;
@property(retain, nonatomic) id <AWSIoTMQTTClientDelegate> clientDelegate; // @synthesize clientDelegate=_clientDelegate;
- (void).cxx_destruct;
- (void)webSocket:(id)arg1 didReceivePong:(id)arg2;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocketDidOpen:(id)arg1;
- (void)session:(id)arg1 newAckForMessageId:(unsigned short)arg2;
- (void)session:(id)arg1 newMessage:(id)arg2 onTopic:(id)arg3;
- (void)session:(id)arg1 handleEvent:(int)arg2;
- (void)connectionAgeTimerHandler:(id)arg1;
- (void)unsubscribeTopic:(id)arg1;
- (void)unsubscribeTopic:(id)arg1 ackCallback:(CDUnknownBlockType)arg2;
- (void)subscribeToTopic:(id)arg1 qos:(unsigned char)arg2 extendedCallback:(CDUnknownBlockType)arg3 ackCallback:(CDUnknownBlockType)arg4;
- (void)subscribeToTopic:(id)arg1 qos:(unsigned char)arg2 extendedCallback:(CDUnknownBlockType)arg3;
- (void)subscribeToTopic:(id)arg1 qos:(unsigned char)arg2 messageCallback:(CDUnknownBlockType)arg3 ackCallback:(CDUnknownBlockType)arg4;
- (void)subscribeToTopic:(id)arg1 qos:(unsigned char)arg2 messageCallback:(CDUnknownBlockType)arg3;
- (void)publishData:(id)arg1 qos:(unsigned char)arg2 onTopic:(id)arg3 ackCallback:(CDUnknownBlockType)arg4;
- (void)publishData:(id)arg1 qos:(unsigned char)arg2 onTopic:(id)arg3;
- (void)publishData:(id)arg1 onTopic:(id)arg2;
- (void)publishString:(id)arg1 qos:(unsigned char)arg2 onTopic:(id)arg3;
- (void)publishString:(id)arg1 qos:(unsigned char)arg2 onTopic:(id)arg3 ackCallback:(CDUnknownBlockType)arg4;
- (void)publishString:(id)arg1 onTopic:(id)arg2;
- (void)publishString:(id)arg1 onTopic:(id)arg2 ackCallback:(CDUnknownBlockType)arg3;
- (void)timerHandler:(id)arg1;
- (void)openStreams:(id)arg1;
- (void)initiateReconnectTimer:(id)arg1;
- (void)notifyConnectionStatus;
- (void)reconnectToSession;
- (void)cleanupReconnectTimer;
- (void)disconnect;
- (void)initWebSocketConnectionForURL:(id)arg1;
- (_Bool)webSocketConnectWithClientId;
- (_Bool)connectWithClientId:(id)arg1 cleanSession:(_Bool)arg2 configuration:(id)arg3 customAuthorizerName:(id)arg4 tokenKeyName:(id)arg5 tokenValue:(id)arg6 tokenSignature:(id)arg7 keepAlive:(unsigned short)arg8 willTopic:(id)arg9 willMsg:(id)arg10 willQoS:(unsigned char)arg11 willRetainFlag:(_Bool)arg12 statusCallback:(CDUnknownBlockType)arg13;
- (_Bool)connectWithClientId:(id)arg1 presignedURL:(id)arg2 statusCallback:(CDUnknownBlockType)arg3;
- (_Bool)connectWithClientId:(id)arg1 cleanSession:(_Bool)arg2 configuration:(id)arg3 keepAlive:(unsigned short)arg4 willTopic:(id)arg5 willMsg:(id)arg6 willQoS:(unsigned char)arg7 willRetainFlag:(_Bool)arg8 statusCallback:(CDUnknownBlockType)arg9;
- (_Bool)connectWithCert;
- (_Bool)connectWithClientId:(id)arg1 toHost:(id)arg2 port:(unsigned int)arg3 cleanSession:(_Bool)arg4 certificateId:(id)arg5 keepAlive:(unsigned short)arg6 willTopic:(id)arg7 willMsg:(id)arg8 willQoS:(unsigned char)arg9 willRetainFlag:(_Bool)arg10 statusCallback:(CDUnknownBlockType)arg11;
- (id)prepareWebSocketUrlWithHostName:(id)arg1 regionName:(id)arg2 accessKey:(id)arg3 secretKey:(id)arg4 sessionKey:(id)arg5;
- (id)signWebSocketUrlForMethod:(id)arg1 scheme:(id)arg2 hostName:(id)arg3 path:(id)arg4 queryParams:(id)arg5 accessKey:(id)arg6 secretKey:(id)arg7 regionName:(id)arg8 serviceName:(id)arg9 payload:(id)arg10 today:(id)arg11 now:(id)arg12 sessionKey:(id)arg13;
- (id)getDerivedKeyForSecretKey:(id)arg1 dateStamp:(id)arg2 regionName:(id)arg3 serviceName:(id)arg4;
- (id)initWithDelegate:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

