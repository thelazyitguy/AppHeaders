//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "AssetViewControllerProtocol-Protocol.h"
#import "Roomba900SetupAdvancedWiFiSettingsViewControllerDelegate-Protocol.h"
#import "WrongWifiPasswordDelegate-Protocol.h"

@class CMRApplicationUIService, CMRAssetInfo, CMRAssetNetworkUIService, CMRCommandTierAgent, CMREventBusHandlerImpl, CMRHistoryUIService, CMRLegacyMapsUIService, CMRMaintenanceUIService, CMRMapsUIService, CMRMissionUIService, CMRNotificationCenterUIService, CMRScheduleUIService, CMRSettingsUIService, CMRSmartHomeUIService, CMRTeamingUIService, CMRUpdateUIService, LoadingViewController, NSNumber, NSString, UIActivityIndicatorView, UIAlertController;

@interface UIViewController (LoadingViewControllerUtils) <Roomba900SetupAdvancedWiFiSettingsViewControllerDelegate, WrongWifiPasswordDelegate, AssetViewControllerProtocol>
+ (void)generateHelpContentViewControllerForSku:(id)arg1 otherHelpContentID:(id)arg2 title:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)networkDiagnosticsRoutineChecklistItems;
- (void)hideLoadingViewControllerWithCompletion:(CDUnknownBlockType)arg1;
- (void)hideLoadingViewController;
- (void)showLoadingViewControllerWithCompletion:(CDUnknownBlockType)arg1;
- (void)showLoadingViewController;
- (void)showLoadingViewControllerWithText:(id)arg1;
- (void)setupLoadingViewController;
- (_Bool)isSSIDInfoAvalible;
- (int)locationPermissionsStatus;
- (_Bool)areLocationPermissionsGranted;
- (_Bool)iOS13;
- (void)showRoombaNetworkMessage;
- (void)show5GhzWarningMessageWithConnectBlock:(CDUnknownBlockType)arg1 withContinueBlock:(CDUnknownBlockType)arg2 forSSID:(id)arg3;
- (void)goToAdvancedSettings;
- (void)dismissAdvancedSettings;
- (void)advancedWiFiSettingsViewController:(id)arg1 didFinishWithWiFiInfo:(id)arg2;
- (void)updateWifiSSID:(id)arg1;
- (void)updateWifiPassword:(id)arg1;
- (id)teamCleanHeaderString;
- (void)showTeamingSetupScreenIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)configureAndShowTeamingInProgressAlert:(id)arg1;
- (_Bool)configureAndShowTeamingInProgressDialogIfNeeded:(id)arg1;
- (void)checkAndCacheTeamignInProgress:(id)arg1 teamingInProgressDelegate:(id)arg2;
@property(nonatomic) long long notificationType;
- (void)goToCleanScreen;
- (void)goToDay1Onboarding;
- (id)configureSoftwareUpdatedForConnectivityIssueViewController;
- (void)configureAndShowSoftwareUpdatedForConnectivityIssueViewControllerWithNavigationController:(id)arg1;
- (void)configureAndShowSoftwareUpdatedForConnectivityIssueViewController;
- (long long)analyticsOTAPathFromOTAPathType:(long long)arg1;
- (void)goToDay1OnboardingViewController;
- (void)goToUpdateCompleteViewController;
- (void)goToCheckingForSoftwareViewControllerWithAssetId:(id)arg1;
- (void)goToUpdateInProgressViewControllerWithPathType:(long long)arg1 entryType:(long long)arg2 showBackButton:(_Bool)arg3;
- (void)goToNewBetaSoftwareViewControllerWithPathType:(long long)arg1 assetId:(id)arg2 betaTrack:(id)arg3;
- (void)goToNewSoftwareViewControllerWithPathType:(long long)arg1 assetId:(id)arg2;
- (void)goToSoftwareUpdateErrorViewControllerWithPathType:(long long)arg1;
- (void)goToProvisioningSuccessViewController;
- (void)showHelpContentInSafariForSku:(id)arg1 otherHelpContentID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pushOtherHelpViewControllerForSku:(id)arg1 otherHelpContentID:(id)arg2 title:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) NSNumber *boxedProvisioningStep; // @dynamic boxedProvisioningStep;
- (void)cancelSetup;
- (void)confirmCancel;
- (void)addCancelSetupButtonNextToInfoButtonWithCurrentStep:(long long)arg1;
- (void)addCancelSetupButtonWithCurrentStep:(long long)arg1;
- (void)confirmCurrentSSID:(id)arg1 withCancel:(_Bool)arg2 with:(CDUnknownBlockType)arg3;
- (_Bool)removeFromStackOnDisappear;
- (void)setRemoveFromStackOnDisappear:(_Bool)arg1;
- (_Bool)isTridentRobot;
- (void)setIsTridentRobot:(_Bool)arg1;
- (_Bool)inLocalOTAFlow;
- (void)setInLocalOTAFlow:(_Bool)arg1;
- (void)setAssetIdToMatchWhenChangingWifiProvisioning:(id)arg1;
- (id)assetIdToMatchWhenChangingWifiProvisioning;
- (void)setWaitForRobotRetryCount:(long long)arg1;
- (long long)waitForRobotRetryCount;
- (void)setRobotPing:(id)arg1;
- (id)robotPing;
- (void)setSkuType:(long long)arg1;
- (long long)skuType;
- (void)setLogTag:(id)arg1;
- (id)logTag;
- (void)robotPingCertificateError:(id)arg1;
- (void)robotPingTimedOut:(id)arg1;
- (void)robotPing:(id)arg1 didReceiveResponse:(id)arg2;
- (void)waitForDiscoveredAsset:(id)arg1;
- (void)completeSetupPairingFlow:(id)arg1;
- (void)showMACAddressForFilterMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)onPasswordUpdateCancelled;
- (void)onPasswordUpdated;
- (void)showPasswordError;
- (void)proceedToWifiProvisioning;
- (void)displayRobotCommsError;
- (void)proceedWithProvisioningForDiscoveredAsset:(id)arg1;
- (void)connectedAssetDiscovered:(id)arg1;
- (void)assetDiscovered:(id)arg1;
- (void)assetDiscoveryFinished;
- (void)stopConnectedAssetDiscovery;
- (void)startConnectedAssetDiscovery;
- (void)showNotConnectToRoombaNetworkErrorViewController;
- (void)addLockImageToView:(id)arg1 size:(double)arg2;
- (void)showAssetIsAlreadyRegisterdWithAnotherAccount:(id)arg1;
- (id)createDiscoveredAssetCell:(id)arg1 assetInfo:(id)arg2 isOwned:(_Bool)arg3;
- (void)dismissRemoteConnectionErrorViewController;
- (void)showRemoteConnectionErrorWithDiagnosticRoutine:(long long)arg1 dismissalSelector:(SEL)arg2 assetSku:(id)arg3;
- (void)injectServiceDiscoveryUrlForMqttPortCheck:(id)arg1 networkDiagnostics:(id)arg2;
- (void)runNetworkDiagnosticsMethodFromRoutine:(long long)arg1 networkDiagnostics:(id)arg2;
- (long long)resolveNetworkDiagnosticStateFromChecklistRoutineItems:(id)arg1 networkDiagnosticEvent:(id)arg2 networkDiagnostics:(id)arg3;
- (id)configureAndShowRemoteConnectionViewControllerWithAssetId:(id)arg1;
- (id)currentNetworkConnectInfo;
@property(retain, nonatomic) UIAlertController *restartRobotAlertController; // @dynamic restartRobotAlertController;
- (id)assetSkuForAssetId:(id)arg1;
- (id)assetNameForAssetId:(id)arg1;
- (id)IPMIAssetInfoForAssetId:(id)arg1;
- (void)setAssetInfoToViewController:(id)arg1;
- (void)showErrorForAssetValidationResult:(long long)arg1;
- (void)performSharedPreparationForSegue:(id)arg1;
@property(retain, nonatomic) NSString *logScope;
@property(retain, nonatomic) NSString *assetIdAsString;
- (_Bool)isExistingAsset;
@property(retain, nonatomic) CMRAssetInfo *assetInfo; // @dynamic assetInfo;
@property(readonly, nonatomic) CMRNotificationCenterUIService *notificationCenterUIService;
@property(readonly, nonatomic) CMRTeamingUIService *teamingUIService;
@property(readonly, nonatomic) CMRUpdateUIService *updateUIService;
@property(readonly, nonatomic) CMRScheduleUIService *scheduleUIService;
@property(readonly, nonatomic) CMRAssetNetworkUIService *assetNetworkUIService;
@property(readonly, nonatomic) CMRSettingsUIService *settingsUIService;
@property(readonly, nonatomic) CMRMapsUIService *mapsUIService;
@property(readonly, nonatomic) CMRLegacyMapsUIService *legacyMapsUIService;
@property(readonly, nonatomic) CMRMissionUIService *missionUIService;
@property(readonly, nonatomic) CMRMaintenanceUIService *maintenanceUIService;
@property(readonly, nonatomic) CMRHistoryUIService *historyUIService;
@property(readonly, nonatomic) CMRSmartHomeUIService *smartHomeUIService;
@property(readonly, nonatomic) CMRApplicationUIService *applicationUIService;
@property(readonly, nonatomic) CMREventBusHandlerImpl *domainEventBus;
@property(readonly, nonatomic) CMRCommandTierAgent *assetCommandTierAgent;
- (void)robotSofwareVersionEventReceived:(id)arg1;
- (void)presentRestartRobotAlert;
- (void)robotErrorEventReceived:(id)arg1;
- (void)removeEventSubscribers;
- (void)addEventSubscribers;
- (void)navigateToRobotModelTableViewController:(id)arg1 siteCoreHelpLink:(id)arg2;
- (void)navigateToBraavaSelectRobotModel;
- (void)navigateToRoombaSelectRobotModel;
- (void)navigateToMainRobotSetup:(long long)arg1;
- (void)navigateToAltadenaSetup;
- (void)navigateToRobotSetup:(long long)arg1;
- (void)navigateToBarcodeInfoViewController;
- (void)sendMissionId:(int)arg1 toViewController:(id)arg2;
- (void)displayDeveloperConsole;
- (void)showErrorForInternetUnavailableOkHandler:(CDUnknownBlockType)arg1;
- (_Bool)shouldShowInternetUnavailableError;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)hideActivityIndicator:(_Bool)arg1;
- (void)hideActivityIndicator;
- (void)showActivityIndicator:(_Bool)arg1;
- (void)showActivityIndicator;
- (void)setupActivityIndicator;
- (id)createActivityIndicator;
@property(retain, nonatomic) UIActivityIndicatorView *as_activityIndicator;
- (id)createUserInfoWithPresented:(id)arg1 attempted:(id)arg2;
- (void)performPresentationSafetyChecks:(id)arg1;
@property(readonly, nonatomic) _Bool isVisible;
- (void)goToWiFiSettings:(long long)arg1;
- (void)goToWiFiSettings;
- (void)presentWifiAlertWithTitle:(id)arg1 message:(id)arg2 buttonActionHandler:(CDUnknownBlockType)arg3;
- (id)presentationWindowForLinkingManager:(id)arg1;
- (void)outgoingAccountLinkingManagerDidBeginProcessingRequestAsynchronously:(id)arg1;
- (void)outgoingAccountLinkingManagerDidFinishWithSuccess:(id)arg1 client:(long long)arg2;
- (void)pushOutgoingErrorViewController:(long long)arg1;
- (void)outgoingAccountLinkingManager:(id)arg1 didFinishWithError:(unsigned long long)arg2 client:(long long)arg3;
- (void)pushAmazonLinkViewController;
- (void)accountLinkingUseDifferentAccount;
- (id)acceptIncomingRequestMediaSectionView;
- (id)presentViewToAcceptIncomingAccountLinkingRequest:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (id)slidingViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) LoadingViewController *loadingViewController; // @dynamic loadingViewController;
@property(readonly) Class superclass;
@end

