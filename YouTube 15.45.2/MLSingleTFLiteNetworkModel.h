//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HAMNetworkStats, HAMSlidingPercentile, NSData, NSDictionary, YTITFLiteBandwidthModelConfig;

@interface MLSingleTFLiteNetworkModel : NSObject
{
    YTITFLiteBandwidthModelConfig *_config;
    NSDictionary *_userInfo;
    CircularBuffer_d3b2600c _bytes;
    CircularBuffer_d3b2600c _seconds;
    CircularBuffer_d3b2600c _headSeconds;
    CircularBuffer_d3b2600c _onesieSeconds;
    long long _samplesSinceLastOnesieSample;
    float *_bytesTensorData;
    float *_secondsTensorData;
    float *_headSecondsTensorData;
    float *_onesieSecondsTensorData;
    long long *_samplesSinceLastOnesieSampleTensorData;
    long long *_connectionTypeTensorData;
    NSData *_modelData;
    struct unique_ptr<tflite::FlatBufferModel, std::__1::default_delete<tflite::FlatBufferModel>> _model;
    struct unique_ptr<tflite::Interpreter, std::__1::default_delete<tflite::Interpreter>> _interpreter;
    HAMNetworkStats *_lastPrediction;
    HAMSlidingPercentile *_latencySlidingPercentile;
    _Bool _persistedSamplesNeedUpdate;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (const CircularBuffer_d3b2600c *)onesieSeconds;
- (const CircularBuffer_d3b2600c *)headSeconds;
- (const CircularBuffer_d3b2600c *)seconds;
- (const CircularBuffer_d3b2600c *)bytes;
- (void)setConnectionType:(int)arg1;
-     // Error parsing type: {optional<youtube::media::PersistedBandwidthSamples>=B(?={PersistedBandwidthSamples=^^?{InternalMetadata=^v}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}i{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}}{dummy_type=[128{empty_struct=}]})}16@0:8, name: bandwidthSamplesForPersistence
-     // Error parsing type: v24@0:8r^{PersistedBandwidthSamples=^^?{InternalMetadata=^v}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}i{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}}16, name: setPersistedSamples:
- (void)onLatencySample:(float)arg1;
- (void)onOnesieBandwidthSampleWithBytes:(float)arg1 time:(float)arg2;
- (void)onBandwidthSampleWithBytes:(float)arg1 time:(float)arg2;
- (id)getNetworkStatsAndReturnError:(id *)arg1;
- (_Bool)prepareAndReturnError:(id *)arg1;
- (id)initWithData:(id)arg1 config:(id)arg2;

@end

