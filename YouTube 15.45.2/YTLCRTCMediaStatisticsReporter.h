//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GOOGRTCAudioTrack, GOOGRTCPeerConnection, GOOGRTCVideoTrack, NSString, YTLCRTCMediaStatistic, YTTimedAction;
@protocol YTLCRTCMediaStatisticsReporterDelegate;

@interface YTLCRTCMediaStatisticsReporter : NSObject
{
    _Bool _resolutionCPULimited;
    _Bool _resolutionBandwidthLimited;
    id <YTLCRTCMediaStatisticsReporterDelegate> _delegate;
    long long _videoEncodeMs;
    long long _videoInputFps;
    long long _videoInputHeight;
    long long _videoInputWidth;
    long long _videoEncoderUsagePercentage;
    long long _videoBytesSent;
    long long _videoSendBitsPerSecond;
    long long _videoSendFrameRate;
    long long _videoSendHeight;
    long long _videoSendWidth;
    NSString *_videoSendCodec;
    long long _audioBytesSent;
    long long _audioSendBitsPerSecond;
    long long _audioSendFrameRate;
    NSString *_audioSendCodec;
    long long _audioInputLevel;
    double _totalAudioEnergy;
    long long _echoReturnLoss;
    long long _echoReturnLossEnhancement;
    long long _availableSendBandwidth;
    long long _targetEncodingBitrate;
    long long _actualEncodingBitrate;
    YTTimedAction *_updateTimer;
    YTLCRTCMediaStatistic *_videoSendBitrateStatistic;
    YTLCRTCMediaStatistic *_audioSendBitrateStatistic;
    YTLCRTCMediaStatistic *_audioSendFrameRateStatistic;
    GOOGRTCPeerConnection *_peerConnection;
    GOOGRTCAudioTrack *_audioSendTrack;
    GOOGRTCVideoTrack *_videoSendTrack;
}

- (void).cxx_destruct;
@property(retain, nonatomic) GOOGRTCVideoTrack *videoSendTrack; // @synthesize videoSendTrack=_videoSendTrack;
@property(retain, nonatomic) GOOGRTCAudioTrack *audioSendTrack; // @synthesize audioSendTrack=_audioSendTrack;
@property(retain, nonatomic) GOOGRTCPeerConnection *peerConnection; // @synthesize peerConnection=_peerConnection;
@property(retain, nonatomic) YTLCRTCMediaStatistic *audioSendFrameRateStatistic; // @synthesize audioSendFrameRateStatistic=_audioSendFrameRateStatistic;
@property(retain, nonatomic) YTLCRTCMediaStatistic *audioSendBitrateStatistic; // @synthesize audioSendBitrateStatistic=_audioSendBitrateStatistic;
@property(retain, nonatomic) YTLCRTCMediaStatistic *videoSendBitrateStatistic; // @synthesize videoSendBitrateStatistic=_videoSendBitrateStatistic;
@property(retain, nonatomic) YTTimedAction *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(readonly, nonatomic) long long actualEncodingBitrate; // @synthesize actualEncodingBitrate=_actualEncodingBitrate;
@property(readonly, nonatomic) long long targetEncodingBitrate; // @synthesize targetEncodingBitrate=_targetEncodingBitrate;
@property(readonly, nonatomic) long long availableSendBandwidth; // @synthesize availableSendBandwidth=_availableSendBandwidth;
@property(readonly, nonatomic) long long echoReturnLossEnhancement; // @synthesize echoReturnLossEnhancement=_echoReturnLossEnhancement;
@property(readonly, nonatomic) long long echoReturnLoss; // @synthesize echoReturnLoss=_echoReturnLoss;
@property(readonly, nonatomic) double totalAudioEnergy; // @synthesize totalAudioEnergy=_totalAudioEnergy;
@property(readonly, nonatomic) long long audioInputLevel; // @synthesize audioInputLevel=_audioInputLevel;
@property(readonly, nonatomic) NSString *audioSendCodec; // @synthesize audioSendCodec=_audioSendCodec;
@property(readonly, nonatomic) long long audioSendFrameRate; // @synthesize audioSendFrameRate=_audioSendFrameRate;
@property(readonly, nonatomic) long long audioSendBitsPerSecond; // @synthesize audioSendBitsPerSecond=_audioSendBitsPerSecond;
@property(readonly, nonatomic) long long audioBytesSent; // @synthesize audioBytesSent=_audioBytesSent;
@property(readonly, nonatomic) NSString *videoSendCodec; // @synthesize videoSendCodec=_videoSendCodec;
@property(readonly, nonatomic, getter=isResolutionBandwidthLimited) _Bool resolutionBandwidthLimited; // @synthesize resolutionBandwidthLimited=_resolutionBandwidthLimited;
@property(readonly, nonatomic, getter=isResolutionCPULimited) _Bool resolutionCPULimited; // @synthesize resolutionCPULimited=_resolutionCPULimited;
@property(readonly, nonatomic) long long videoSendWidth; // @synthesize videoSendWidth=_videoSendWidth;
@property(readonly, nonatomic) long long videoSendHeight; // @synthesize videoSendHeight=_videoSendHeight;
@property(readonly, nonatomic) long long videoSendFrameRate; // @synthesize videoSendFrameRate=_videoSendFrameRate;
@property(readonly, nonatomic) long long videoSendBitsPerSecond; // @synthesize videoSendBitsPerSecond=_videoSendBitsPerSecond;
@property(readonly, nonatomic) long long videoBytesSent; // @synthesize videoBytesSent=_videoBytesSent;
@property(readonly, nonatomic) long long videoEncoderUsagePercentage; // @synthesize videoEncoderUsagePercentage=_videoEncoderUsagePercentage;
@property(readonly, nonatomic) long long videoInputWidth; // @synthesize videoInputWidth=_videoInputWidth;
@property(readonly, nonatomic) long long videoInputHeight; // @synthesize videoInputHeight=_videoInputHeight;
@property(readonly, nonatomic) long long videoInputFps; // @synthesize videoInputFps=_videoInputFps;
@property(readonly, nonatomic) long long videoEncodeMs; // @synthesize videoEncodeMs=_videoEncodeMs;
@property(nonatomic) __weak id <YTLCRTCMediaStatisticsReporterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)updateBandwidthEstimationStatsReport:(id)arg1;
- (void)updateVideoSendStatsReport:(id)arg1;
- (void)updateAudioSendStatsReport:(id)arg1;
- (void)updateStatistics;
- (id)bandwidthEstimationDescription;
- (id)videoSendDescription;
- (id)audioSendDescription;
- (id)description;
- (void)reset;
- (void)stop;
- (void)start;
- (id)initWithPeerConnection:(id)arg1 audioSendTrack:(id)arg2 videoSendTrack:(id)arg3;

@end

