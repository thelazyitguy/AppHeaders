//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/HAMBaseTrackRenderer.h>

#import <Module_Framework/HAMAudioSessionEventObserver-Protocol.h>
#import <Module_Framework/HAMAudioTrackRenderer-Protocol.h>
#import <Module_Framework/HAMRenderSynchronizerProvider-Protocol.h>
#import <Module_Framework/HAMSampleBufferSourceDelegate-Protocol.h>
#import <Module_Framework/HAMSystemNotificationsObserver-Protocol.h>

@class AVSampleBufferAudioRenderer, AVSampleBufferRenderSynchronizer, NSHashTable, NSString;
@protocol HAMAudioSessionDelegate, HAMClock, HAMFormat, HAMRenderSynchronizerProvider, HAMRootMediaSource, HAMSampleBufferSource, HAMTrackRendererDelegate;

@interface HAMSBARAudioTrackRenderer : HAMBaseTrackRenderer <HAMAudioSessionEventObserver, HAMRenderSynchronizerProvider, HAMSampleBufferSourceDelegate, HAMSystemNotificationsObserver, HAMAudioTrackRenderer>
{
    id <HAMClock> _clock;
    id <HAMSampleBufferSource> _source;
    id <HAMAudioSessionDelegate> _audioSessionDelegate;
    struct HAMSBARAudioTrackRendererConfiguration _config;
    float _volume;
    NSHashTable *_renderSynchronizerChangedObservers;
    AVSampleBufferAudioRenderer *_renderer;
    _Bool _sourceAtEOF;
    CDStruct_1b6d18a9 _lastEnqueuedSampleTime;
    id <HAMFormat> _lastScheduledFormat;
    _Bool _isInBackground;
    struct TimeMapper _timeConverter;
    int _rendererFailures;
    AVSampleBufferRenderSynchronizer *_synchronizer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) AVSampleBufferRenderSynchronizer *renderSynchronizer; // @synthesize renderSynchronizer=_synchronizer;
- (id)underlyingRenderer;
- (void)resetRenderSynchronizer;
- (void)destroyRendererAndResetSynchronizer;
- (_Bool)createRendererAndReturnError:(id *)arg1;
- (void)enqueueSampleBuffer:(id)arg1;
- (void)readSampleBuffers;
- (void)flush;
- (void)pause;
- (void)statusDidChange:(long long)arg1 renderer:(id)arg2;
- (void)rendererWasFlushedAutomatically:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)sampleBufferSourceFormatDescriptionWillChange:(id)arg1;
- (void)addRenderSynchronizerChangedObserver:(id)arg1;
- (void)mediaSource:(id)arg1 didFailWithError:(id)arg2;
- (void)mediaSource:(id)arg1 setCurrentTime:(CDStruct_1b6d18a9)arg2;
- (_Bool)internalDoWorkAtTime:(CDStruct_576a8307)arg1 error:(id *)arg2;
- (void)internalSeekToTime:(CDStruct_1b6d18a9)arg1;
- (void)internalSetRate:(float)arg1;
- (void)internalTerminate;
- (_Bool)internalDisableAndReturnError:(id *)arg1;
- (_Bool)internalStopAndReturnError:(id *)arg1;
- (_Bool)internalStartAndReturnError:(id *)arg1;
- (_Bool)internalPrimeAndReturnError:(id *)arg1;
- (_Bool)internalEnableAndReturnError:(id *)arg1;
- (_Bool)internalPrepareAndReturnError:(id *)arg1;
@property(readonly, nonatomic) int mediaContentType;
@property(readonly, nonatomic) CDStruct_576a8307 currentTime;
- (void)onAudioSessionRouteChange:(id)arg1;
- (void)onAudioSessionMediaServicesReset:(id)arg1;
- (void)onAudioSessionInterruption:(id)arg1;
@property(readonly, nonatomic) id <HAMRenderSynchronizerProvider> renderSynchronizerProvider;
@property(nonatomic) float volume;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithContext:(id)arg1 rootMediaSource:(id)arg2 configuration:(struct HAMSBARAudioTrackRendererConfiguration)arg3 sampleBufferSource:(id)arg4 audioSessionDelegate:(id)arg5;

// Remaining properties
@property(readonly, nonatomic) _Bool allowsBackgroundPlayback;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <HAMTrackRendererDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) float rate;
@property(readonly, nonatomic) id <HAMRootMediaSource> rootMediaSource;
@property(readonly, nonatomic) CDStruct_e83c9415 seekableTimeRange;
@property(readonly, nonatomic) long long status;
@property(readonly) Class superclass;

@end

