//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/GOOGRTCVideoEncoder-Protocol.h>
#import <Module_Framework/RCCVideoToolboxEncoderDelegate-Protocol.h>

@class GOOGRTCCodecSpecificInfoH264, GOOGRTCVideoCodecInfo, NSString;

@interface RCCVideoEncoderH264 : NSObject <GOOGRTCVideoEncoder, RCCVideoToolboxEncoderDelegate>
{
    GOOGRTCVideoCodecInfo *_codecInfo;
    // Error parsing type: ^{BitrateAdjuster=^^?{Mutex={MutexImpl={Mutex={atomic<long>={__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >=Aq}}}}}ffIII{RateStatistics={deque<webrtc::RateStatistics::Bucket, std::__1::allocator<webrtc::RateStatistics::Bucket> >={__split_buffer<webrtc::RateStatistics::Bucket *, std::__1::allocator<webrtc::RateStatistics::Bucket *> >=^^{Bucket}^^{Bucket}^^{Bucket}{__compressed_pair<webrtc::RateStatistics::Bucket **, std::__1::allocator<webrtc::RateStatistics::Bucket *> >=^^{Bucket}}}Q{__compressed_pair<unsigned long, std::__1::allocator<webrtc::RateStatistics::Bucket> >=Q}}qqBifqq}II}, name: _bitrateAdjuster
    unsigned int _targetBitrateBps;
    unsigned int _encoderBitrateBps;
    unsigned int _encoderFrameRate;
    unsigned int _maxAllowedFrameRate;
    optional_9f2cf8d4 _profile_level_id;
    CDUnknownBlockType _callback;
    int _width;
    int _height;
    struct OpaqueVTCompressionSession *_compressionSession;
    unsigned long long _mode;
    struct H264BitstreamParser _h264BitstreamParser;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _frameScaleBuffer;
    GOOGRTCCodecSpecificInfoH264 *_codecSpecificInfo;
    unsigned int _pixelFormat;
    _Bool _useBitrateAdjuster;
    float _dataRateLimit;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) float dataRateLimit; // @synthesize dataRateLimit=_dataRateLimit;
@property(nonatomic) _Bool useBitrateAdjuster; // @synthesize useBitrateAdjuster=_useBitrateAdjuster;
- (void)frameEncodedWithStatus:(int)arg1 flags:(unsigned int)arg2 sampleBuffer:(struct opaqueCMSampleBuffer *)arg3 codecSpecificInfo:(id)arg4 width:(int)arg5 height:(int)arg6 renderTimeMs:(long long)arg7 timestamp:(unsigned int)arg8 rotation:(long long)arg9;
- (void)setEncoderBitrateBps:(unsigned int)arg1 frameRate:(unsigned int)arg2;
- (void)setBitrateBps:(unsigned int)arg1 frameRate:(unsigned int)arg2;
- (void)destroyCompressionSession;
- (void)configureCompressionSession;
- (int)resetCompressionSessionWithPixelFormat:(unsigned int)arg1;
- (id)scalingSettings;
- (id)implementationName;
- (int)setBitrate:(unsigned int)arg1 framerate:(unsigned int)arg2;
- (long long)encode:(id)arg1 codecSpecificInfo:(id)arg2 frameTypes:(id)arg3;
- (long long)releaseEncoder;
- (long long)startEncodeWithSettings:(id)arg1 numberOfCores:(int)arg2;
- (void)setCallback:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithCodecInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

