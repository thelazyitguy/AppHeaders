//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <Module_Framework/YTCorePlaybackControllerDelegate-Protocol.h>
#import <Module_Framework/YTLightweightPlaybackController-Protocol.h>
#import <Module_Framework/YTPlayerViewDelegate-Protocol.h>
#import <Module_Framework/YTSingleVideoAspectRatioObserver-Protocol.h>

@class GIMMe, MLDefaultViewportSizeProvider, NSError, NSString, YTLocalPlaybackController, YTPlaybackData, YTPlayerView;
@protocol YTLightweightPlaybackControllerDelegate, YTResponder, YTSingleVideoObservable;

@interface YTLightweightPlayerViewController : UIViewController <YTCorePlaybackControllerDelegate, YTPlayerViewDelegate, YTSingleVideoAspectRatioObserver, YTLightweightPlaybackController>
{
    YTPlayerView *_playerView;
    YTLocalPlaybackController *_playbackController;
    MLDefaultViewportSizeProvider *_viewportSizeProvider;
    GIMMe *_gimme;
    id <YTLightweightPlaybackControllerDelegate> _delegate;
    id <YTResponder> _parentResponder;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <YTResponder> parentResponder; // @synthesize parentResponder=_parentResponder;
@property(nonatomic) __weak id <YTLightweightPlaybackControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (void)singleVideo:(id)arg1 aspectRatioDidChange:(double)arg2;
- (void)playbackController:(id)arg1 externalPlaybackActiveStateDidChange:(_Bool)arg2;
- (void)playbackController:(id)arg1 VRStateDidChange:(_Bool)arg2;
- (void)playbackControllerDidLoadPrerollAd:(id)arg1;
- (void)playbackControllerDidFinishPlayingAd:(id)arg1;
- (id)activeVideoPlayerOverlayForPlaybackController:(id)arg1;
- (void)playbackController:(id)arg1 didReceiveAdMarkers:(id)arg2;
- (void)playbackController:(id)arg1 willStartAdSurveyWithAdInterrupt:(id)arg2;
@property(readonly, nonatomic) _Bool userScrubbing;
- (void)playbackController:(id)arg1 requiresUserActionForPlayabilityResolutionWithUserActionRequest:(id)arg2;
- (void)playbackController:(id)arg1 didLoadContentPlaybackData:(id)arg2;
- (void)playbackControllerStateDidChange:(id)arg1;
- (void)playbackController:(id)arg1 didFailWithError:(id)arg2;
- (void)playbackController:(id)arg1 willFailWithError:(id)arg2;
- (void)playbackController:(id)arg1 didFinishPlaybackAndWillInternallyTransitionToNextPlayback:(_Bool)arg2;
- (void)playbackControllerDidFinishPlayback:(id)arg1;
- (void)playbackControllerDidLoadOfflineLiveStream:(id)arg1;
- (void)playbackController:(id)arg1 willResetToState:(int)arg2;
- (void)playbackController:(id)arg1 didActivateVideo:(id)arg2 withPlaybackData:(id)arg3;
- (void)playbackController:(id)arg1 willActivateVideo:(id)arg2;
- (int)playerViewLayout;
- (void)setPlayerViewLayout:(int)arg1;
- (id)currentAd;
- (id)contentPlayerMacroState;
- (id)lastKnownAdPlayerMacroState;
- (_Bool)isMDXActive;
- (id)remoteScreenName;
@property(readonly, nonatomic) _Bool handlesAutoplayingInternally;
@property(readonly, nonatomic) YTPlaybackData *contentPlaybackData;
- (void)setVideoFormatConstraint:(id)arg1;
@property(readonly, nonatomic) id <YTSingleVideoObservable> contentVideo;
@property(readonly, nonatomic) id <YTSingleVideoObservable> activeVideo;
@property(nonatomic, getter=isActivePlayback) _Bool activePlayback;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) _Bool isPlaybackFinished;
@property(readonly, nonatomic) int state;
- (id)playbackDebugData;
- (void)setAccountLinkState:(id)arg1;
- (void)setClipID:(id)arg1;
- (void)setBlackoutActive:(_Bool)arg1;
- (void)setUserAudioOnlyModeActive:(_Bool)arg1;
- (void)setLiveCaptionsVerticalRatio:(double)arg1;
- (void)enableCaptionsIfAvailableWithUserAction:(_Bool)arg1;
- (void)setActiveCaptionTrack:(id)arg1;
- (void)setAudioFormatConstraint:(id)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setVolume:(float)arg1;
- (void)resumePlayback;
- (void)suspendPlayback;
- (void)seekToEnd;
- (void)seekToProductionTime:(double)arg1;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)replay;
- (void)pause;
- (void)play;
- (void)reset;
- (void)setUpcomingPlayerTransition:(id)arg1 playbackConfig:(id)arg2;
- (void)prepareToLoadWithPlayerTransition:(id)arg1 expectedLayout:(id)arg2;
- (void)loadWithPlayerTransition:(id)arg1 playbackConfig:(id)arg2;
- (_Bool)isContentPanAllowedForPlayerView:(id)arg1;
- (void)playerViewViewportSizeDidChange:(id)arg1;
- (void)playerViewDidPinchToSmallscreen:(id)arg1;
- (void)playerViewDidPinchToFullscreen:(id)arg1;
- (_Bool)playerViewShouldStartDragDrop:(id)arg1;
- (void)playerViewDidDragDrop:(id)arg1;
- (id)dragDropShareURLForPlayerView:(id)arg1;
@property(nonatomic) _Bool zoomToFill;
@property(readonly, nonatomic) YTPlayerView *playerView;
- (void)loadView;
- (id)initWithParentResponder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

