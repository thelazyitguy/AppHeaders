//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/MDCTextInputControllerFloatingPlaceholder-Protocol.h>

@class MDCTextInputAllCharactersCounter, NSArray, NSLayoutConstraint, NSNumber, NSString, UIColor, UIFont, UIView;
@protocol MDCTextInput, MDCTextInputCharacterCounter;

@interface MDCTextInputControllerBase : NSObject <MDCTextInputControllerFloatingPlaceholder>
{
    _Bool _mdc_adjustsFontForContentSizeCategory;
    MDCTextInputAllCharactersCounter *_characterCounter;
    NSNumber *_floatingPlaceholderScale;
    UIColor *_activeColor;
    UIColor *_borderFillColor;
    UIColor *_borderStrokeColor;
    UIColor *_disabledColor;
    UIColor *_errorColor;
    UIColor *_floatingPlaceholderActiveColor;
    UIColor *_floatingPlaceholderNormalColor;
    UIColor *_floatingPlaceholderErrorActiveColor;
    UIColor *_inlinePlaceholderColor;
    UIColor *_leadingUnderlineLabelTextColor;
    UIColor *_normalColor;
    UIColor *_trailingUnderlineLabelTextColor;
    UIFont *_inlinePlaceholderFont;
    UIFont *_leadingUnderlineLabelFont;
    UIFont *_textInputFont;
    UIColor *_textInputClearButtonTintColor;
    UIFont *_trailingUnderlineLabelFont;
    unsigned long long _roundedCorners;
    _Bool _floatingEnabled;
    _Bool _expandsOnOverflow;
    unsigned long long _characterCountMax;
    long long _characterCountViewMode;
    UIView<MDCTextInput> *_textInput;
    double _underlineHeightActive;
    double _underlineHeightNormal;
    long long _underlineViewMode;
    double _borderRadius;
    unsigned long long _minimumLines;
    MDCTextInputAllCharactersCounter *_internalCharacterCounter;
    NSArray *_placeholderAnimationConstraints;
    NSLayoutConstraint *_placeholderAnimationConstraintLeading;
    NSLayoutConstraint *_placeholderAnimationConstraintTop;
    NSLayoutConstraint *_placeholderAnimationConstraintTrailing;
    NSString *_errorAccessibilityValue;
    NSString *_errorText;
    NSString *_helperAccessibilityLabel;
    NSString *_previousLeadingText;
}

+ (void)setMdc_adjustsFontForContentSizeCategoryDefault:(_Bool)arg1;
+ (_Bool)mdc_adjustsFontForContentSizeCategoryDefault;
+ (unsigned long long)calculatedNumberOfLinesForLeadingLabel:(id)arg1 givenTrailingLabel:(id)arg2 insets:(struct UIEdgeInsets)arg3 widthHint:(double)arg4;
+ (void)setUnderlineViewModeDefault:(long long)arg1;
+ (long long)underlineViewModeDefault;
+ (void)setUnderlineHeightNormalDefault:(double)arg1;
+ (double)underlineHeightNormalDefault;
+ (void)setUnderlineHeightActiveDefault:(double)arg1;
+ (double)underlineHeightActiveDefault;
+ (void)setTrailingUnderlineLabelTextColorDefault:(id)arg1;
+ (id)trailingUnderlineLabelTextColorDefault;
+ (void)setTrailingUnderlineLabelFontDefault:(id)arg1;
+ (id)trailingUnderlineLabelFontDefault;
+ (void)setTextInputClearButtonTintColorDefault:(id)arg1;
+ (id)textInputClearButtonTintColorDefault;
+ (void)setTextInputFontDefault:(id)arg1;
+ (id)textInputFontDefault;
+ (void)setRoundedCornersDefault:(unsigned long long)arg1;
+ (unsigned long long)roundedCornersDefault;
+ (void)setNormalColorDefault:(id)arg1;
+ (id)normalColorDefault;
+ (void)setLeadingUnderlineLabelTextColorDefault:(id)arg1;
+ (id)leadingUnderlineLabelTextColorDefault;
+ (void)setLeadingUnderlineLabelFontDefault:(id)arg1;
+ (id)leadingUnderlineLabelFontDefault;
+ (void)setInlinePlaceholderFontDefault:(id)arg1;
+ (id)inlinePlaceholderFontDefault;
+ (void)setInlinePlaceholderColorDefault:(id)arg1;
+ (id)inlinePlaceholderColorDefault;
+ (void)setFloatingPlaceholderScaleDefault:(double)arg1;
+ (double)floatingPlaceholderScaleDefault;
+ (void)setFloatingEnabledDefault:(_Bool)arg1;
+ (_Bool)isFloatingEnabledDefault;
+ (void)setFloatingPlaceholderNormalColorDefault:(id)arg1;
+ (id)floatingPlaceholderNormalColorDefault;
+ (void)setFloatingPlaceholderActiveColorDefault:(id)arg1;
+ (id)floatingPlaceholderActiveColorDefault;
+ (void)setErrorColorDefault:(id)arg1;
+ (id)errorColorDefault;
+ (void)setDisabledColorDefault:(id)arg1;
+ (id)disabledColorDefault;
+ (void)setBorderFillColorDefault:(id)arg1;
+ (id)borderFillColorDefault;
+ (void)setActiveColorDefault:(id)arg1;
+ (id)activeColorDefault;
+ (id)underlineLabelsFont;
+ (id)placeholderFont;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *previousLeadingText; // @synthesize previousLeadingText=_previousLeadingText;
@property(copy, nonatomic) NSString *helperAccessibilityLabel; // @synthesize helperAccessibilityLabel=_helperAccessibilityLabel;
@property(copy, nonatomic) NSString *errorText; // @synthesize errorText=_errorText;
@property(copy, nonatomic) NSString *errorAccessibilityValue; // @synthesize errorAccessibilityValue=_errorAccessibilityValue;
@property(retain, nonatomic) NSLayoutConstraint *placeholderAnimationConstraintTrailing; // @synthesize placeholderAnimationConstraintTrailing=_placeholderAnimationConstraintTrailing;
@property(retain, nonatomic) NSLayoutConstraint *placeholderAnimationConstraintTop; // @synthesize placeholderAnimationConstraintTop=_placeholderAnimationConstraintTop;
@property(retain, nonatomic) NSLayoutConstraint *placeholderAnimationConstraintLeading; // @synthesize placeholderAnimationConstraintLeading=_placeholderAnimationConstraintLeading;
@property(copy, nonatomic) NSArray *placeholderAnimationConstraints; // @synthesize placeholderAnimationConstraints=_placeholderAnimationConstraints;
@property(retain, nonatomic) MDCTextInputAllCharactersCounter *internalCharacterCounter; // @synthesize internalCharacterCounter=_internalCharacterCounter;
@property(nonatomic) unsigned long long minimumLines; // @synthesize minimumLines=_minimumLines;
@property(nonatomic) _Bool expandsOnOverflow; // @synthesize expandsOnOverflow=_expandsOnOverflow;
@property(nonatomic) double borderRadius; // @synthesize borderRadius=_borderRadius;
@property(nonatomic) long long underlineViewMode; // @synthesize underlineViewMode=_underlineViewMode;
@property(nonatomic) double underlineHeightNormal; // @synthesize underlineHeightNormal=_underlineHeightNormal;
@property(nonatomic) double underlineHeightActive; // @synthesize underlineHeightActive=_underlineHeightActive;
@property(retain, nonatomic) UIView<MDCTextInput> *textInput; // @synthesize textInput=_textInput;
@property(nonatomic) unsigned long long roundedCorners; // @synthesize roundedCorners=_roundedCorners;
@property(nonatomic, getter=isFloatingEnabled) _Bool floatingEnabled; // @synthesize floatingEnabled=_floatingEnabled;
@property(nonatomic) long long characterCountViewMode; // @synthesize characterCountViewMode=_characterCountViewMode;
@property(nonatomic) unsigned long long characterCountMax; // @synthesize characterCountMax=_characterCountMax;
- (void)contentSizeCategoryDidChange:(id)arg1;
@property(nonatomic, setter=mdc_setAdjustsFontForContentSizeCategory:) _Bool mdc_adjustsFontForContentSizeCategory;
- (void)setHelperText:(id)arg1 helperAccessibilityLabel:(id)arg2;
- (void)setErrorText:(id)arg1 errorAccessibilityValue:(id)arg2;
- (void)textInputDidEndEditing:(id)arg1;
- (void)textInputDidChange:(id)arg1;
- (void)textInputDidToggleEnabled:(id)arg1;
- (void)textInputDidBeginEditing:(id)arg1;
- (void)textInputDidUpdateConstraints;
- (void)textInputDidLayoutSubviews;
- (struct UIEdgeInsets)textInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)textInsets:(struct UIEdgeInsets)arg1 withSizeThatFitsWidthHint:(double)arg2;
- (void)updateLayout;
@property(retain, nonatomic) UIColor *trailingUnderlineLabelTextColor;
@property(retain, nonatomic) UIFont *trailingUnderlineLabelFont;
@property(retain, nonatomic) UIColor *textInputClearButtonTintColor;
@property(retain, nonatomic) UIFont *textInputFont;
@property(copy, nonatomic) NSString *placeholderText;
@property(retain, nonatomic) UIColor *normalColor;
@property(retain, nonatomic) UIColor *leadingUnderlineLabelTextColor;
@property(retain, nonatomic) UIFont *leadingUnderlineLabelFont;
@property(retain, nonatomic) UIFont *inlinePlaceholderFont;
@property(retain, nonatomic) UIColor *inlinePlaceholderColor;
@property(copy, nonatomic) NSString *helperText;
@property(retain, nonatomic) NSNumber *floatingPlaceholderScale;
@property(retain, nonatomic) UIColor *floatingPlaceholderErrorActiveColor;
@property(retain, nonatomic) UIColor *floatingPlaceholderNormalColor;
@property(retain, nonatomic) UIColor *floatingPlaceholderActiveColor;
@property(retain, nonatomic) UIColor *errorColor;
- (_Bool)isDisplayingErrorText;
- (_Bool)isDisplayingCharacterCountError;
@property(retain, nonatomic) UIColor *disabledColor;
@property(retain, nonatomic) UIColor *borderStrokeColor;
@property(retain, nonatomic) UIColor *borderFillColor;
@property(retain, nonatomic) UIColor *activeColor;
- (void)updateUnderline;
- (id)characterCountText;
- (void)updateTrailingUnderlineLabel;
- (double)floatingPlaceholderAnimationConstraintTrailingConstant:(struct UIEdgeInsets)arg1 offset:(struct UIOffset)arg2;
- (double)floatingPlaceholderAnimationConstraintLeadingConstant:(struct UIEdgeInsets)arg1 offset:(struct UIOffset)arg2;
@property(readonly, nonatomic) struct UIOffset floatingPlaceholderOffset;
- (void)forceUpdatePlaceholderY;
- (void)cleanupPlaceholderAnimationConstraints;
- (_Bool)needsUpdatePlaceholderAnimationConstraintsToUp;
- (void)updatePlaceholderAnimationConstraints:(_Bool)arg1;
- (_Bool)isPlaceholderUp;
- (void)movePlaceholderToUp:(_Bool)arg1;
- (void)updatePlaceholder;
- (void)updateTextInput;
- (void)updateLeadingUnderlineLabel;
- (void)updateCursor;
@property(nonatomic) __weak id <MDCTextInputCharacterCounter> characterCounter;
- (unsigned long long)characterCount;
- (id)defaultBorderPath;
- (void)updateBorder;
- (void)unsubscribeFromNotifications;
- (void)subscribeForNotifications;
- (unsigned long long)textInsetModeDefault;
- (void)setupInput;
- (void)commonMDCTextInputControllerBaseInitialization;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTextInput:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

