//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/YTLCAudioVideoTransmission-Protocol.h>
#import <Module_Framework/YTLCRTCClientDelegate-Protocol.h>

@class NSString, YTLCRTCClient, YTLCStreamSettings;
@protocol OS_dispatch_group, OS_dispatch_queue, YTLCAudioVideoTransmissionDelegate;

@interface YTLCAudioVideoWebRTCTransmission : NSObject <YTLCRTCClientDelegate, YTLCAudioVideoTransmission>
{
    _Bool _useAdaptiveBitrate;
    _Bool _sessionStarted;
    _Bool _usingCodecPreferences;
    int _fps;
    int _bitrate;
    int _bitrateCeiling;
    int _audioBitrate;
    int _audioChannelCount;
    float _audioSampleRate;
    int _measurementDelaySeconds;
    int _settlementDelaySeconds;
    int _increaseDeltaSeconds;
    int _estimatedThroughput;
    id <YTLCAudioVideoTransmissionDelegate> _delegate;
    YTLCStreamSettings *_streamSettings;
    NSString *_versionString;
    time_point_e708cccf _epoch;
    YTLCRTCClient *_RTCClient;
    unsigned long long _lastSentTimestamp;
    CDUnknownBlockType _videoTransformCallback;
    NSObject<OS_dispatch_group> *_graphManagementGroup;
    NSObject<OS_dispatch_queue> *_graphManagementQueue;
    struct CGSize _videoSize;
    shared_ptr_65f5155b _videoCallbackTransform;
    shared_ptr_cb175d0a _audioCallbackTransform;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) _Bool usingCodecPreferences; // @synthesize usingCodecPreferences=_usingCodecPreferences;
@property(nonatomic) _Bool sessionStarted; // @synthesize sessionStarted=_sessionStarted;
@property(nonatomic) NSObject<OS_dispatch_queue> *graphManagementQueue; // @synthesize graphManagementQueue=_graphManagementQueue;
@property(nonatomic) NSObject<OS_dispatch_group> *graphManagementGroup; // @synthesize graphManagementGroup=_graphManagementGroup;
@property(nonatomic) shared_ptr_cb175d0a audioCallbackTransform; // @synthesize audioCallbackTransform=_audioCallbackTransform;
@property(nonatomic) CDUnknownBlockType videoTransformCallback; // @synthesize videoTransformCallback=_videoTransformCallback;
@property(nonatomic) shared_ptr_65f5155b videoCallbackTransform; // @synthesize videoCallbackTransform=_videoCallbackTransform;
@property(nonatomic) unsigned long long lastSentTimestamp; // @synthesize lastSentTimestamp=_lastSentTimestamp;
@property(nonatomic) YTLCRTCClient *RTCClient; // @synthesize RTCClient=_RTCClient;
@property(nonatomic) time_point_e708cccf epoch; // @synthesize epoch=_epoch;
@property(copy, nonatomic) NSString *versionString; // @synthesize versionString=_versionString;
@property(readonly, nonatomic) int estimatedThroughput; // @synthesize estimatedThroughput=_estimatedThroughput;
@property(nonatomic) int increaseDeltaSeconds; // @synthesize increaseDeltaSeconds=_increaseDeltaSeconds;
@property(nonatomic) int settlementDelaySeconds; // @synthesize settlementDelaySeconds=_settlementDelaySeconds;
@property(nonatomic) int measurementDelaySeconds; // @synthesize measurementDelaySeconds=_measurementDelaySeconds;
@property(retain, nonatomic) YTLCStreamSettings *streamSettings; // @synthesize streamSettings=_streamSettings;
@property(nonatomic) float audioSampleRate; // @synthesize audioSampleRate=_audioSampleRate;
@property(nonatomic) int audioChannelCount; // @synthesize audioChannelCount=_audioChannelCount;
@property(nonatomic) _Bool useAdaptiveBitrate; // @synthesize useAdaptiveBitrate=_useAdaptiveBitrate;
@property(nonatomic) int audioBitrate; // @synthesize audioBitrate=_audioBitrate;
@property(nonatomic) int bitrateCeiling; // @synthesize bitrateCeiling=_bitrateCeiling;
@property(nonatomic) int bitrate; // @synthesize bitrate=_bitrate;
@property(nonatomic) int fps; // @synthesize fps=_fps;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) id <YTLCAudioVideoTransmissionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)sessionPreferencesWithMaxVideoSize:(struct CGSize)arg1 stereoEnabled:(_Bool)arg2 audioBitrate:(int)arg3 usingCodecPreferences:(_Bool)arg4;
- (void)setUpAudioInput;
- (void)setUpVideoInput;
- (void)startSessionWithURLString:(id)arg1 streamKey:(id)arg2 sessionPreferences:(id)arg3 encoderString:(id)arg4 streamEventLogSettings:(id)arg5;
- (void)didUpdateMediaStatistics:(id)arg1;
- (void)didStartReconnecting;
- (void)didDisconnect;
- (void)didConnect;
- (void)connectionErrorDidOccur;
@property(readonly, nonatomic) long long totalMediaBytesSent;
@property(readonly, nonatomic) _Bool firstVideoFrameSent;
@property(readonly, nonatomic) _Bool firstAudioFrameSent;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled;
@property(readonly, nonatomic) int videoBitrate;
@property(readonly, nonatomic) shared_ptr_e661351a audioInput;
@property(readonly, nonatomic) shared_ptr_e661351a videoInput;
- (void)sendStreamEventLogsToURL:(id)arg1 logID:(id)arg2;
- (void)teardownWithCompletion:(CDUnknownBlockType)arg1;
- (void)startSessionOnDispatchGroup:(id)arg1 dispatchQueue:(id)arg2 URLString:(id)arg3 streamKey:(id)arg4 maxVideoSize:(struct CGSize)arg5 streamEventLogSettings:(id)arg6;
- (void)dealloc;
- (id)initWithBWEWindowSizeInPackets:(id)arg1 BWEBackOffFactor:(id)arg2 videoCodecPreferences:(id)arg3 useBitrateAdjuster:(_Bool)arg4 useLevel4:(_Bool)arg5 h264DataRateLimit:(float)arg6 disableFrameDropper:(_Bool)arg7 eventLogger:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

