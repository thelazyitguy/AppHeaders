//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/MLPlayerDelegate-Protocol.h>
#import <Module_Framework/MLPlayerItemDelegate-Protocol.h>
#import <Module_Framework/YTAVDAIPlayerControls-Protocol.h>
#import <Module_Framework/YTPlayer-Protocol.h>

@class GIMMe, NSMutableDictionary, NSString, YTAVDAIMediaTimelineProvider, YTAVDAIPlayerSegment, YTPlaybackConfig, YTPlayerTransition, YTPlayerView;
@protocol MLPlayer, MLViewportSizeProvider, YTPlayerDelegate, YTSingleVideoControllerDelegate;

@interface YTAVDAIPlayer : NSObject <YTAVDAIPlayerControls, MLPlayerDelegate, MLPlayerItemDelegate, YTPlayer>
{
    YTAVDAIPlayerSegment *_contentPlayerSegment;
    YTAVDAIPlayerSegment *_activePlayerSegment;
    NSMutableDictionary *_playerSegmentDataStore;
    _Bool _externalPlaybackAllowed;
    id <YTPlayerDelegate> _delegate;
    YTAVDAIMediaTimelineProvider *_mediaTimelineProvider;
    GIMMe *_gimme;
    id <MLViewportSizeProvider> _viewportSizeProvider;
    YTPlayerView *_playerView;
    YTPlayerTransition *_playerTransition;
    YTPlaybackConfig *_playbackConfig;
    id <YTSingleVideoControllerDelegate> _singleVideoControllerDelegate;
    id <MLPlayer> _avPlayer;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) id <MLPlayer> avPlayer; // @synthesize avPlayer=_avPlayer;
@property(readonly, nonatomic) __weak id <YTSingleVideoControllerDelegate> singleVideoControllerDelegate; // @synthesize singleVideoControllerDelegate=_singleVideoControllerDelegate;
@property(readonly, nonatomic) YTPlaybackConfig *playbackConfig; // @synthesize playbackConfig=_playbackConfig;
@property(readonly, nonatomic) YTPlayerTransition *playerTransition; // @synthesize playerTransition=_playerTransition;
@property(readonly, nonatomic) YTPlayerView *playerView; // @synthesize playerView=_playerView;
@property(readonly, nonatomic) id <MLViewportSizeProvider> viewportSizeProvider; // @synthesize viewportSizeProvider=_viewportSizeProvider;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(retain, nonatomic) YTAVDAIMediaTimelineProvider *mediaTimelineProvider; // @synthesize mediaTimelineProvider=_mediaTimelineProvider;
@property(nonatomic) __weak id <YTPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)playerSegmentForCPN:(id)arg1;
- (void)removePlayerSegment:(id)arg1;
- (void)addPlayerSegment:(id)arg1;
- (void)activatePlayerSegment:(id)arg1 withTimelineSection:(id)arg2;
- (void)loadPlayerWithSingleVideo:(id)arg1;
- (void)initializeSingleVideoController:(id)arg1 isPrefetch:(_Bool)arg2;
- (void)activateNextPlayerSegment:(id)arg1 withTimelineSection:(id)arg2;
- (void)activateContentSegment:(id)arg1;
- (void)enqueueDAISegment:(id)arg1;
- (void)enqueueContentSegment:(id)arg1;
- (void)playerItem:(id)arg1 captionsDidFailWithError:(id)arg2;
- (void)playerItem:(id)arg1 captionDisplayControllerDidChange:(id)arg2;
- (void)playerItem:(id)arg1 availableCaptionTracksDidChange:(id)arg2;
- (void)playerItem:(id)arg1 activeCaptionTrackDidChange:(id)arg2;
- (void)playerItem:(id)arg1 peggedToLiveDidChange:(_Bool)arg2;
- (void)playerItem:(id)arg1 didSelectAudioFormat:(id)arg2;
- (void)playerItem:(id)arg1 didSelectVideoFormat:(id)arg2;
- (void)playerItem:(id)arg1 hasSelectableVideoFormats:(id)arg2;
- (void)playerItem:(id)arg1 hasSelectableAudioFormats:(id)arg2;
- (void)playerItem:(id)arg1 seekableTimeRangeDidChangeToMinimumTime:(double)arg2 maximumTime:(double)arg3;
- (void)playerItem:(id)arg1 bufferedMediaTimeDidChangeToTime:(double)arg2;
- (void)playerItem:(id)arg1 currentTimeDidChange:(CDStruct_d60ef703)arg2;
- (void)playerItem:(id)arg1 totalMediaTimeDidChangeToTime:(double)arg2;
- (void)playerForegroundAudioOnlyPlaybackStateDidChange:(_Bool)arg1;
- (void)playerDidSwitchToTimelineSection:(id)arg1 absoluteTime:(double)arg2;
- (void)playerRateDidChange:(float)arg1;
- (void)refreshStreamingDataAndStartPlayback:(_Bool)arg1;
- (void)reloadPlayerAndStartPlayback:(_Bool)arg1;
- (void)playerExternalPlaybackActiveStateDidChange:(_Bool)arg1;
- (void)stateDidChangeFromState:(long long)arg1 toState:(long long)arg2 playerInitiated:(_Bool)arg3;
- (void)addVideoToHLSPlaylistSplicer:(id)arg1;
- (void)seekToEnd;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)seekToTime:(double)arg1;
- (void)seekToProductionTime:(double)arg1;
- (void)pause;
- (void)play;
- (void)setVolume:(float)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setViewportSizeProvider:(id)arg1;
- (void)setExternalPlaybackAllowed:(_Bool)arg1;
- (void)reloadMediaPlayer;
- (void)shutDownAndClearVideos;
- (void)suspendPlayback;
- (id)currentSegment;
- (id)allSegments;
- (void)removeSegment:(id)arg1;
- (void)enqueueSegment:(id)arg1;
- (id)createSegmentWithVideoController:(id)arg1;
- (id)initWithViewportSizeProvider:(id)arg1 playerView:(id)arg2 playerTransition:(id)arg3 playbackConfig:(id)arg4 mediaTimelineProvider:(id)arg5 delegate:(id)arg6 singleVideoControllerDelegate:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

