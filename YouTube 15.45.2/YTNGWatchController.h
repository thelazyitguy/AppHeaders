//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "YCHPlaybackEventsProvider-Protocol.h"
#import "YTAvailableHeightBelowPlayerResponderProvider-Protocol.h"
#import "YTGraftingViewController-Protocol.h"
#import "YTNGWatchFlexyStateResponderProvider-Protocol.h"
#import "YTNGWatchMetadataPanelStateResponderProvider-Protocol.h"
#import "YTNGWatchPlayerThumbnailViewProvider-Protocol.h"
#import "YTNGWatchViewControllerDelegate-Protocol.h"
#import "YTNotificationServiceObserver-Protocol.h"
#import "YTPlaylistEngagementPanelContentProvider-Protocol.h"
#import "YTResponder-Protocol.h"
#import "YTSubscriptionServiceObserver-Protocol.h"
#import "YTWatchControllerDelegate-Protocol.h"

@class GIMMe, MLPlayerStickySettings, NSString, UIView, UIViewController, YTImageService, YTNGWatchFlexyState, YTNGWatchViewController, YTPlaylistPanelController, YTWatchController, YTWatchTransition;
@protocol YTEventLogger, YTNGWatchControllerDelegate, YTResponder, YTWatchPlayerViewControllerDelegate;

@interface YTNGWatchController : NSObject <YCHPlaybackEventsProvider, YTNGWatchViewControllerDelegate, YTPlaylistEngagementPanelContentProvider, YTAvailableHeightBelowPlayerResponderProvider, YTGraftingViewController, YTNGWatchFlexyStateResponderProvider, YTNGWatchMetadataPanelStateResponderProvider, YTNGWatchPlayerThumbnailViewProvider, YTNotificationServiceObserver, YTResponder, YTSubscriptionServiceObserver, YTWatchControllerDelegate>
{
    YTWatchController *_watchController;
    id <YTNGWatchControllerDelegate> _delegate;
    UIView *_thumbnailView;
    YTImageService *_imageService;
    UIView *_playerSnapshotView;
    id <YTEventLogger> _eventLogger;
    UIViewController<YTWatchPlayerViewControllerDelegate> *_playerViewController;
    _Bool _interactionLoggingStarted;
    YTPlaylistPanelController *_playlistPanelController;
    _Bool _metadataPanelExpanded;
    _Bool _addToToggled;
    _Bool _videoEnded;
    _Bool _isLikeStatusInitialized;
    int _likeStatus;
    YTNGWatchFlexyState *_flexyState;
    id <YTResponder> _parentResponder;
    GIMMe *_gimme;
    YTWatchTransition *_watchTransition;
    unsigned long long _numberOfActivations;
    YTNGWatchViewController *_watchViewController;
}

- (void).cxx_destruct;
@property(retain, nonatomic) YTNGWatchViewController *watchViewController; // @synthesize watchViewController=_watchViewController;
@property(nonatomic) _Bool isLikeStatusInitialized; // @synthesize isLikeStatusInitialized=_isLikeStatusInitialized;
@property(readonly, nonatomic) _Bool videoEnded; // @synthesize videoEnded=_videoEnded;
@property(readonly, nonatomic) unsigned long long numberOfActivations; // @synthesize numberOfActivations=_numberOfActivations;
@property(retain, nonatomic) YTWatchTransition *watchTransition; // @synthesize watchTransition=_watchTransition;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(readonly, nonatomic) __weak id <YTResponder> parentResponder; // @synthesize parentResponder=_parentResponder;
@property(nonatomic) _Bool addToToggled; // @synthesize addToToggled=_addToToggled;
@property(nonatomic) int likeStatus; // @synthesize likeStatus=_likeStatus;
@property(nonatomic, getter=isMetadataPanelExpanded) _Bool metadataPanelExpanded; // @synthesize metadataPanelExpanded=_metadataPanelExpanded;
@property(retain, nonatomic) YTNGWatchFlexyState *flexyState; // @synthesize flexyState=_flexyState;
- (_Bool)handleCommandResponderEvent:(id)arg1;
- (_Bool)shouldStartPlayback;
- (void)startPlaybackIfPlayerEmpty;
- (void)createWatchViewControllerIfNeeded;
- (void)maybePrefetchThumbnail:(id)arg1;
- (void)resetMetaDataPanelStateResponderProvider;
- (void)exitFullScreenIfPossible;
- (void)watchNextResponseDidFailWithError:(id)arg1;
- (void)willMakeWatchNextRequest:(id)arg1;
- (void)refreshPlaylistCollectionViewController;
- (id)playlistPanelCollectionViewControllerWithParentResponder:(id)arg1;
- (id)playlistEngagementPanelSupportedRenderers;
- (_Bool)isPlaybackVideoPlayingAd;
- (_Bool)isPlaybackVideoPlaying;
- (double)contentVideoMediaTime;
- (void)removePlaybackEventsObserver:(id)arg1;
- (void)addPlaybackEventsObserver:(id)arg1;
@property(readonly, nonatomic) double availableHeightBelowPlayer;
- (void)subscriptionRemovedWithChannelID:(id)arg1 response:(id)arg2;
- (void)subscriptionAddedWithChannelID:(id)arg1 response:(id)arg2;
- (void)didModifyPlaylistNotificationPreferenceWithResponse:(id)arg1;
- (void)didModifyChannelNotificationPreferenceWithResponse:(id)arg1;
- (void)playbackControllerExternalPlaybackActiveStateDidChange:(_Bool)arg1;
- (void)playbackControllerDidFinishPlayback;
- (void)playbackControllerDidPlay;
- (void)playbackControllerDidPressReplay;
- (void)playbackControllerDidPressPlay;
- (void)playbackControllerDidReceivePlayerResponse:(id)arg1;
- (void)playbackRouteDidChange;
- (void)didSetInfoCardViewController:(id)arg1;
- (void)playbackControllerDidLoadPlayerWithPlaybackData:(id)arg1;
- (void)playbackControllerContentMediaTimeDidChangeToTime:(double)arg1 totalMediaTime:(double)arg2;
- (void)playbackControllerCurrentVideoMediaTimeDidChange:(double)arg1;
- (void)playbackControllerCurrentVideoAspectRatioDidChange:(double)arg1;
- (void)didReceiveWatchNextResponse:(id)arg1;
- (void)clearPlayerViewControllerWithPlayerSnapshotView:(id)arg1;
- (void)resetWatchViewControllerInteractionLogging;
- (void)resetOverlayInteractionLogging;
- (void)resetPlayerViewController;
- (void)setPlayerViewController:(id)arg1;
- (void)setPlaylistPanel:(id)arg1 playlistUIDelegate:(id)arg2 watchNextResults:(id)arg3 descriptionDetails:(id)arg4;
- (void)didCreateWatchNextViewController:(id)arg1;
- (_Bool)handleShowEngagementPanelCommand:(id)arg1;
- (_Bool)isFullScreen;
- (void)showSmallScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)showFullScreen;
- (void)hideWatch;
- (void)loadCompanionAd:(id)arg1;
- (void)handleNavigationEndpointResponderEvent:(id)arg1;
- (void)playbackControllerWillFailWithError:(id)arg1;
- (void)playbackControllerPlayerStateDidChange;
- (void)playbackControllerStateDidChange;
@property(readonly, nonatomic) MLPlayerStickySettings *mediaStickySettings;
- (id)playerThumbnailView;
- (id)navEndpoint;
- (void)endScreenLoggingIfNeeded;
- (void)startScreenLoggingIfNeeded;
- (void)clearThumbnails;
- (_Bool)shouldReloadVideoForWatchTransition:(id)arg1;
- (void)logNGWSwipedEventWithEvent:(id)arg1;
- (void)setWatchFlowController:(id)arg1;
- (void)preloadWatchController;
- (void)handleRemoteControlEvent:(long long)arg1;
- (_Bool)hasWatchTransition:(id)arg1;
- (void)releaseWatchNextViewController;
- (void)clearNavEndpoint;
- (void)reload;
- (void)reloadIfNecessary;
- (void)resign;
@property(readonly, nonatomic) UIView *playerView;
@property(readonly, nonatomic) UIView *watchView;
- (void)applyWatchTransition;
- (void)prepareForWatchTransition:(id)arg1;
- (id)initWithWatchTransition:(id)arg1 flowController:(id)arg2 delegate:(id)arg3 parentResponder:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

