//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <Module_Framework/OGLAccountMenuExpressSignInTransitionHandler-Protocol.h>
#import <Module_Framework/OGLAnalyticsExpressSignInDelegate-Protocol.h>
#import <Module_Framework/OGLExpressSignInViewController-Protocol.h>
#import <Module_Framework/UIGestureRecognizerDelegate-Protocol.h>

@class MDCButton, MDCFlatButton, NSString, OGLAccountLockupView, OGLAccountMenuDependencies, OGLAccountSnackbarManager, OGLAnalytics, OGLAnalyticsComponentContext, UIButton, UIImageView, UILabel, UIView;
@protocol OGLAccount, OGLAccountRestrictionsSource, OGLAccountService, OGLExpressSignInViewControllerDelegate, OGLTheming, OGLUILogger;

@interface OGLExpressSignInViewController : UIViewController <OGLAnalyticsExpressSignInDelegate, OGLAccountMenuExpressSignInTransitionHandler, UIGestureRecognizerDelegate, OGLExpressSignInViewController>
{
    _Bool _showLogo;
    _Bool _presentAsModal;
    _Bool _continueAfterSignIn;
    _Bool _hasBottomBackground;
    _Bool _continueWithoutAccount;
    _Bool _alwaysLogAnonymously;
    _Bool _hasTopOffset;
    _Bool _allAccountsDisabled;
    UIViewController *_disclaimerViewController;
    UIViewController *_backgroundViewController;
    NSString *_expressTitle;
    NSString *_expressSubtitle;
    CDUnknownBlockType _formatActionTitle;
    double _backgroundViewControllerMinVisibleHeight;
    id <OGLExpressSignInViewControllerDelegate> _signInDelegate;
    id <OGLAccount> _expressAccount;
    id <OGLTheming> _oglTheme;
    id <OGLAccountRestrictionsSource> _accountRestrictionsSource;
    id <OGLAccountService> _accountService;
    UIViewController *_expressMenuViewController;
    OGLAnalyticsComponentContext *_componentContext;
    OGLAccountSnackbarManager *_snackbarManager;
    OGLAccountMenuDependencies *_accountMenuDependencies;
    id <OGLUILogger> _uiLogger;
    OGLAnalytics *_legacyLogger;
    UIView *_expressView;
    UIView *_titlesDividerView;
    UIView *_menuDividerView;
    UIView *_disclaimerDividerView;
    UIImageView *_logoImageView;
    OGLAccountLockupView *_accountLockupView;
    UIView *_accountLockupContainerView;
    UIButton *_accountLockupButton;
    MDCButton *_continueButton;
    MDCFlatButton *_noAccountButton;
    UILabel *_expressTitleLabel;
    UILabel *_expressSubtitleLabel;
    UILabel *_accessibilityHeadlineLabel;
    UIView *_topSection;
    UIView *_midSection;
    UIView *_bottomSection;
    UIView *_shadeView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIView *shadeView; // @synthesize shadeView=_shadeView;
@property(retain, nonatomic) UIView *bottomSection; // @synthesize bottomSection=_bottomSection;
@property(retain, nonatomic) UIView *midSection; // @synthesize midSection=_midSection;
@property(retain, nonatomic) UIView *topSection; // @synthesize topSection=_topSection;
@property(retain, nonatomic) UILabel *accessibilityHeadlineLabel; // @synthesize accessibilityHeadlineLabel=_accessibilityHeadlineLabel;
@property(retain, nonatomic) UILabel *expressSubtitleLabel; // @synthesize expressSubtitleLabel=_expressSubtitleLabel;
@property(retain, nonatomic) UILabel *expressTitleLabel; // @synthesize expressTitleLabel=_expressTitleLabel;
@property(retain, nonatomic) MDCFlatButton *noAccountButton; // @synthesize noAccountButton=_noAccountButton;
@property(retain, nonatomic) MDCButton *continueButton; // @synthesize continueButton=_continueButton;
@property(retain, nonatomic) UIButton *accountLockupButton; // @synthesize accountLockupButton=_accountLockupButton;
@property(retain, nonatomic) UIView *accountLockupContainerView; // @synthesize accountLockupContainerView=_accountLockupContainerView;
@property(retain, nonatomic) OGLAccountLockupView *accountLockupView; // @synthesize accountLockupView=_accountLockupView;
@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
@property(retain, nonatomic) UIView *disclaimerDividerView; // @synthesize disclaimerDividerView=_disclaimerDividerView;
@property(retain, nonatomic) UIView *menuDividerView; // @synthesize menuDividerView=_menuDividerView;
@property(retain, nonatomic) UIView *titlesDividerView; // @synthesize titlesDividerView=_titlesDividerView;
@property(retain, nonatomic) UIView *expressView; // @synthesize expressView=_expressView;
@property(retain, nonatomic) OGLAnalytics *legacyLogger; // @synthesize legacyLogger=_legacyLogger;
@property(retain, nonatomic) id <OGLUILogger> uiLogger; // @synthesize uiLogger=_uiLogger;
@property(nonatomic) _Bool allAccountsDisabled; // @synthesize allAccountsDisabled=_allAccountsDisabled;
@property(retain, nonatomic) OGLAccountMenuDependencies *accountMenuDependencies; // @synthesize accountMenuDependencies=_accountMenuDependencies;
@property(retain, nonatomic) OGLAccountSnackbarManager *snackbarManager; // @synthesize snackbarManager=_snackbarManager;
@property(retain, nonatomic) OGLAnalyticsComponentContext *componentContext; // @synthesize componentContext=_componentContext;
@property(retain, nonatomic) UIViewController *expressMenuViewController; // @synthesize expressMenuViewController=_expressMenuViewController;
@property(retain, nonatomic) id <OGLAccountService> accountService; // @synthesize accountService=_accountService;
@property(nonatomic) _Bool hasTopOffset; // @synthesize hasTopOffset=_hasTopOffset;
@property(nonatomic) _Bool alwaysLogAnonymously; // @synthesize alwaysLogAnonymously=_alwaysLogAnonymously;
@property(retain, nonatomic) id <OGLAccountRestrictionsSource> accountRestrictionsSource; // @synthesize accountRestrictionsSource=_accountRestrictionsSource;
@property(retain, nonatomic) id <OGLTheming> oglTheme; // @synthesize oglTheme=_oglTheme;
@property(nonatomic) _Bool continueWithoutAccount; // @synthesize continueWithoutAccount=_continueWithoutAccount;
@property(retain, nonatomic) id <OGLAccount> expressAccount; // @synthesize expressAccount=_expressAccount;
@property(nonatomic) __weak id <OGLExpressSignInViewControllerDelegate> signInDelegate; // @synthesize signInDelegate=_signInDelegate;
@property(nonatomic) _Bool hasBottomBackground; // @synthesize hasBottomBackground=_hasBottomBackground;
@property(nonatomic) _Bool continueAfterSignIn; // @synthesize continueAfterSignIn=_continueAfterSignIn;
@property(nonatomic) _Bool presentAsModal; // @synthesize presentAsModal=_presentAsModal;
@property(nonatomic) double backgroundViewControllerMinVisibleHeight; // @synthesize backgroundViewControllerMinVisibleHeight=_backgroundViewControllerMinVisibleHeight;
@property(copy, nonatomic) CDUnknownBlockType formatActionTitle; // @synthesize formatActionTitle=_formatActionTitle;
@property(copy, nonatomic) NSString *expressSubtitle; // @synthesize expressSubtitle=_expressSubtitle;
@property(copy, nonatomic) NSString *expressTitle; // @synthesize expressTitle=_expressTitle;
@property(retain, nonatomic) UIViewController *backgroundViewController; // @synthesize backgroundViewController=_backgroundViewController;
@property(nonatomic) _Bool showLogo; // @synthesize showLogo=_showLogo;
@property(retain, nonatomic) UIViewController *disclaimerViewController; // @synthesize disclaimerViewController=_disclaimerViewController;
- (void)accountListDidChange:(id)arg1;
- (void)updateExpressSignInAccountMenu:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)applyTheme;
- (id)logByAccount;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)didTapTransparentView:(id)arg1;
- (void)didTapShadeView:(id)arg1;
- (void)didTapNoAccountButton:(id)arg1;
- (void)didTapContinueButton:(id)arg1;
- (void)didTapLockupButton:(id)arg1;
- (void)instrumentVisualElements;
- (id)accountSnackbarManager;
- (void)handleExpressMenuAnimation;
- (void)pauseVoiceOver;
- (void)setAccountLockupAccessibility;
- (void)setAccessibilityForAllViews;
- (void)startSession;
- (_Bool)displayingAsRegularWidthSizeClass;
- (_Bool)isFullscreen;
- (_Bool)isHeightForFullscreen;
- (double)expressMenuHeight;
- (double)expressViewWidth;
- (double)bottomSectionHeight;
- (void)updateButtonTitle;
- (void)handleAccountChanges;
- (void)layoutButtons;
- (void)layoutTitles;
- (void)setUpButtons;
- (void)setUpTitles;
- (void)setUpDividers;
- (void)setUpViews;
- (void)handleAccountRestrictions;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)viewWillAppear:(_Bool)arg1;
@property(readonly, nonatomic) struct CGSize onTopViewSize;
- (id)initWithAccountService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

