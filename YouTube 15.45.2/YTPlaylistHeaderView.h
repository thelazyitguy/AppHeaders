//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "MDCInkTouchControllerDelegate-Protocol.h"
#import "YTDropdownButtonDelegate-Protocol.h"
#import "YTImageViewLoadingDelegate-Protocol.h"
#import "YTOfflinePlaylistProgress-Protocol.h"
#import "YTPageStyling-Protocol.h"
#import "YTResponder-Protocol.h"
#import "YTStyleableViewProtocol-Protocol.h"

@class CALayer, GA11YElement, GIMMe, MDCInkTouchController, NSString, QTMButton, UIColor, UIImageView, UITapGestureRecognizer, YTBadgesView, YTDropdownButton, YTFormattedStringLabel, YTIPlaylistHeaderRenderer, YTIToggleButtonRenderer, YTImageView, YTInteractionLoggingProxyButton, YTLabel, YTNotificationPreferenceToggleButton, YTOverflowingButtonsView, YTQTMButton, YTTransferButton;
@protocol YTPlaylistHeaderViewDelegate, YTResponder;

@interface YTPlaylistHeaderView : UIView <MDCInkTouchControllerDelegate, YTDropdownButtonDelegate, YTImageViewLoadingDelegate, YTOfflinePlaylistProgress, YTPageStyling, YTStyleableViewProtocol, YTResponder>
{
    MDCInkTouchController *_inkTouchController;
    UIView *_headerBannerContainer;
    UIView *_backgroundView;
    UIView *_metadataView;
    UIView *_playlistInfoView;
    YTImageView *_headerBannerGradientView;
    UIView *_headerBannerTintView;
    CALayer *_bottomBorder;
    UIImageView *_privacyImageView;
    YTFormattedStringLabel *_titleLabel;
    YTFormattedStringLabel *_subtitleLabel;
    YTFormattedStringLabel *_metadataLabel;
    YTFormattedStringLabel *_descriptionLabel;
    YTFormattedStringLabel *_ownerLabel;
    YTFormattedStringLabel *_numberOfVideosLabel;
    YTFormattedStringLabel *_playlistInfoMessage;
    YTLabel *_totalLengthSeparatorLabel;
    YTLabel *_sortMenuSeparatorLabel;
    YTQTMButton *_offerButton;
    UITapGestureRecognizer *_tapRecognizer;
    YTBadgesView *_badgesView;
    QTMButton *_playAllButton;
    _Bool _playAllButtonHidden;
    UIColor *_privacyIconColor;
    YTQTMButton *_primaryButton;
    YTQTMButton *_secondaryButton;
    YTQTMButton *_slimPlayAllButton;
    YTQTMButton *_syncButton;
    YTTransferButton *_transferButton;
    YTNotificationPreferenceToggleButton *_notificationToggleButton;
    YTDropdownButton *_collectionDropdown;
    YTDropdownButton *_sortDropdown;
    YTOverflowingButtonsView *_overflowButtonsView;
    _Bool _playlistInfoMessageVisible;
    double _headerBannerAspectRatio;
    double _headerBannerMaxHeightRatio;
    id <YTPlaylistHeaderViewDelegate> _delegate;
    YTIToggleButtonRenderer *_secondaryButtonRenderer;
    UIColor *_secondaryButtonColor;
    GA11YElement *_nonInteractiveElement;
    _Bool _stickyHeaderEnabled;
    _Bool _expanded;
    id <YTResponder> _parentResponder;
    GIMMe *_gimme;
    YTIPlaylistHeaderRenderer *_renderer;
    YTQTMButton *_deletePlaylistButton;
    YTQTMButton *_editPlaylistButton;
    YTQTMButton *_infoButton;
    YTQTMButton *_queueButton;
    YTQTMButton *_saveButton;
    YTQTMButton *_shuffleButton;
    YTQTMButton *_shareButton;
    YTQTMButton *_disclosureButton;
    YTInteractionLoggingProxyButton *_collapseProxyButton;
    YTInteractionLoggingProxyButton *_expandProxyButton;
    YTImageView *_headerBannerImageView;
    double _topOffset;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <YTPlaylistHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double topOffset; // @synthesize topOffset=_topOffset;
@property(nonatomic) _Bool expanded; // @synthesize expanded=_expanded;
@property(nonatomic) _Bool stickyHeaderEnabled; // @synthesize stickyHeaderEnabled=_stickyHeaderEnabled;
@property(readonly, nonatomic) YTImageView *headerBannerImageView; // @synthesize headerBannerImageView=_headerBannerImageView;
@property(readonly, nonatomic) YTInteractionLoggingProxyButton *expandProxyButton; // @synthesize expandProxyButton=_expandProxyButton;
@property(readonly, nonatomic) YTInteractionLoggingProxyButton *collapseProxyButton; // @synthesize collapseProxyButton=_collapseProxyButton;
@property(readonly, nonatomic) YTQTMButton *disclosureButton; // @synthesize disclosureButton=_disclosureButton;
@property(readonly, nonatomic) YTQTMButton *secondaryButton; // @synthesize secondaryButton=_secondaryButton;
@property(readonly, nonatomic) YTQTMButton *primaryButton; // @synthesize primaryButton=_primaryButton;
@property(readonly, nonatomic) YTQTMButton *shareButton; // @synthesize shareButton=_shareButton;
@property(readonly, nonatomic) YTQTMButton *shuffleButton; // @synthesize shuffleButton=_shuffleButton;
@property(readonly, nonatomic) YTQTMButton *saveButton; // @synthesize saveButton=_saveButton;
@property(readonly, nonatomic) YTQTMButton *queueButton; // @synthesize queueButton=_queueButton;
@property(readonly, nonatomic) YTQTMButton *infoButton; // @synthesize infoButton=_infoButton;
@property(readonly, nonatomic) YTQTMButton *editPlaylistButton; // @synthesize editPlaylistButton=_editPlaylistButton;
@property(readonly, nonatomic) YTQTMButton *deletePlaylistButton; // @synthesize deletePlaylistButton=_deletePlaylistButton;
@property(retain, nonatomic) YTIPlaylistHeaderRenderer *renderer; // @synthesize renderer=_renderer;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(readonly, nonatomic) __weak id <YTResponder> parentResponder; // @synthesize parentResponder=_parentResponder;
- (void)setCanExpand:(_Bool)arg1;
- (void)didTapOffer:(id)arg1;
- (void)updateColorsWithColorGroup:(id)arg1;
- (void)updatePlayAllButtonColorWithHeaderImage:(id)arg1;
- (struct CGSize)bannerSizeForWidth:(double)arg1;
- (double)messageLabelWidthForWidth:(double)arg1;
- (double)preferredHeightForWidth:(double)arg1;
- (_Bool)shouldShowMetadataView;
- (double)metadataHeight;
- (double)playlistMessageHeight;
- (double)navbarHeight;
- (_Bool)isExpandedForWidth:(double)arg1;
- (double)defaultHeightForWidth:(double)arg1;
- (double)edgeMarginYForWidth:(double)arg1;
- (double)edgeMarginXForWidth:(double)arg1;
- (void)setPrivacyStatus:(int)arg1;
- (void)setPrimaryActionButtonColors:(id)arg1 typeVariant:(long long)arg2;
- (id)createPlaylistActionButtonWithImage:(id)arg1 accessibilityLabel:(id)arg2 accessibilityIdentifier:(id)arg3;
- (id)createPrimaryActionButtonWithImage:(id)arg1 accessibilityLabel:(id)arg2 accessibilityIdentifier:(id)arg3;
- (void)fillOverflowButtonsView;
- (void)updateVisibility;
- (void)setViewTypeVariant:(long long)arg1 backgroundColor:(id)arg2;
- (void)imageViewDidLoad:(id)arg1;
- (void)dropdownButtonDidOpenMenu:(id)arg1;
- (void)dropdownButton:(id)arg1 didSelectOption:(id)arg2;
- (id)nonInteractiveElements;
- (id)accessibilityElements;
- (void)pageStyleDidChange:(long long)arg1;
- (void)didMoveToWindow;
- (void)downloadDidProgress:(double)arg1;
- (void)removeNotificationToggleButtonTarget:(id)arg1 action:(SEL)arg2;
- (void)addNotificationToggleButtonTarget:(id)arg1 action:(SEL)arg2;
- (void)setNotificationToggleButtonRenderer:(id)arg1;
- (void)addDisclosureButtonTarget:(id)arg1 action:(SEL)arg2;
- (void)addSecondaryButtonTarget:(id)arg1 action:(SEL)arg2;
- (void)addPrimaryButtonTarget:(id)arg1 action:(SEL)arg2;
- (void)addShuffleTarget:(id)arg1 action:(SEL)arg2;
- (void)addPlayAllTarget:(id)arg1 action:(SEL)arg2;
- (void)addSyncOfflinePlaylistTarget:(id)arg1 action:(SEL)arg2;
- (void)addOfflinePlaylistTarget:(id)arg1 action:(SEL)arg2;
- (void)setPlayAllHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSyncOfflinePlaylistLabelText:(id)arg1;
- (void)setPlaylistInfoMessageVisible:(_Bool)arg1 message:(id)arg2;
- (void)setOfflineButtonVisible:(_Bool)arg1 dimmed:(_Bool)arg2;
- (void)setOfflinePlaylistStatus:(int)arg1 offlineability:(id)arg2;
- (void)setShuffleButtonAccessibilityLabel:(id)arg1;
- (void)setShuffleButtonHidden:(_Bool)arg1;
- (void)setShuffleButtonRenderer:(id)arg1;
- (void)setSortFilterSubMenuRenderer:(id)arg1;
- (void)setHeaderBannerAspectRatio:(double)arg1 maxHeightRatio:(double)arg2;
- (void)setHeaderBannerAspectRatio:(double)arg1;
- (void)setHeaderBannerTintColor:(id)arg1;
- (double)compressibleHeaderHeight;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setSecondaryButtonToggled:(_Bool)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithParentResponder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

