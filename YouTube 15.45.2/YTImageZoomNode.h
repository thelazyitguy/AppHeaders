//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/ASNetworkImageNode.h>

#import <Module_Framework/ASImageCacheProtocol-Protocol.h>
#import <Module_Framework/ASImageDownloaderProtocol-Protocol.h>
#import <Module_Framework/ASNetworkImageNodeDelegate-Protocol.h>
#import <Module_Framework/ELMDisplayNode-Protocol.h>
#import <Module_Framework/ELMPriorityLoaderDelegate-Protocol.h>
#import <Module_Framework/UIGestureRecognizerDelegate-Protocol.h>

@class ELMElement, ELMImageCacheInfo, NSString, UIImageView, UIView, UIWindow;
@protocol ELMContext, ELMController, YTActivityIndicatorView;

@interface YTImageZoomNode : ASNetworkImageNode <ASNetworkImageNodeDelegate, ASImageDownloaderProtocol, ASImageCacheProtocol, UIGestureRecognizerDelegate, ELMPriorityLoaderDelegate, ELMDisplayNode>
{
    id <ELMContext> _context;
    ELMImageCacheInfo *_imageCacheInfo;
    _Bool _didLoadImage;
    _Bool _didDecodeImage;
    _Bool _didDisplayImage;
    _Bool _didStartAnimatedImage;
    _Bool _didPlayZoomEndAnimation;
    double _playCycleStart;
    double _playCycleStop;
    UIImageView *_imageZoomView;
    struct CGPoint _imageZoomViewOrigin;
    struct CGPoint _imageZoomPinchCenter;
    double _pinchPivotDistanceX;
    double _pinchPivotDistanceY;
    UIWindow *_zoomWindow;
    UIWindow *_maskWindow;
    UIView<YTActivityIndicatorView> *_spinner;
    ELMElement *_element;
}

+ (id)clearImageWithSize:(struct CGSize)arg1;
+ (_Bool)canBeLayerBacked:(id)arg1 withContext:(id)arg2;
+ (id)cachingImageDownloaderWithCacheStrategy:(unsigned long long)arg1 diskCapacity:(unsigned long long)arg2;
+ (id)cachingImageDownloaderWithContext:(id)arg1;
+ (void)setMaxConcurrentDownloadsWithContext:(id)arg1;
+ (void)setDiskImageCacheBytesLimitWithContext:(id)arg1;
- (void).cxx_destruct;
@property(retain) ELMElement *element; // @synthesize element=_element;
- (id)getMaskWindow;
- (id)getSpinner;
-     // Error parsing type: v88@0:8{ImageZoomType=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}iBBi}16, name: createAndShowZoomWindow:
- (void)createAndShowMaskWindow;
- (id)imageFrameAtPlayPosition;
- (void)maybeCreateImageCacheInfo;
- (_Bool)maybeUpdateImageWithRemoteImage;
- (_Bool)maybeUpdateImageWithLocalImage;
- (void)maybeUpdateImage;
- (_Bool)imageTypeIsEmpty;
- (long long)priorityLoaderPriority;
- (void)imageNode:(id)arg1 didFailWithError:(id)arg2;
- (void)imageNodeDidFinishDecoding:(id)arg1;
- (void)imageNode:(id)arg1 didLoadImage:(id)arg2;
- (void)imageNodeDidStartFetchingData:(id)arg1;
- (void)cachedImageWithURL:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)animatedImageWithData:(id)arg1;
- (void)cancelImageDownloadForIdentifier:(id)arg1;
- (id)downloadImageWithURL:(id)arg1 callbackQueue:(id)arg2 downloadProgress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)animatedImageDidEnterState:(unsigned long long)arg1 fromState:(unsigned long long)arg2;
- (void)displayDidFinish;
- (void)displayWillStart;
- (void)calculatedLayoutDidChange;
- (void)invalidateCalculatedLayout;
- (void)didEnterVisibleState;
- (void)setImage:(id)arg1;
- (_Bool)performAccessibilityCustomAction:(id)arg1;
- (id)createActivityIndicator;
- (void)controllerDidApplyProperties;
- (void)applyViewProperties;
- (_Bool)managesGestureHandling;
- (id)initWithCache:(id)arg1 downloader:(id)arg2;
- (id)initWithElement:(id)arg1 context:(id)arg2;
- (void)animateZoomEnd;
- (void)handlePinchGesture:(id)arg1;
- (void)handleTapGesture:(id)arg1;
- (void)onPinchGestureBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) id <ELMController> controller; // @dynamic controller;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

