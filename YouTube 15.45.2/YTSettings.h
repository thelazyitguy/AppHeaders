//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "YTAppConfig-Protocol.h"
#import "YTHotConfigObserver-Protocol.h"
#import "YTSettingsBackedByUserDefaults-Protocol.h"

@class GIMMe, MLAudioQualityConfig, NSArray, NSDate, NSDictionary, NSHashTable, NSNumber, NSString, YTColdConfig, YTGlobalConfig, YTHotConfig, YTIMdxGlobalConfig, YTUserDefaults;
@protocol YTIdentityProvider;

@interface YTSettings : NSObject <YTAppConfig, YTHotConfigObserver, YTSettingsBackedByUserDefaults>
{
    YTGlobalConfig *_globalConfig;
    YTColdConfig *_coldConfig;
    YTHotConfig *_hotConfig;
    NSArray *_installedNonYouTubeApps;
    NSArray *_installedYouTubeApps;
    NSDate *_installedAppsLastRequestDate;
    NSDate *_installedYouTubeAppsLastRequestDate;
    _Bool _appDidIssueCriticalRequest;
    NSHashTable *_playerViewControllerConfigObservers;
    _Bool _externallyLaunched;
    _Bool _localeRequiresSafeSearch;
    _Bool _navEndpointClick;
    NSDictionary *_breakpadParameters;
    NSDictionary *_feedbackParameters;
    NSDictionary *_suggestParameters;
    GIMMe *_gimme;
    NSString *_lastChangedPlaylistID;
    NSString *_lastChangedPlaylistTitle;
    id <YTIdentityProvider> _identityProvider;
    NSString *_visitorData;
    YTUserDefaults *_userDefaults;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) YTUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(copy, nonatomic) NSString *visitorData; // @synthesize visitorData=_visitorData;
@property(nonatomic) __weak id <YTIdentityProvider> identityProvider; // @synthesize identityProvider=_identityProvider;
@property(nonatomic, getter=isNavEndpointClick) _Bool navEndpointClick; // @synthesize navEndpointClick=_navEndpointClick;
@property(retain, nonatomic) NSString *lastChangedPlaylistTitle; // @synthesize lastChangedPlaylistTitle=_lastChangedPlaylistTitle;
@property(retain, nonatomic) NSString *lastChangedPlaylistID; // @synthesize lastChangedPlaylistID=_lastChangedPlaylistID;
@property(readonly, nonatomic) YTColdConfig *coldConfig; // @synthesize coldConfig=_coldConfig;
@property(readonly, nonatomic) _Bool localeRequiresSafeSearch; // @synthesize localeRequiresSafeSearch=_localeRequiresSafeSearch;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(retain, nonatomic) NSDictionary *suggestParameters; // @synthesize suggestParameters=_suggestParameters;
@property(retain, nonatomic) NSDictionary *feedbackParameters; // @synthesize feedbackParameters=_feedbackParameters;
@property(retain, nonatomic) NSDictionary *breakpadParameters; // @synthesize breakpadParameters=_breakpadParameters;
@property(nonatomic) _Bool externallyLaunched; // @synthesize externallyLaunched=_externallyLaunched;
@property(nonatomic) _Bool bedtimeReminderEverUsed;
@property(nonatomic) long long bedtimeReminderState;
@property(nonatomic) _Bool bedtimeReminderWaitAfterVideoEnds;
@property(retain, nonatomic) NSDate *bedtimeReminderTriggerDate;
@property(nonatomic) double bedtimeReminderBedtimeEndTimeIntervalSinceMidnight;
@property(nonatomic) double bedtimeReminderBedtimeStartTimeIntervalSinceMidnight;
@property(nonatomic) _Bool bedtimeReminderEnabled;
- (_Bool)removeManageAccounts;
@property(nonatomic) int safeSearch;
- (_Bool)enableAppBundleClient;
- (void)setAppBundleClientStateData:(id)arg1 forClientWithIdentifier:(id)arg2;
- (id)appBundleClientStateDataForClientWithIdentifier:(id)arg1;
- (long long)galServiceServerEnvironment;
- (long long)oauthServiceServerChoice;
- (id)clientVersion;
- (id)clientName;
@property(readonly, nonatomic) _Bool enableHelpKitNotifications;
- (_Bool)isGcmEnabled;
- (_Bool)enableWebKitForSSO;
- (_Bool)needsAuthzen;
- (_Bool)needsReauth;
- (_Bool)needsHelpKit;
- (_Bool)enableSSOSFSafari;
- (_Bool)shouldUsePPGTestGAIA;
- (_Bool)shouldUsePlusPages;
- (_Bool)isUnicornCompatible;
- (id)oauthClientId;
- (id)googleRemarketingPingLabel;
- (id)googleConversionPingScreenNameSignIn;
- (id)googleRemarketingPingLabelMusic;
- (id)googleConversionPingScreenNameOpen;
- (id)googleConversionPingValue;
- (id)googleConversionPingLabel;
- (id)googleConversionPingId;
- (id)suggestClientName;
- (_Bool)isTabletSuggestClientEnabled;
- (_Bool)isProtoSuggestEnabled;
- (id)developerKey;
@property(nonatomic) _Bool disableFrequencyCap;
@property(nonatomic) _Bool onlyUploadOverWiFi;
@property(nonatomic) long long uploadQuality;
@property(retain, nonatomic) NSDate *lastSpeedyGPromoDisplayDate;
- (void)setAdultContentConfirmed:(_Bool)arg1;
- (double)secondsBeforeCleaning;
- (_Bool)shouldApplyPlayAsYouBrowseDefaultSetting;
- (void)hotConfigDidChange:(id)arg1;
@property(nonatomic) _Bool playerCuepointVisualizationEnabled;
@property(readonly, nonatomic) _Bool allowRestrictedContentFlow;
@property(nonatomic, getter=hasBackgroundOnboardingHintShown) _Bool backgroundOnboardingHintShown;
@property(readonly, nonatomic) _Bool allowAudioOnlyManualQualitySelection;
@property(nonatomic) long long backgroundability;
@property(nonatomic) long long backgroundPlaybackMode;
- (void)removePlayerViewControllerConfigObserver:(id)arg1;
- (void)addPlayerViewControllerConfigObserver:(id)arg1;
- (_Bool)playerServiceShouldForwardOnResponseReceivedActions;
@property(nonatomic) long long impAutoAdvanceSettingState;
@property(retain, nonatomic) NSDate *lastPlaybackPositionSyncClientDate;
@property(retain, nonatomic) NSNumber *lastPlaybackPositionSyncTimestamp;
@property(retain, nonatomic) NSDate *downloadRecommendationsNextSyncDate;
@property(nonatomic, getter=areDownloadRecommendationsEnabled) _Bool downloadRecommendationsEnabled;
@property(nonatomic) double offlineRefreshInterval;
@property(retain, nonatomic) NSDate *offlineRefreshDate;
@property(nonatomic) int maximumOfflineVideoQuality;
@property(nonatomic) _Bool onlyDownloadOverWiFi;
- (_Bool)isPlayerTransitionOfflineFallbackEligible:(id)arg1;
@property(retain, nonatomic) NSDictionary *googleHelpParameters;
- (unsigned int)persistentEntityStoreCachingEntryLimit;
- (_Bool)enableCachingInPersistentEntityStore;
- (_Bool)enableEntityStoreUpdateSupport;
- (_Bool)enableEntityStoreQuerySupport;
- (unsigned int)maximumErrorLoggingCount;
- (_Bool)enableGELErrorLogging;
- (_Bool)enableMemoryWarningEviction;
- (double)minimumKeepUntilInterval;
- (_Bool)enableEntityStoreEviction;
@property(retain, nonatomic) NSArray *installedYouTubeApps;
@property(retain, nonatomic) NSArray *installedApps;
- (id)drpConfig;
- (id)remarketingConfig;
- (id)ptrackingConfig;
- (id)atrConfig;
- (id)qoeConfig;
- (id)vssConfig;
@property(readonly, nonatomic) _Bool doNotCount;
- (void)setDoNotCount:(_Bool)arg1;
- (double)timeoutInterval;
@property(readonly, nonatomic) _Bool showStatusBarWithOverlay;
- (id)appSettingsSnapshot;
@property(nonatomic) _Bool showViewGestures;
@property(nonatomic) _Bool showButtonTapTargets;
@property(nonatomic) _Bool showViewFrames;
- (_Bool)useAcceptLanguageAndRegion;
- (id)innerTubeRemoteClient;
- (void)appDidIssueCriticalRequest;
@property(copy, nonatomic) NSString *OSVersionOverride;
@property(copy, nonatomic) NSString *innerTubeVersionOverride;
@property(copy, nonatomic) NSString *innerTubeLanguageOverride;
@property(copy, nonatomic) NSString *innerTubeInternalGeoOverride;
- (_Bool)innerTubeEnableSafetyMode;
@property(readonly, nonatomic) int innerTubeClientName;
- (_Bool)isAdultContentConfirmed;
- (id)innerTubeContextualCapabilityMapping;
- (id)innerTubeCapabilityMapping;
- (id)innerTubeExperimentalDataParams;
- (id)innerTubeExperimentsToken;
- (id)innerTubeForcedExperimentFlags;
- (id)innerTubeForcedExperimentIDs;
- (id)innerTubeDeveloperKey;
- (id)innerTubeHostURL;
- (_Bool)isInnerTubePPG;
- (int)innerTubeClientFormFactor;
- (id)firstTimeSignInExperimentID;
- (unsigned long long)maxConcurrentImageRequestsPerHost;
@property(nonatomic) _Bool captionVisibility;
@property(copy, nonatomic) NSString *captionLanguageCode;
- (id)apiaryProjectKey;
- (id)apiaryDeveloperKey;
- (id)apiaryRegistrationURLBase;
- (float)videoBitrateScaleForDownloadDuringPlayback;
- (unsigned long long)minimumExtraBandwidthForDownloadDuringPlayback;
- (_Bool)isDownloadDuringPlaybackEnabled;
@property(readonly, nonatomic) NSString *fairPlayKeyHostOverride;
- (id)streamStoreSubdirectory;
- (unsigned long long)streamStoreSearchPathDirectory;
- (id)streamStoreKey;
@property(readonly, nonatomic) NSArray *notificationTriggers;
@property(readonly, nonatomic) NSArray *notifications;
@property(readonly, nonatomic) long long notificationCounterReferenceID;
@property(readonly, nonatomic) _Bool enableMDXStoryboard;
@property(readonly, nonatomic) _Bool enableMDXLockScreenControls;
@property(readonly, nonatomic) _Bool enableMDXFijiSkippableAd;
@property(readonly, nonatomic) _Bool enableMDXOneCast;
@property(readonly, nonatomic) _Bool enableMDXMemento;
@property(readonly, nonatomic, getter=isAudioCastEnabled) _Bool audioCastEnabled;
- (void)setAdditionalDIALLaunchParameters:(id)arg1;
@property(readonly, nonatomic) NSString *additionalDIALLaunchParameters;
- (void)setEnableCastSDKLogging:(_Bool)arg1;
@property(readonly, nonatomic) _Bool enableCastSDKLogging;
- (void)setMDXSmartRemoteControlsForced:(_Bool)arg1;
@property(readonly, nonatomic) _Bool MDXSmartRemoteControlsForced;
- (void)setDisableMDXDeviceDiscovery:(_Bool)arg1;
@property(readonly, nonatomic) _Bool disableMDXDeviceDiscovery;
@property(readonly, nonatomic) long long MDXLocalTransportType;
- (void)setMDXForcedPromotionElementType:(long long)arg1;
@property(readonly, nonatomic) long long MDXForcedPromotionElementType;
@property(readonly, nonatomic) _Bool enableMDXFiji;
- (void)setMDXServerEnvironment:(long long)arg1;
@property(readonly, nonatomic) long long MDXServerEnvironment;
@property(readonly, nonatomic) YTIMdxGlobalConfig *MDXGlobalConfig;
- (_Bool)isDragDropEnabled;
- (_Bool)isThinSeparatorFlowLayoutEnabled;
- (_Bool)isVideoRefactorFontMedChangeEnabled;
- (_Bool)isVideoRefactorFontLightChangeEnabled;
- (_Bool)isVideoRefactorAvatarChangeEnabled;
- (_Bool)isVideoRefactorMarginsChangeEnabled;
- (_Bool)disablePageLoadController;
- (_Bool)isNotificationsEnabledForDevice;
- (_Bool)isNotificationPermissionsAttempted;
- (void)setInteractionLoggingDebugEnabled:(_Bool)arg1;
- (_Bool)isInteractionLoggingDebugEnabled;
@property(nonatomic) _Bool watchBreakWaitAfterVideoEnds;
@property(nonatomic) long long watchBreakFrequencyMinutes;
@property(nonatomic) _Bool watchBreakEnabled;
- (void)setDoubleTapSeekDuration:(long long)arg1;
@property(readonly, nonatomic) long long doubleTapSeekDuration;
- (void)setDebugCompleteServerURL:(id)arg1;
- (id)debugCompleteServerURL;
@property(nonatomic, getter=isOfflineAVFoundationEnabled) _Bool offlineAVFoundationEnabled;
@property(nonatomic) long long animatedPreviewsSetting;
@property(nonatomic) long long playAsYouBrowseSettingState;
@property(nonatomic) int persistentVideoQualityWifi;
@property(nonatomic) int persistentVideoQualityMobile;
@property(nonatomic) _Bool disableHDOnCellular;
- (void)setNerdStatsEnabled:(_Bool)arg1;
@property(readonly, nonatomic, getter=isNerdStatsEnabled) _Bool nerdStatsEnabled;
@property(nonatomic) _Bool hasShownVRWelcomeScreen;
@property(nonatomic, getter=isForceNavEndpointClick) _Bool forceNavEndpointClick;
@property(copy, nonatomic) NSString *flexGenServerURL;
@property(nonatomic, getter=isFPSWatchdogEnabled) _Bool FPSWatchdogEnabled;
@property(nonatomic, getter=isFPSStatusBarEnabled) _Bool FPSStatusBarEnabled;
@property(readonly, nonatomic, getter=isHelpkitChatEnabled) _Bool helpkitChatEnabled;
@property(nonatomic, getter=isWebMEnabled) _Bool webMEnabled;
@property(nonatomic) long long forcedMediaPlayerType;
@property(copy, nonatomic) NSNumber *forcedPromoInterval;
@property(copy, nonatomic) NSString *vixSnapshotId;
@property(nonatomic) long long forcedPromoIDRequests;
@property(copy, nonatomic) NSString *forcedPromoID;
@property(copy, nonatomic) NSArray *customExperimentIDs;
- (void)setCustomExperimentsToken:(id)arg1;
- (id)customExperimentsToken;
@property(nonatomic, getter=areOfflineAdFrequencyCapsIgnored) _Bool offlineAdFrequencyCapsIgnored;
@property(retain, nonatomic) NSDate *offlinePlaylistSyncDate;
@property(nonatomic, getter=isOfflinePlaylistSyncFast) _Bool offlinePlaylistSyncFast;
@property(nonatomic) _Bool offlineHamplayerDownloadsDisabled;
@property(nonatomic, getter=isOfflineRefreshFast) _Bool offlineRefreshFast;
@property(nonatomic) _Bool fullscreenPlaybackOnExternalScreenEnabled;
@property(nonatomic) _Bool hasShownOverlayAutonavToggle;
@property(nonatomic) int autonavSettingsState;
@property(nonatomic) long long appThemeSetting;
@property(retain, nonatomic) NSDate *promotedItemLastClosedTime;
@property(nonatomic) _Bool snapZoomZoomedByDefault;
@property(nonatomic, getter=isHintsDateThrottleDisabled) _Bool hintsDateThrottleDisabled;
@property(nonatomic, getter=areHintsDisabled) _Bool hintsDisabled;
@property(nonatomic) _Bool searchHistoryPaused;
@property(nonatomic) _Bool watchHistoryPaused;
@property(nonatomic) _Bool shouldShowAppStartupReasonDialog;
@property(nonatomic) _Bool shouldSendCrashReports;
@property(nonatomic, getter=isOfflineConfirmRemoveDisabled) _Bool offlineConfirmRemoveDisabled;
@property(nonatomic, getter=isWelcomeDismissed) _Bool welcomeDismissed;
- (id)deviceInstallationID;
- (void)setIncognitoTimeOutDebugEnabled:(_Bool)arg1;
- (_Bool)incognitoTimeOutDebugEnabled;
@property(nonatomic) _Bool alwaysShowRetroactiveSignIn;
@property(nonatomic) _Bool alwaysShowFirstSignIn;
- (id)innerTubeURLHost;
@property(copy, nonatomic) NSString *PPGBaseURL;
@property(nonatomic) long long serverEnvironment;
@property(copy, nonatomic) NSString *contentRegion;
- (void)tearDown;
- (void)initUserDefaultsFromHotConfig:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic, getter=isMDXVerboseLoggingEnabled) _Bool MDXVerboseLoggingEnabled;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool enableMDXAutoplay;
@property(readonly, nonatomic) _Bool enableMDXQueue;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool initialFormatAudioOnly;
@property(readonly, nonatomic) MLAudioQualityConfig *initialFormatAudioQualityConfig;
@property(readonly, nonatomic) _Bool killDRMLicenseChecker;
@property(nonatomic) long long liveCaptionTrackChannel;
@property(nonatomic) int maximumOfflineAudioQuality;
@property(readonly, nonatomic) long long playerEngagementControlsLayout;
@property(nonatomic) _Bool resetLiveVideoSavedMediaTime;
@property(readonly, nonatomic) _Bool shouldResetAudioSessionCategoryWhenPlaybackStops;
@property(readonly) Class superclass;

@end

