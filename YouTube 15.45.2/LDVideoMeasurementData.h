//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/LDMeasurementData.h>

@class LDImpressionBitVectors, LDPerSecondMetric, LDTimeAccumulator, LDTimeBuckets, NSArray;

@interface LDVideoMeasurementData : LDMeasurementData
{
    LDTimeAccumulator *_playTime;
    LDTimeAccumulator *_audibleTime;
    LDTimeAccumulator *_audibleViewableTime;
    LDTimeAccumulator *_viewableTime;
    LDTimeBuckets *_audibleTimeOnScreen;
    _Bool _midpointReached;
    int _duration;
    int _timeOnScreenDeltaNumber;
    int _fullscreenTime;
    int _fullscreenTimeDelta;
    double _averageViewabilityPercentage;
    double _minimumVolume;
    double _maximumVolume;
    LDImpressionBitVectors *_impressionBitVectors;
    LDPerSecondMetric *_perSecondViewable;
    LDPerSecondMetric *_perSecondFullyViewable;
    LDPerSecondMetric *_perSecondAudible;
}

- (void).cxx_destruct;
@property(retain, nonatomic) LDPerSecondMetric *perSecondAudible; // @synthesize perSecondAudible=_perSecondAudible;
@property(retain, nonatomic) LDPerSecondMetric *perSecondFullyViewable; // @synthesize perSecondFullyViewable=_perSecondFullyViewable;
@property(retain, nonatomic) LDPerSecondMetric *perSecondViewable; // @synthesize perSecondViewable=_perSecondViewable;
@property(retain, nonatomic) LDImpressionBitVectors *impressionBitVectors; // @synthesize impressionBitVectors=_impressionBitVectors;
@property(nonatomic) double maximumVolume; // @synthesize maximumVolume=_maximumVolume;
@property(nonatomic) double minimumVolume; // @synthesize minimumVolume=_minimumVolume;
@property(readonly, nonatomic) double averageViewabilityPercentage; // @synthesize averageViewabilityPercentage=_averageViewabilityPercentage;
@property(readonly, nonatomic) int fullscreenTimeDelta; // @synthesize fullscreenTimeDelta=_fullscreenTimeDelta;
@property(nonatomic) int fullscreenTime; // @synthesize fullscreenTime=_fullscreenTime;
@property(readonly, nonatomic) int timeOnScreenDeltaNumber; // @synthesize timeOnScreenDeltaNumber=_timeOnScreenDeltaNumber;
@property(nonatomic) _Bool midpointReached; // @synthesize midpointReached=_midpointReached;
@property(nonatomic) int duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) int audibleFullyVisibleTimeDelta;
@property(readonly, nonatomic) int audibleVisibleTimeDelta;
@property(readonly, nonatomic) int fullyVisibleTimeDelta;
@property(readonly, nonatomic) int visibleTimeDelta;
@property(readonly, nonatomic) NSArray *audibleTimeOnScreen;
- (int)audibleTime;
- (int)getTotalPlayTimeMs;
- (_Bool)pmxViewable;
- (_Bool)isAudible:(double)arg1;
- (_Bool)isFullyVisible:(double)arg1;
- (_Bool)isVisible:(double)arg1;
- (int)getPerSecondAudible;
- (int)getPerSecondFullyViewable;
- (int)getPerSecondViewable;
- (int)getPerSecondMeasurable;
- (void)updatePerSecondMetrics:(double)arg1 volume:(double)arg2 mediaTime:(long long)arg3;
- (void)updateImpressionsStateBitVectors:(double)arg1 volume:(double)arg2 fullscreen:(_Bool)arg3;
- (_Bool)groupMDurationReached:(int)arg1;
- (_Bool)groupMDurationReached;
- (_Bool)groupMViewed;
- (_Bool)viewed;
@property(readonly, nonatomic) _Bool alwaysAudible;
- (void)updateTimeBasedMetrics:(int)arg1 coverage:(double)arg2 volume:(double)arg3 lastVolume:(double)arg4 fullscreen:(_Bool)arg5 pauseMonitoring:(_Bool)arg6;
- (void)resetAudibleVisibleTimeDeltas;
- (int)resetAudibleViewableTimeDelta;
- (int)resetPlayTimeDelta;
- (int)resetAudibleTimeDelta;
- (int)resetFullscreenTimeDelta;
- (void)resetVisibleTimeDeltas;
- (int)resetTimeOnScreenDelta;
- (int)incrementTimeOnScreenDeltaNumber;
- (void)update:(int)arg1 coverage:(double)arg2 volume:(double)arg3 lastVolume:(double)arg4 fullscreen:(_Bool)arg5 pauseMonitoring:(_Bool)arg6 mediaTime:(long long)arg7 screenShare:(double)arg8;
- (id)init;

@end

