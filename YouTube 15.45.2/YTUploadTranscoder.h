//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/YTUploadTranscoder-Protocol.h>

@class AVAssetReader, AVAssetWriter, AVAssetWriterInputPixelBufferAdaptor, NSCondition, NSString, YTUploadComposition, YTUploadEditInstructions;
@protocol OS_dispatch_queue, YTUploadTranscodeConfig, YTUploadTranscodeFrameOperation, YTUploadTranscoderDelegate;

@interface YTUploadTranscoder : NSObject <YTUploadTranscoder>
{
    YTUploadComposition *_uploadComposition;
    long long _transcodeState;
    id <YTUploadTranscodeConfig> _transcodeConfig;
    YTUploadEditInstructions *_editInstructions;
    CDUnknownBlockType _completionBlock;
    AVAssetWriterInputPixelBufferAdaptor *_pixelAdaptor;
    CDStruct_1b6d18a9 _processedVideoUpToTime;
    NSCondition *_pauseCondition;
    id <YTUploadTranscodeFrameOperation> _frameOperation;
    unsigned long long _cancellationReason;
    long long _uploadQuality;
    long long _bitrateOptimization;
    long long _uploadScaleMode;
    id <YTUploadTranscoderDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_processingQueue;
    AVAssetWriter *_writer;
    AVAssetReader *_reader;
    unsigned long long _backgroundTaskIdentifier;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain, nonatomic) AVAssetReader *reader; // @synthesize reader=_reader;
@property(retain, nonatomic) AVAssetWriter *writer; // @synthesize writer=_writer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *processingQueue; // @synthesize processingQueue=_processingQueue;
@property(nonatomic) __weak id <YTUploadTranscoderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long uploadScaleMode; // @synthesize uploadScaleMode=_uploadScaleMode;
@property(nonatomic) long long bitrateOptimization; // @synthesize bitrateOptimization=_bitrateOptimization;
@property(nonatomic) long long uploadQuality; // @synthesize uploadQuality=_uploadQuality;
- (void)notifyProgressUpdate:(float)arg1;
- (unsigned long long)bytesRequiredForTranscodingAVAsset:(id)arg1;
- (_Bool)hasSpaceToTranscodeAssetWithSize:(unsigned long long)arg1;
- (void)finishTranscodeWithError:(id)arg1;
- (void)finishTranscodeWithErrorCode:(long long)arg1 underlyingError:(id)arg2;
- (void)finishTranscodeWithErrorCode:(long long)arg1;
- (void)finishTranscode;
- (_Bool)useHEVCCodecForTrack:(id)arg1;
- (void)configureVideoSettingsForHEVC:(id)arg1 bitrate:(id)arg2;
- (void)configureVideoSettingsForH264:(id)arg1 bitrate:(id)arg2;
- (id)videoSettingsForTrack:(id)arg1 frameSize:(struct CGSize)arg2;
- (double)percentCompleted;
- (void)deleteTranscodeIfNeeded;
- (void)handleWriterFailure;
- (void)finishWriting;
- (void)finishTranscodeIfReady;
- (void)endInput:(id)arg1;
- (long long)cancellationErrorCode;
- (void)copyReaderOutput:(id)arg1 intoInput:(id)arg2;
- (_Bool)setupVideoTracks:(id)arg1 videoComposition:(id)arg2 frameSize:(struct CGSize)arg3;
- (_Bool)setupAudioTracks:(id)arg1 withAudioMix:(id)arg2 audioTimePitchAlgorithm:(id)arg3;
- (_Bool)setUpReaderAndWriterForAsset:(id)arg1 videoComposition:(id)arg2 frameSize:(struct CGSize)arg3 audioMix:(id)arg4 audioTimePitchAlgorithm:(id)arg5 error:(id *)arg6;
- (void)endBackgroundTask;
- (void)createBackgroundTask;
- (void)beginTranscodeWithComposition:(id)arg1;
- (_Bool)shouldProcessFrames;
- (_Bool)isSkippable;
- (void)transcodeAssetWithCompletion:(CDUnknownBlockType)arg1;
- (void)cancelTranscodeWithReason:(unsigned long long)arg1;
- (void)cancel;
- (_Bool)isPaused;
- (_Bool)isReady;
- (void)resume;
- (void)pause;
- (void)dealloc;
- (id)initWithUploadComposition:(id)arg1 transcodeConfig:(id)arg2 frameOperation:(id)arg3 editInstructions:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

