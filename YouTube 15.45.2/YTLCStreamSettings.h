//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSNumber, YTLCVideoIngestionSettings;

@interface YTLCStreamSettings : NSObject
{
    long long _streamOrientation;
    _Bool _adaptiveBitrateEnabled;
    _Bool _webRTCUseBitrateAdjuster;
    _Bool _webRTCUseLevel4;
    _Bool _webRTCDisableFrameDropper;
    _Bool _webRTC1080;
    int _measurementDelaySeconds;
    int _settlementDelaySeconds;
    int _increaseDeltaSeconds;
    float _webRTCH264DataRateLimit;
    int _webRTCInitialBandwidth;
    int _audioChannelCount;
    int _audioBitrate;
    unsigned long long _protocol;
    long long _qualityLevel;
    YTLCVideoIngestionSettings *_videoIngestionSettings;
    NSNumber *_webRTCBandwidthEstimatorWindowSizeInPackets;
    NSNumber *_webRTCBandwidthEstimatorBackoffFactor;
    NSArray *_webRTCVideoCodecPreferences;
    long long _streamType;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool webRTC1080; // @synthesize webRTC1080=_webRTC1080;
@property(nonatomic) long long streamType; // @synthesize streamType=_streamType;
@property(nonatomic) int audioBitrate; // @synthesize audioBitrate=_audioBitrate;
@property(nonatomic) int audioChannelCount; // @synthesize audioChannelCount=_audioChannelCount;
@property(nonatomic) int webRTCInitialBandwidth; // @synthesize webRTCInitialBandwidth=_webRTCInitialBandwidth;
@property(nonatomic) _Bool webRTCDisableFrameDropper; // @synthesize webRTCDisableFrameDropper=_webRTCDisableFrameDropper;
@property(nonatomic) float webRTCH264DataRateLimit; // @synthesize webRTCH264DataRateLimit=_webRTCH264DataRateLimit;
@property(nonatomic) _Bool webRTCUseLevel4; // @synthesize webRTCUseLevel4=_webRTCUseLevel4;
@property(nonatomic) _Bool webRTCUseBitrateAdjuster; // @synthesize webRTCUseBitrateAdjuster=_webRTCUseBitrateAdjuster;
@property(retain, nonatomic) NSArray *webRTCVideoCodecPreferences; // @synthesize webRTCVideoCodecPreferences=_webRTCVideoCodecPreferences;
@property(retain, nonatomic) NSNumber *webRTCBandwidthEstimatorBackoffFactor; // @synthesize webRTCBandwidthEstimatorBackoffFactor=_webRTCBandwidthEstimatorBackoffFactor;
@property(retain, nonatomic) NSNumber *webRTCBandwidthEstimatorWindowSizeInPackets; // @synthesize webRTCBandwidthEstimatorWindowSizeInPackets=_webRTCBandwidthEstimatorWindowSizeInPackets;
@property(nonatomic) int increaseDeltaSeconds; // @synthesize increaseDeltaSeconds=_increaseDeltaSeconds;
@property(nonatomic) int settlementDelaySeconds; // @synthesize settlementDelaySeconds=_settlementDelaySeconds;
@property(nonatomic) int measurementDelaySeconds; // @synthesize measurementDelaySeconds=_measurementDelaySeconds;
@property(nonatomic, getter=isAdaptiveBitrateEnabled) _Bool adaptiveBitrateEnabled; // @synthesize adaptiveBitrateEnabled=_adaptiveBitrateEnabled;
@property(readonly, copy, nonatomic) YTLCVideoIngestionSettings *videoIngestionSettings; // @synthesize videoIngestionSettings=_videoIngestionSettings;
@property(nonatomic) long long qualityLevel; // @synthesize qualityLevel=_qualityLevel;
@property(nonatomic) unsigned long long protocol; // @synthesize protocol=_protocol;
- (int)webRTCStartingBitrateForConnectionType:(int)arg1;
- (long long)streamOrientationForInterfaceOrientation:(long long)arg1;
- (id)videoIngestionSettingsForQualityLevel:(long long)arg1 orientation:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (int)maximumABRIncreaseDeltaSupportedSeconds;
- (int)minimumABRIncreaseDeltaSupportedSeconds;
- (int)maxmimumABRSettlementDelaySupportedSeconds;
- (int)minimumABRSettlementDelaySupportedSeconds;
- (int)maximumABRMeasurementDelaySupportedSeconds;
- (int)minimumABRMeasurementDelaySupportedSeconds;
- (int)maximumBitrateSupported;
- (long long)defaultQualityLevelForConnectionType:(int)arg1;
- (_Bool)isScreencast;
- (long long)maximumQualityLevelForBitrate:(int)arg1 minQualityLevel:(long long)arg2;
- (int)bitrateForQualityLevel:(long long)arg1;
- (struct CGSize)resolutionForQualityLevel:(long long)arg1;
- (void)resetVideoIngestionSettingsForQualityLevel:(long long)arg1 connectionType:(int)arg2 orientation:(long long)arg3 protocol:(unsigned long long)arg4;
- (void)resetVideoIngestionSettingsForConnectionType:(int)arg1 orientation:(long long)arg2 protocol:(unsigned long long)arg3;
- (id)init;

@end

