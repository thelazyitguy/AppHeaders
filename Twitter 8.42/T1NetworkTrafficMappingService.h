//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <T1Twitter/TNLHostSanitizer-Protocol.h>
#import <T1Twitter/TNLNetworkObserver-Protocol.h>

@class NSDate, NSDictionary, NSMutableArray, NSSet, NSString, T1NetworkTrafficMappingServicePollingTask, TFSTimer, TFSTwitterAPICommandService, TFSTwitterRecurringTaskService, TFSTwitterTrafficMapModel, TNUTransactionMetrics;
@protocol OS_dispatch_queue, T1NetworkTrafficMappingServiceDelegate, TFSTwitterAPICommandCancellable, TFSTwitterAPICommandContext;

@interface T1NetworkTrafficMappingService : NSObject <TNLNetworkObserver, TNLHostSanitizer>
{
    NSString *_persistenceIdentifier;
    _Bool _didAttemptPersistenceLoad;
    _Bool _didRegisterPollingTask;
    NSSet *_unmappablePaths;
    NSString *_accountID;
    NSString *_configurationKey;
    NSString *_configurationValue;
    NSDate *_lastProbingDate;
    NSDate *_nextPollingDate;
    TFSTimer *_pollingTimer;
    TFSTwitterTrafficMapModel *_pollingResult;
    NSDictionary *_activeHostMap;
    NSDictionary *_latestReverseHostMap;
    _Bool _valid;
    unsigned long long _timeoutsSeen;
    T1NetworkTrafficMappingServicePollingTask *_pollingTask;
    NSMutableArray *_probingOperations;
    NSMutableArray *_validationOperations;
    TNUTransactionMetrics *_probingCNOE;
    id <TFSTwitterAPICommandCancellable> _requestBeaconListOperation;
    TFSTwitterAPICommandService *_commandService;
    id <TFSTwitterAPICommandContext> _commandContext;
    TFSTwitterRecurringTaskService *_recurringTaskService;
    id <T1NetworkTrafficMappingServiceDelegate> _delegate;
    unsigned long long _maxTimeoutsForTrafficMapping;
    unsigned long long _maxProbesPerSession;
    double _probeThrottleTimeInterval;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_probingRandomizationString;
}

- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *probingRandomizationString; // @synthesize probingRandomizationString=_probingRandomizationString;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property double probeThrottleTimeInterval; // @synthesize probeThrottleTimeInterval=_probeThrottleTimeInterval;
@property unsigned long long maxProbesPerSession; // @synthesize maxProbesPerSession=_maxProbesPerSession;
@property unsigned long long maxTimeoutsForTrafficMapping; // @synthesize maxTimeoutsForTrafficMapping=_maxTimeoutsForTrafficMapping;
- (void)_t1_queue_invalidHit;
- (void)_t1_queue_discardHit;
- (void)_t1_queue_purgeHit;
- (void)_t1_queue_clearHit;
- (void)_t1_queue_applyHit;
- (void)tnl_requestOperation:(id)arg1 didCompleteWithResponse:(id)arg2;
- (void)_t1_queue_updateNetworkObserver:(_Bool)arg1;
- (void)tnl_host:(id)arg1 wasEncounteredForURLRequest:(id)arg2 asRedirect:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_t1_queue_persistMapping;
- (_Bool)_t1_queue_tryResumingFromPersistenceWithConfigurationKey:(id)arg1 configurationValue:(id)arg2;
- (void)clearPersistenceWithIdentifier:(id)arg1;
- (void)clearPersistence;
- (void)_t1_queue_failbackWithError:(id)arg1 forURL:(id)arg2;
- (void)_t1_queue_handleOperationError:(id)arg1 forURL:(id)arg2;
- (void)_t1_queue_handleServerError:(long long)arg1 forURL:(id)arg2;
- (void)_t1_queue_updateRemapping:(id)arg1;
- (_Bool)_t1_queue_touchRemapping;
- (void)_t1_queue_tearDownRemapping;
- (id)unmappedHostForHost:(id)arg1;
- (_Bool)_t1_queue_wasMappedHost:(id)arg1;
- (void)_t1_queue_validationDidComplete:(_Bool)arg1;
- (void)_t1_queue_validationOperation:(id)arg1 didCompleteWithResponse:(id)arg2;
- (void)_t1_queue_startValidating;
- (void)_t1_queue_throttleProbe;
- (void)_t1_queue_capturedProbeMetrics:(id)arg1;
- (void)_t1_queue_probingOperation:(id)arg1 didCompleteWithResponse:(id)arg2;
- (void)_t1_queue_fireProbes;
- (_Bool)_t1_queue_isProbeThrottled;
- (void)_t1_queue_fireProbesWithURLStrings:(id)arg1;
- (void)_t1_queue_completeRequestBeaconList:(id)arg1 error:(id)arg2;
- (void)_t1_queue_requestBeaconList;
- (void)resetLastProbingDate;
- (void)queue_completePollingWithResult:(id)arg1 error:(id)arg2 fromPersistence:(_Bool)arg3;
- (void)_t1_queue_firePolling;
- (void)_t1_queue_tearDownPolling;
- (void)_t1_queue_resetPolling;
- (void)_t1_queue_updateNextPollingDateWithMinimumPollingInterval:(double)arg1;
- (void)_t1_queue_registerRecurringTaskIfNecessary;
- (void)_t1_queue_suspend:(_Bool)arg1;
- (void)_t1_queue_resumeWithConfigurationKey:(id)arg1 configurationValue:(id)arg2 accountID:(id)arg3;
@property(readonly, getter=isSuspended) _Bool suspended;
- (void)updateWithConfigurationKey:(id)arg1 configurationValue:(id)arg2 accountID:(id)arg3;
- (void)suspend;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (id)initWithDelegate:(id)arg1 probingRandomizationString:(id)arg2 apiCommandService:(id)arg3 apiCommandContext:(id)arg4 recurringTaskService:(id)arg5;
- (void)dealloc;
@property(copy) NSSet *unmappablePaths;
@property(copy) NSString *persistenceIdentifier;
@property __weak id <T1NetworkTrafficMappingServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TFSTwitterRecurringTaskService *recurringTaskService; // @synthesize recurringTaskService=_recurringTaskService;
@property(readonly, nonatomic) id <TFSTwitterAPICommandContext> commandContext; // @synthesize commandContext=_commandContext;
@property(readonly, nonatomic) TFSTwitterAPICommandService *commandService; // @synthesize commandService=_commandService;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

