//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TwitterAVCore/TAVAnalyticsEvent.h>

#import <TwitterAVCore/TAVAnalyticsEventWithScribeParameters-Protocol.h>
#import <TwitterAVCore/TAVAnalyticsPromotedEvent-Protocol.h>

@class NSNumber, NSString, TAVAnalyticsCumulativeTimeHistogram, TAVAnalyticsSessionState;
@protocol TAVPlaylistItemKey;

@interface TAVAnalyticsEventVVRSession : TAVAnalyticsEvent <TAVAnalyticsEventWithScribeParameters, TAVAnalyticsPromotedEvent>
{
    double _timeWatched;
    double _timeWatched25;
    double _timeWatched50;
    double _timeWatched75;
    double _timeWatched100;
    double _timeWatchedFullscreen;
    double _timeWatchedWithAudio;
    double _timeWatched100WithAudio;
    double _timeWatchedFullScreenWithAudio;
    double _videoLength;
    NSNumber *_videoTimeTo2Sec;
    NSNumber *_videoTimeToStart;
    TAVAnalyticsCumulativeTimeHistogram *_watchedTimeByVisibilityPercentage;
    TAVAnalyticsCumulativeTimeHistogram *_watchedTimeWithAudioByVisibilityPercentage;
    TAVAnalyticsCumulativeTimeHistogram *_watchedTimeByWindowPercentage;
    TAVAnalyticsCumulativeTimeHistogram *_maxContinuousWatchedTimeByVisibilityPercentage;
    TAVAnalyticsCumulativeTimeHistogram *_maxContinuousWatchedTimeWithAudioByVisibilityPercentage;
    double _screenScale;
    struct CGSize _initialPlayerViewSize;
    struct CGSize _initialViewportSize;
}

+ (id)private_valueKeys;
+ (id)promotedEventNameForContent;
+ (id)promotedEventNameForAd;
- (void).cxx_destruct;
@property(readonly, nonatomic) double screenScale; // @synthesize screenScale=_screenScale;
@property(readonly, nonatomic) struct CGSize initialViewportSize; // @synthesize initialViewportSize=_initialViewportSize;
@property(readonly, nonatomic) struct CGSize initialPlayerViewSize; // @synthesize initialPlayerViewSize=_initialPlayerViewSize;
@property(retain, nonatomic) TAVAnalyticsCumulativeTimeHistogram *maxContinuousWatchedTimeWithAudioByVisibilityPercentage; // @synthesize maxContinuousWatchedTimeWithAudioByVisibilityPercentage=_maxContinuousWatchedTimeWithAudioByVisibilityPercentage;
@property(retain, nonatomic) TAVAnalyticsCumulativeTimeHistogram *maxContinuousWatchedTimeByVisibilityPercentage; // @synthesize maxContinuousWatchedTimeByVisibilityPercentage=_maxContinuousWatchedTimeByVisibilityPercentage;
@property(retain, nonatomic) TAVAnalyticsCumulativeTimeHistogram *watchedTimeByWindowPercentage; // @synthesize watchedTimeByWindowPercentage=_watchedTimeByWindowPercentage;
@property(retain, nonatomic) TAVAnalyticsCumulativeTimeHistogram *watchedTimeWithAudioByVisibilityPercentage; // @synthesize watchedTimeWithAudioByVisibilityPercentage=_watchedTimeWithAudioByVisibilityPercentage;
@property(retain, nonatomic) TAVAnalyticsCumulativeTimeHistogram *watchedTimeByVisibilityPercentage; // @synthesize watchedTimeByVisibilityPercentage=_watchedTimeByVisibilityPercentage;
@property(readonly, nonatomic) NSNumber *videoTimeToStart; // @synthesize videoTimeToStart=_videoTimeToStart;
@property(readonly, nonatomic) NSNumber *videoTimeTo2Sec; // @synthesize videoTimeTo2Sec=_videoTimeTo2Sec;
@property(readonly, nonatomic) double videoLength; // @synthesize videoLength=_videoLength;
@property(readonly, nonatomic) double timeWatchedFullScreenWithAudio; // @synthesize timeWatchedFullScreenWithAudio=_timeWatchedFullScreenWithAudio;
@property(readonly, nonatomic) double timeWatched100WithAudio; // @synthesize timeWatched100WithAudio=_timeWatched100WithAudio;
@property(readonly, nonatomic) double timeWatchedWithAudio; // @synthesize timeWatchedWithAudio=_timeWatchedWithAudio;
@property(readonly, nonatomic) double timeWatchedFullscreen; // @synthesize timeWatchedFullscreen=_timeWatchedFullscreen;
@property(readonly, nonatomic) double timeWatched100; // @synthesize timeWatched100=_timeWatched100;
@property(readonly, nonatomic) double timeWatched75; // @synthesize timeWatched75=_timeWatched75;
@property(readonly, nonatomic) double timeWatched50; // @synthesize timeWatched50=_timeWatched50;
@property(readonly, nonatomic) double timeWatched25; // @synthesize timeWatched25=_timeWatched25;
@property(readonly, nonatomic) double timeWatched; // @synthesize timeWatched=_timeWatched;
- (id)initWithAnalyticsSessionState:(id)arg1 timeWatched:(double)arg2 timeWatched25:(double)arg3 timeWatched50:(double)arg4 timeWatched75:(double)arg5 timeWatched100:(double)arg6 timeWatchedFullscreen:(double)arg7 timeWatchedWithAudio:(double)arg8 timeWatched100WithAudio:(double)arg9 timeWatchedFullScreenWithAudio:(double)arg10 videoLength:(double)arg11 videoTimeTo2Sec:(id)arg12 videoTimeToStart:(id)arg13 watchedTimeByVisibilityPercentage:(id)arg14 watchedTimeWithAudioByVisibilityPercentage:(id)arg15 watchedTimeByWindowPercentage:(id)arg16 maxContinuousWatchedTimeByVisibilityPercentage:(id)arg17 maxContinuousWatchedTimeWithAudioByVisibilityPercentage:(id)arg18 initialPlayerViewSize:(struct CGSize)arg19 initialViewportSize:(struct CGSize)arg20 screenScale:(double)arg21;
- (id)initWithPlaylistItemKey:(id)arg1 analyticsSessionState:(id)arg2 timeWatched:(double)arg3 timeWatched25:(double)arg4 timeWatched50:(double)arg5 timeWatched75:(double)arg6 timeWatched100:(double)arg7 timeWatchedFullscreen:(double)arg8 timeWatchedWithAudio:(double)arg9 timeWatched100WithAudio:(double)arg10 timeWatchedFullScreenWithAudio:(double)arg11 videoLength:(double)arg12 videoTimeTo2Sec:(id)arg13 videoTimeToStart:(id)arg14 watchedTimeByVisibilityPercentage:(id)arg15 watchedTimeWithAudioByVisibilityPercentage:(id)arg16 watchedTimeByWindowPercentage:(id)arg17 maxContinuousWatchedTimeByVisibilityPercentage:(id)arg18 maxContinuousWatchedTimeWithAudioByVisibilityPercentage:(id)arg19 initialPlayerViewSize:(struct CGSize)arg20 initialViewportSize:(struct CGSize)arg21 screenScale:(double)arg22;
- (struct CGSize)_tav_scaledSizeForSize:(struct CGSize)arg1 screenScale:(double)arg2;
- (id)_tav_sizesInfoAtTheStartForSizesInfoAtStart:(id)arg1;
- (id)_tav_cumulativeTimeHistogram:(id)arg1;
- (void)updateScribeParameters:(id)arg1;

// Remaining properties
@property(readonly, copy, nonatomic) TAVAnalyticsSessionState *analyticsSessionState;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) id <TAVPlaylistItemKey> playlistItemKey;
@property(readonly) Class superclass;

@end

