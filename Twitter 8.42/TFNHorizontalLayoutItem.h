//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TFNUI/TFNStackLayoutItem.h>

@class TFNHorizontalLayout, TFNStackLayout;

@interface TFNHorizontalLayoutItem : TFNStackLayoutItem
{
    TFNStackLayout *_representedLayout;
    long long _widthPriority;
    double _minimumWidth;
    long long _centeredVerticallyOnItemIdentifier;
    TFNHorizontalLayout *_layout;
    TFNHorizontalLayoutItem *_previousItem;
    TFNHorizontalLayoutItem *_nextItem;
    double _heightAboveVerticalAlignmentBaseline;
    double _allocatedWidth;
    double _trailingSpace;
    struct CGRect _frame;
}

- (void).cxx_destruct;
@property(nonatomic) double trailingSpace; // @synthesize trailingSpace=_trailingSpace;
@property(nonatomic) double allocatedWidth; // @synthesize allocatedWidth=_allocatedWidth;
@property(nonatomic) double heightAboveVerticalAlignmentBaseline; // @synthesize heightAboveVerticalAlignmentBaseline=_heightAboveVerticalAlignmentBaseline;
@property(nonatomic) __weak TFNHorizontalLayoutItem *nextItem; // @synthesize nextItem=_nextItem;
@property(nonatomic) __weak TFNHorizontalLayoutItem *previousItem; // @synthesize previousItem=_previousItem;
@property(readonly, nonatomic) __weak TFNHorizontalLayout *layout; // @synthesize layout=_layout;
@property(nonatomic) long long centeredVerticallyOnItemIdentifier; // @synthesize centeredVerticallyOnItemIdentifier=_centeredVerticallyOnItemIdentifier;
@property(nonatomic) double minimumWidth; // @synthesize minimumWidth=_minimumWidth;
@property(nonatomic) long long widthPriority; // @synthesize widthPriority=_widthPriority;
@property(retain, nonatomic) TFNStackLayout *representedLayout; // @synthesize representedLayout=_representedLayout;
- (void)invalidateLayout;
@property(readonly, nonatomic) TFNHorizontalLayoutItem *nextVisibleItem;
@property(readonly, nonatomic) TFNHorizontalLayoutItem *previousVisibleItem;
- (void)setAdditionalEdgeInsets:(struct UIEdgeInsets)arg1;
- (void)setBaselineEdgeInsets:(struct UIEdgeInsets)arg1;
- (void)setTopContentInset:(double)arg1;
- (void)setIntrinsicContentSize:(struct CGSize)arg1;
@property(readonly, nonatomic) _Bool hasAllocatedWidth;
- (_Bool)isVisible;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
- (id)initWithItemIdentifier:(long long)arg1 layout:(id)arg2;

@end

