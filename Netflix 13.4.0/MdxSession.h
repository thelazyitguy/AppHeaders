//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/MdxConnectionDelegate-Protocol.h>

@class MdxIntentTracker, NSDate, NSError, NSNumber, NSString, NflxTimer;
@protocol MdxConnection, MdxDevice, MdxSessionDelegate, NativeMdxCryptoContext, OS_dispatch_queue;

@interface MdxSession : NSObject <MdxConnectionDelegate>
{
    _Bool _allowRegpair;
    _Bool _supportsEndAck;
    _Bool _tvuiRestarting;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    id <MdxDevice> _device;
    id <MdxConnection> _connection;
    id <MdxSessionDelegate> _delegate;
    id <NativeMdxCryptoContext> _mslContext;
    CDUnknownBlockType _connectToAppCallback;
    NSError *_lastError;
    NSDate *_handshakeSent;
    NSString *_controllerSharedSecret;
    NSString *_controllerUserId;
    NSString *_controllerUuid;
    NSString *_targetUserId;
    NSString *_targetUuid;
    NSString *_sessionId;
    NflxTimer *_sessionTimer;
    NSNumber *_playTimerHandle;
    NSNumber *_pairingTimeoutHandle;
    NSNumber *_targetRestartingTimeoutHandle;
    MdxIntentTracker *_mdxIntentTracker;
    shared_ptr_1dc51f47 _encoderFactory;
    map_c1878a98 _secretContexts;
}

+ (long long)nonce;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) _Bool tvuiRestarting; // @synthesize tvuiRestarting=_tvuiRestarting;
@property(retain, nonatomic) MdxIntentTracker *mdxIntentTracker; // @synthesize mdxIntentTracker=_mdxIntentTracker;
@property(retain, nonatomic) NSNumber *targetRestartingTimeoutHandle; // @synthesize targetRestartingTimeoutHandle=_targetRestartingTimeoutHandle;
@property(retain, nonatomic) NSNumber *pairingTimeoutHandle; // @synthesize pairingTimeoutHandle=_pairingTimeoutHandle;
@property(retain, nonatomic) NSNumber *playTimerHandle; // @synthesize playTimerHandle=_playTimerHandle;
@property(retain, nonatomic) NflxTimer *sessionTimer; // @synthesize sessionTimer=_sessionTimer;
@property(nonatomic) shared_ptr_1dc51f47 encoderFactory; // @synthesize encoderFactory=_encoderFactory;
@property(nonatomic) map_c1878a98 secretContexts; // @synthesize secretContexts=_secretContexts;
@property(nonatomic) _Bool supportsEndAck; // @synthesize supportsEndAck=_supportsEndAck;
@property(retain, nonatomic) NSString *sessionId; // @synthesize sessionId=_sessionId;
@property(retain, nonatomic) NSString *targetUuid; // @synthesize targetUuid=_targetUuid;
@property(retain, nonatomic) NSString *targetUserId; // @synthesize targetUserId=_targetUserId;
@property(retain, nonatomic) NSString *controllerUuid; // @synthesize controllerUuid=_controllerUuid;
@property(retain, nonatomic) NSString *controllerUserId; // @synthesize controllerUserId=_controllerUserId;
@property(retain, nonatomic) NSString *controllerSharedSecret; // @synthesize controllerSharedSecret=_controllerSharedSecret;
@property(retain, nonatomic) NSDate *handshakeSent; // @synthesize handshakeSent=_handshakeSent;
@property(retain, nonatomic) NSError *lastError; // @synthesize lastError=_lastError;
@property(nonatomic) _Bool allowRegpair; // @synthesize allowRegpair=_allowRegpair;
@property(copy, nonatomic) CDUnknownBlockType connectToAppCallback; // @synthesize connectToAppCallback=_connectToAppCallback;
@property(retain, nonatomic) id <NativeMdxCryptoContext> mslContext; // @synthesize mslContext=_mslContext;
@property(retain, nonatomic) id <MdxSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <MdxConnection> connection; // @synthesize connection=_connection;
@property(retain, nonatomic) id <MdxDevice> device; // @synthesize device=_device;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
- (void)sendAppMessage:(id)arg1 payload:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)_intentDetailsForAppMessage:(id)arg1;
- (id)_intentForAppMessage:(id)arg1;
- (void)_populateIntentDetails:(id)arg1 withVersionInfo:(id)arg2;
- (void)_startWaitingOnPlayResponse;
- (void)_heardFromDevice;
- (void)_neverHeardAboutPlayback;
- (void)disconnectFromApp:(_Bool)arg1;
- (void)deviceLost;
- (void)_disconnectFromApp:(_Bool)arg1 shouldClearSharedSecret:(_Bool)arg2;
- (void)repairWithReceiver:(CDUnknownBlockType)arg1;
- (void)connectToApp:(long long)arg1 payload:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_postHandshakePairing:(_Bool)arg1;
- (void)connectionResumed;
- (void)connectionSuspended;
- (void)connectionEnded;
- (void)messageBodyReceived:(id)arg1 fromURL:(id)arg2 error:(id)arg3;
- (void)_recvSessionMessage:(id)arg1;
- (void)_handleDecryptedResponse:(id)arg1 nonce:(id)arg2;
- (id)_convertAppMessageToTargetForm:(id)arg1 nonce:(id)arg2;
- (id)_unflattenKeyPaths:(id)arg1;
- (void)_handleStartSessionResponse:(id)arg1;
- (void)_recvPairingResponse:(id)arg1;
- (basic_string_7c0a1c0b)_hmacWithNonSecretContext:(basic_string_7c0a1c0b *)arg1;
- (vector_5b3bfa18)_decryptWithNonSecretContext:(vector_5b3bfa18)arg1;
- (vector_5b3bfa18)_encryptWithNonSecretContext:(vector_5b3bfa18)arg1;
- (void)_targetRestartedAfterRemoteLogin;
- (void)_recvRegPairError:(id)arg1;
- (void)_recvRegPairResponse:(id)arg1;
- (id)_errorForMdxResponse:(id)arg1;
- (_Bool)_validatePairingResponseBody:(id)arg1;
- (void)_createSession;
- (id)_createSessionMessage:(id)arg1 error:(id *)arg2;
- (id)_createMessageBodyString:(id)arg1;
- (id)_hmacForSessionBody:(id)arg1;
- (id)_dictionaryToHmacableFormat:(id)arg1;
- (id)_extractMdxBody:(id)arg1 error:(id *)arg2;
- (id)_dictionaryFromData:(id)arg1;
- (void)_sendPairRequest;
- (void)_retrieveMslCTicket:(CDUnknownBlockType)arg1;
- (id)_getMslizedCTicket;
- (void)_sendRegPairRequest:(id)arg1 withPin:(id)arg2;
- (void)_sendRegPairRequest:(id)arg1;
- (void)_sendRegPairRequest;
- (basic_string_7c0a1c0b)_pairDataHmac:(id)arg1 nonce:(long long)arg2;
- (id)_getLocalIpAddressPort;
- (id)_encodeURIComponentJSStyle:(id)arg1;
- (void)_sendMessageDictionary:(id)arg1 error:(id *)arg2;
- (void)_sendMessageDictionary:(id)arg1;
- (void)_handleError:(id)arg1;
- (void)_fireConnectToAppCallback:(id)arg1;
- (long long)launchState;
- (id)initWithDevice:(id)arg1 connection:(id)arg2;
- (void)_loadPairingData;
- (void)_loadSessionData;
- (void)_saveSessionData;
- (void)_savePairingData;
- (long long)_nonce;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

