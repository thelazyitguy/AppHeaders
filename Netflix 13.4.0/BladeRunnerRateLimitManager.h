//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSString;
@protocol BladeRunnerRateLimitManagerDelegate, OS_dispatch_queue;

@interface BladeRunnerRateLimitManager : NSObject
{
    NSString *_identifier;
    unsigned long long _itemsPerHour;
    unsigned long long _itemsPerInterval;
    unsigned long long _itemsPerIntervalConsumed;
    NSDate *_itemsPerIntervalConsumedStart;
    id <BladeRunnerRateLimitManagerDelegate> _rateLimitManagerDelegate;
    NSObject<OS_dispatch_queue> *_rateLimitManagerDelegateQueue;
    unsigned long long _timerInstalledTimestamp;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long timerInstalledTimestamp; // @synthesize timerInstalledTimestamp=_timerInstalledTimestamp;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *rateLimitManagerDelegateQueue; // @synthesize rateLimitManagerDelegateQueue=_rateLimitManagerDelegateQueue;
@property(nonatomic) __weak id <BladeRunnerRateLimitManagerDelegate> rateLimitManagerDelegate; // @synthesize rateLimitManagerDelegate=_rateLimitManagerDelegate;
@property(retain, nonatomic) NSDate *itemsPerIntervalConsumedStart; // @synthesize itemsPerIntervalConsumedStart=_itemsPerIntervalConsumedStart;
@property(nonatomic) unsigned long long itemsPerIntervalConsumed; // @synthesize itemsPerIntervalConsumed=_itemsPerIntervalConsumed;
@property(nonatomic) unsigned long long itemsPerInterval; // @synthesize itemsPerInterval=_itemsPerInterval;
@property(nonatomic) unsigned long long itemsPerHour; // @synthesize itemsPerHour=_itemsPerHour;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)_installTimer;
- (void)_notifyDelegate;
- (void)_startRateLimitTimePeriod;
- (void)reset;
- (unsigned long long)itemsRemaining;
- (_Bool)hasReachedRateLimit;
- (void)incrementItemCount:(unsigned long long)arg1;
- (void)setRateLimitManagerDelegate:(id)arg1 andCallbackQueue:(id)arg2;
- (id)initWithRateLimit:(unsigned long long)arg1;

@end

