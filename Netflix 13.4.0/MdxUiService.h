//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MdxApiDelegate-Protocol.h"
#import "MdxUiConnectionDelegate-Protocol.h"
#import "MdxUiLoadApiOperationDelegate-Protocol.h"

@class MdxUiConnection, MdxUiStatusButton, NFLXNetworkInfoProvider, NSDate, NSString, NSTimer;
@protocol MdxUiServiceDelegate;

@interface MdxUiService : NSObject <MdxUiLoadApiOperationDelegate, MdxApiDelegate, MdxUiConnectionDelegate>
{
    _Bool _forceBundledJSSource;
    _Bool _forceRemoteJSSource;
    _Bool _isObserving;
    _Bool _isRemotelyLoggingIn;
    _Bool _shouldRetryNetworkTest;
    _Bool _isStartingService;
    id <MdxUiServiceDelegate> _delegate;
    unsigned long long _status;
    MdxUiConnection *_connection;
    unsigned long long _numberOfAvailableDevices;
    NSString *_loadedMdxVersion;
    NSDate *_lastHandledExceptionDate;
    unsigned long long _lastHandledExceptionReloadTryCount;
    CDUnknownBlockType _remoteLoginConfirmationCallback;
    unsigned long long _networkTestRetryCount;
    NSTimer *_networkRetryTimer;
    NFLXNetworkInfoProvider *_networkInfoProvider;
    id _tempMenuDelegate;
    MdxUiStatusButton *_tempStatusButton;
    CDStruct_58465200 _delegateRespondsTo;
}

+ (id)sharedInstance;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
+ (id)serviceOperationQueue;
- (void).cxx_destruct;
@property _Bool isStartingService; // @synthesize isStartingService=_isStartingService;
@property(retain, nonatomic) MdxUiStatusButton *tempStatusButton; // @synthesize tempStatusButton=_tempStatusButton;
@property(retain, nonatomic) id tempMenuDelegate; // @synthesize tempMenuDelegate=_tempMenuDelegate;
@property(retain, nonatomic) NFLXNetworkInfoProvider *networkInfoProvider; // @synthesize networkInfoProvider=_networkInfoProvider;
@property(retain, nonatomic) NSTimer *networkRetryTimer; // @synthesize networkRetryTimer=_networkRetryTimer;
@property _Bool shouldRetryNetworkTest; // @synthesize shouldRetryNetworkTest=_shouldRetryNetworkTest;
@property unsigned long long networkTestRetryCount; // @synthesize networkTestRetryCount=_networkTestRetryCount;
@property(copy, nonatomic) CDUnknownBlockType remoteLoginConfirmationCallback; // @synthesize remoteLoginConfirmationCallback=_remoteLoginConfirmationCallback;
@property(nonatomic) unsigned long long lastHandledExceptionReloadTryCount; // @synthesize lastHandledExceptionReloadTryCount=_lastHandledExceptionReloadTryCount;
@property(copy, nonatomic) NSDate *lastHandledExceptionDate; // @synthesize lastHandledExceptionDate=_lastHandledExceptionDate;
@property(nonatomic) _Bool isRemotelyLoggingIn; // @synthesize isRemotelyLoggingIn=_isRemotelyLoggingIn;
@property(nonatomic) _Bool isObserving; // @synthesize isObserving=_isObserving;
@property(nonatomic) _Bool forceRemoteJSSource; // @synthesize forceRemoteJSSource=_forceRemoteJSSource;
@property(nonatomic) _Bool forceBundledJSSource; // @synthesize forceBundledJSSource=_forceBundledJSSource;
@property(nonatomic) CDStruct_58465200 delegateRespondsTo; // @synthesize delegateRespondsTo=_delegateRespondsTo;
@property(copy, nonatomic) NSString *loadedMdxVersion; // @synthesize loadedMdxVersion=_loadedMdxVersion;
@property(readonly, nonatomic) unsigned long long numberOfAvailableDevices; // @synthesize numberOfAvailableDevices=_numberOfAvailableDevices;
@property(readonly, nonatomic) MdxUiConnection *connection; // @synthesize connection=_connection;
@property(readonly, nonatomic) unsigned long long status; // @synthesize status=_status;
@property(nonatomic) __weak id <MdxUiServiceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)createNetworkRetryTimerWithUserInfo:(id)arg1;
- (void)updateNetworkRetry:(id)arg1;
- (void)showTargetMenuWithDelegate:(id)arg1 sender:(id)arg2 performNetworkCheck:(_Bool)arg3;
- (void)showTargetMenuWithDelegate:(id)arg1 sender:(id)arg2;
- (void)clearPreferredDevice:(CDUnknownBlockType)arg1;
- (void)playOnDevice:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setPreferredDeviceForPlayback:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setPreferredDeviceForLaunch:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getAvailableDevices:(CDUnknownBlockType)arg1;
- (void)unloadIfNeeded;
- (void)startAndRejoinIfNeeded;
- (void)configureActiveProfile;
- (void)loadIfNeeded;
@property(readonly, nonatomic) _Bool enabled;
- (void)connection:(id)arg1 dialogCancel:(id)arg2;
- (void)connection:(id)arg1 dialogShow:(id)arg2;
- (_Bool)connection:(id)arg1 isSkipIntroEnabled:(id)arg2;
- (void)connection:(id)arg1 refreshCredentials:(CDUnknownBlockType)arg2;
- (void)connection:(id)arg1 handlePinVerificationWithVideoId:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)connection:(id)arg1 isContentPreviewPinVerified:(id)arg2;
- (_Bool)connection:(id)arg1 isPinVerified:(id)arg2;
- (_Bool)connection:(id)arg1 isPostPlayEnabled:(id)arg2;
- (void)remoteLoginSuccess:(id)arg1;
- (void)remoteLoginPinError:(id)arg1 error:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)confirmRemoteLoginPin:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)availableDeviceCountChanged:(int)arg1;
- (void)deviceAvailable:(id)arg1;
- (void)startedStateChanged:(_Bool)arg1;
- (void)handledUnexpectedException:(id)arg1;
- (void)confirmRemoteLogin:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)loadJSSource:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)loadApiOperationMdxConfigurationOptions:(id)arg1;
- (id)loadApiOperationMdxVersionInfo:(id)arg1;
- (void)changedPostPlayState:(id)arg1 observer:(id)arg2;
- (void)changedPostPlayActive:(id)arg1 observer:(id)arg2;
- (void)changedPostPlay:(id)arg1 observer:(id)arg2;
- (void)changedPlaySessionSkipIntroText:(id)arg1 observer:(id)arg2;
- (void)changedPlaySessionIsInSkipIntroWindow:(id)arg1 observer:(id)arg2;
- (void)changedPlaySessionState:(id)arg1 observer:(id)arg2;
- (void)changedAudioSubtitles:(id)arg1 observer:(id)arg2;
- (void)changedPlaySessionActive:(id)arg1 observer:(id)arg2;
- (void)changedPlaySession:(id)arg1 observer:(id)arg2;
- (void)changedPlayerCapabilities:(id)arg1 observer:(id)arg2;
- (void)changedConnectionState:(id)arg1 observer:(id)arg2;
- (void)changedConnectionActive:(id)arg1 observer:(id)arg2;
- (void)changedConnection:(id)arg1 observer:(id)arg2;
- (void)changedNumberOfAvailableDevices:(id)arg1 observer:(id)arg2;
- (void)changedStatus:(id)arg1 observer:(id)arg2;
- (_Bool)isChangeNewOrOldValuesNull:(id)arg1;
- (_Bool)isChangeNewAndOldValuesNull:(id)arg1;
- (_Bool)isChangeOldValueNull:(id)arg1;
- (_Bool)isChangeNewValueNull:(id)arg1;
- (void)setPreferredDevice:(id)arg1 intent:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setConnection:(id)arg1 intent:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)isPreferredDeviceId:(id)arg1;
- (void)deviceForMdxUuid:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setConnection:(id)arg1;
- (void)setNumberOfAvailableDevices:(unsigned long long)arg1;
- (void)handeSuccessfulRemoteLogin;
- (void)setStatus:(unsigned long long)arg1;
- (void)didJoinPlaySession:(id)arg1;
- (void)setPreferredDeviceId:(id)arg1;
- (void)reloadIfNeeded;
- (void)unloadIfNeeded:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)rejoinIfNeeded;
- (void)startIfNeeded:(CDUnknownBlockType)arg1;
- (void)loadIfNeeded:(CDUnknownBlockType)arg1;
- (unsigned long long)determineStatus;
- (void)postNotificationName:(id)arg1 object:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

