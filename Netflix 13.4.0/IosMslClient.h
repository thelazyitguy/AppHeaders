//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/IMslClient-Protocol.h>
#import <Nbp/IosMslTrustStoreAccess-Protocol.h>

@class MdxCTicketFetch, MslContextHolder, NSDictionary, NSOperation, NSOperationQueue, NSString;
@protocol AppleNativeStorage, AppleURLSession, IDevice, IosMslClientConfigurationProvider, NetflixUrlProvider, UserAuthenticationDataProvider;

@interface IosMslClient : NSObject <IMslClient, IosMslTrustStoreAccess>
{
    _Bool _didAppboot;
    _Bool _shouldUseSSLTrustStore;
    _Bool _shouldSaveSSLTrustStore;
    _Bool _needsMslStoreFlush;
    id <NetflixUrlProvider> _netflixUrlProvider;
    id <IDevice> _device;
    id <AppleNativeStorage> _storage;
    id <AppleURLSession> _urlSessionWithHostTranslation;
    id <AppleURLSession> _urlSessionWithoutHostTranslation;
    NSDictionary *_mslTrustStore;
    NSString *_sslTrustStore;
    NSOperationQueue *_operationQueue;
    NSOperationQueue *_accessQueue;
    NSOperation *_appbootOperation;
    NSOperation *_renewingOperation;
    id <IosMslClientConfigurationProvider> _configProvider;
    id <UserAuthenticationDataProvider> _authDataProvider;
    MdxCTicketFetch *_fetch;
    long long _numAppbootTries;
    shared_ptr_1dc51f47 _encoderFactory;
    shared_ptr_3ab9bc14 _errorMessageRegistry;
    shared_ptr_b7eef840 _messageStreamFactory;
    shared_ptr_d57df517 _messageDebugContext;
    shared_ptr_af382667 _clientMslContext;
    shared_ptr_0c61a1d8 _clientCryptoContext;
    shared_ptr_9c938eea _webCrypto;
    shared_ptr_e7ab91d9 _keyProvider;
    shared_ptr_4a535be5 _mslStore;
    shared_ptr_e1cef908 _mslControl;
}

+ (id)errorFromHTTPStatusCode:(long long)arg1;
+ (id)nsErrorFromExceptionPtr:(struct exception_ptr)arg1;
+ (id)noUrlError;
+ (id)nsErrorFromException:(const struct exception *)arg1;
+ (id)nsErrorFromIException:(const struct IException *)arg1;
+ (id)nsErrorFromIOException:(const struct IOException *)arg1;
+ (id)nsErrorFromMslException:(const struct MslException *)arg1;
+ (id)userAuthDataRequiredError;
+ (id)mslTrustStoreNoKeysError;
+ (id)mslTrustStoreError;
+ (id)missingMslTrustStoreError;
+ (id)shortResponseError;
+ (id)foundErrorHeaderError:(shared_ptr_2cf71e4b)arg1;
+ (id)noChannelError;
+ (id)invalidFutureError;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) long long numAppbootTries; // @synthesize numAppbootTries=_numAppbootTries;
@property(retain) MdxCTicketFetch *fetch; // @synthesize fetch=_fetch;
@property(retain, nonatomic) id <UserAuthenticationDataProvider> authDataProvider; // @synthesize authDataProvider=_authDataProvider;
@property _Bool needsMslStoreFlush; // @synthesize needsMslStoreFlush=_needsMslStoreFlush;
@property(nonatomic) __weak id <IosMslClientConfigurationProvider> configProvider; // @synthesize configProvider=_configProvider;
@property(nonatomic) _Bool shouldSaveSSLTrustStore; // @synthesize shouldSaveSSLTrustStore=_shouldSaveSSLTrustStore;
@property(nonatomic) _Bool shouldUseSSLTrustStore; // @synthesize shouldUseSSLTrustStore=_shouldUseSSLTrustStore;
@property(nonatomic) _Bool didAppboot; // @synthesize didAppboot=_didAppboot;
@property(retain, nonatomic) NSOperation *renewingOperation; // @synthesize renewingOperation=_renewingOperation;
@property(retain, nonatomic) NSOperation *appbootOperation; // @synthesize appbootOperation=_appbootOperation;
@property(retain, nonatomic) NSOperationQueue *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) shared_ptr_e1cef908 mslControl; // @synthesize mslControl=_mslControl;
@property(nonatomic) shared_ptr_4a535be5 mslStore; // @synthesize mslStore=_mslStore;
@property(nonatomic) shared_ptr_e7ab91d9 keyProvider; // @synthesize keyProvider=_keyProvider;
@property(nonatomic) shared_ptr_9c938eea webCrypto; // @synthesize webCrypto=_webCrypto;
@property(nonatomic) shared_ptr_0c61a1d8 clientCryptoContext; // @synthesize clientCryptoContext=_clientCryptoContext;
@property(nonatomic) shared_ptr_af382667 clientMslContext; // @synthesize clientMslContext=_clientMslContext;
@property(nonatomic) shared_ptr_d57df517 messageDebugContext; // @synthesize messageDebugContext=_messageDebugContext;
@property(nonatomic) shared_ptr_b7eef840 messageStreamFactory; // @synthesize messageStreamFactory=_messageStreamFactory;
@property(nonatomic) shared_ptr_3ab9bc14 errorMessageRegistry; // @synthesize errorMessageRegistry=_errorMessageRegistry;
@property(retain, nonatomic) NSString *sslTrustStore; // @synthesize sslTrustStore=_sslTrustStore;
@property(retain, nonatomic) NSDictionary *mslTrustStore; // @synthesize mslTrustStore=_mslTrustStore;
@property(nonatomic) shared_ptr_1dc51f47 encoderFactory; // @synthesize encoderFactory=_encoderFactory;
@property(retain) id <AppleURLSession> urlSessionWithoutHostTranslation; // @synthesize urlSessionWithoutHostTranslation=_urlSessionWithoutHostTranslation;
@property(retain) id <AppleURLSession> urlSessionWithHostTranslation; // @synthesize urlSessionWithHostTranslation=_urlSessionWithHostTranslation;
@property(retain) id <AppleNativeStorage> storage; // @synthesize storage=_storage;
@property(retain) id <IDevice> device; // @synthesize device=_device;
@property(readonly, nonatomic) id <NetflixUrlProvider> netflixUrlProvider; // @synthesize netflixUrlProvider=_netflixUrlProvider;
- (void)appboot:(CDUnknownBlockType)arg1;
- (id)mdxMslCTicket:(id)arg1 pairingCrypto:(id *)arg2;
- (void)retrieveMdxMslCTicket:(id)arg1 cookies:(id)arg2 configuration:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setClientLogging:(id)arg1;
- (id)userIdTokenForGUID:(id)arg1;
- (_Bool)removeUserIdTokenForGUID:(id)arg1;
@property(readonly, nonatomic, getter=mslContextHolder) MslContextHolder *mslContextHolder; // @dynamic mslContextHolder;
- (id)dropBackupTokens:(_Bool)arg1 factoryReset:(_Bool)arg2;
- (void)clearUserIdTokens;
- (void)addUserIdTokenForGUID:(id)arg1 userIdToken:(id)arg2;
- (void)sendAPIRequest:(id)arg1 extraHeaders:(id)arg2 params:(id)arg3 userAuthData:(id)arg4 requestOptions:(unsigned long long)arg5 callback:(CDUnknownBlockType)arg6;
- (void)checkOnAppboot:(long long)arg1;
- (id)shutdown;
- (void)_retryAppboot:(long long)arg1;
- (void)addAppBootOperation:(long long)arg1;
- (id)extractMslStoreKeys:(id)arg1;
- (void)updateNFURLSessionCerts:(id)arg1;
- (id)appBootParams;
- (void)makeDispatchedRequest:(shared_ptr_da445ec1)arg1 headers:(id)arg2 params:(id)arg3 userAuthData:(id)arg4 requestOptions:(unsigned long long)arg5 callback:(CDUnknownBlockType)arg6;
- (_Bool)isRenewingOperation:(shared_ptr_7c4be371)arg1 userAuthData:(id)arg2;
- (id)prepareRequest:(shared_ptr_da445ec1)arg1 headers:(id)arg2 params:(id)arg3 userAuthData:(id)arg4 requestOptions:(unsigned long long)arg5 outMslUrl:(shared_ptr_74abe757 *)arg6 outMessageContext:(shared_ptr_fb31eea0 *)arg7;
- (shared_ptr_0c5a9896)byteArrayFromParams:(id)arg1 error:(id *)arg2;
- (void)makeRequest:(shared_ptr_da445ec1)arg1 headers:(id)arg2 params:(id)arg3 userAuthData:(id)arg4 requestOptions:(unsigned long long)arg5 callback:(CDUnknownBlockType)arg6;
- (shared_ptr_fb31eea0)makeClientRequestMessageContext:(shared_ptr_0c5a9896)arg1 forURL:(shared_ptr_da445ec1)arg2 userAuthData:(id)arg3;
- (shared_ptr_09a9f6c1)makeUserAuthData:(id)arg1;
- (shared_ptr_09a9f6c1)_makeSwitchProfileAuthData:(id)arg1;
- (void)processRequest:(shared_ptr_7c4be371)arg1 url:(shared_ptr_74abe757)arg2 timeoutMS:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (id)figureOutErrorFromMslUrl:(shared_ptr_74abe757)arg1;
- (shared_ptr_74abe757)constructMslUrl:(shared_ptr_da445ec1)arg1 headers:(id)arg2 requestOptions:(unsigned long long)arg3;
- (_Bool)shouldUseProgressiveChunking;
- (id)getKeyFromTrustStore:(id)arg1;
- (long long)integerForStringKey:(id)arg1 defaultIfNotPresent:(long long)arg2;
- (_Bool)isFlagTrue:(id)arg1 defaultIfNotPresent:(_Bool)arg2;
- (void)setConfigurationProvider:(id)arg1;
- (void)initializeMslControl;
- (id)initWithDevice:(id)arg1 storage:(id)arg2 urlSessionWithHostTranslation:(id)arg3 urlSessionWithoutHostTranslation:(id)arg4 netflixUrlProvider:(id)arg5 configurationProvider:(id)arg6 authDataProvider:(id)arg7;
- (id)initWithDevice:(id)arg1 storage:(id)arg2 urlSessionWithHostTranslation:(id)arg3 urlSessionWithoutHostTranslation:(id)arg4 netflixUrlProvider:(id)arg5 configurationProvider:(id)arg6;
- (void)moveUserIdTokenFromUserId:(id)arg1 toNewId:(id)arg2;
- (void)copyUserIdTokenFromUserId:(id)arg1 toNewId:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

