//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NFPlaylistGeneration/CdnSelector-Protocol.h>
#import <NFPlaylistGeneration/ContentHeaderDownloaderProtocol-Protocol.h>
#import <NFPlaylistGeneration/NSURLSessionDataDelegate-Protocol.h>
#import <NFPlaylistGeneration/NSURLSessionDelegate-Protocol.h>
#import <NFPlaylistGeneration/NSURLSessionTaskDelegate-Protocol.h>

@class CdnStatistics, ContentHeader3, NSArray, NSDate, NSDictionary, NSError, NSOperationQueue, NSString, NSURLSession, NSURLSessionDataTask;
@protocol CdnSelectionDelegate, ContentHeaderDownloaderDelegate, OS_dispatch_queue, SidxInfoFactoryProtocol, _TtP16NFManifestCommon10NFManifest_, _TtP16NFManifestCommon8NFStream_, _TtP16NFManifestCommon9NFCdnInfo_;

@interface ContentHeaderDownloader3 : NSObject <CdnSelector, NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, ContentHeaderDownloaderProtocol>
{
    id <_TtP16NFManifestCommon8NFStream_> stream_;
    id <_TtP16NFManifestCommon10NFManifest_> manifest_;
    long long mediaType_;
    _Bool headerFound_;
    _Bool foundSidxBox_;
    _Bool foundSsixBox_;
    NSString *movieId_;
    char *buffer_;
    int bufferLength_;
    int bufferSpace_;
    int retryCount_;
    _Bool timedOut_;
    _Bool usedSidxSsixData_;
    id <_TtP16NFManifestCommon9NFCdnInfo_> currentCdn_;
    unsigned int cdnKbps_;
    NSString *downloadingFailedReason_;
    NSString *logByteRange_;
    unsigned int subtitleCdnIdIndex_;
    NSArray *textCdnAccessArray_;
    NSDate *downloadStartTime_;
    NSObject<OS_dispatch_queue> *_stateGuardQueue;
    unsigned int bytesParsed_;
    _Bool _isDownloadFinished;
    _Bool _isDownloadingSucceeded;
    _Bool _isDownloadingFailed;
    _Bool _isSuspiciousProxyDetected;
    _Bool _hasDownloadBeenKickedOff;
    _Bool _isHttpHeaderRangeRequestEnabled;
    _Bool _isUseSidxSisxContentHeaderDownload;
    _Bool _isOnlySidxBoxDownloadEnabled;
    _Bool _isSavePartialContentHeaderAvailaible;
    _Bool _isAirplayEnabled;
    _Bool _setDebugThreadNameForCHD;
    _Bool _doDataSanityCheckInCHD;
    _Bool _usePreciseRangeRequestInChd;
    _Bool _useCHDsQueueForNFURLSession;
    _Bool _chdDefensiveCoding;
    _Bool _chdCheckResponseHeader;
    _Bool _useAccurateTimingForBranchingPlayback;
    _Bool _chdUsesSidxInfo;
    _Bool _cutSegmentOn120sForMcClearenStream;
    _Bool _useDrmInfoInManifest;
    unsigned int _downloadedBytes;
    id <CdnSelectionDelegate> _cdnSelectionDelegate;
    ContentHeader3 *_contentHeader3;
    NSURLSession *_session;
    NSURLSessionDataTask *_downloadTask;
    id <ContentHeaderDownloaderDelegate> _contentHeaderDownloaderDelegate;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_contentHeaderDownloadQueue;
    NSOperationQueue *_delegateOperationQueue;
    unsigned long long _chdErrorCode;
    NSString *_playbackId;
    id <SidxInfoFactoryProtocol> _sidxInfoFactory;
    NSDictionary *_dlid2Pssh;
    struct _NSRange _sidxRangeFromManifest;
    struct _NSRange _ssixRangeFromManifest;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *dlid2Pssh; // @synthesize dlid2Pssh=_dlid2Pssh;
@property(retain, nonatomic) id <SidxInfoFactoryProtocol> sidxInfoFactory; // @synthesize sidxInfoFactory=_sidxInfoFactory;
@property(nonatomic) _Bool useDrmInfoInManifest; // @synthesize useDrmInfoInManifest=_useDrmInfoInManifest;
@property(nonatomic) struct _NSRange ssixRangeFromManifest; // @synthesize ssixRangeFromManifest=_ssixRangeFromManifest;
@property(nonatomic) struct _NSRange sidxRangeFromManifest; // @synthesize sidxRangeFromManifest=_sidxRangeFromManifest;
@property(nonatomic) _Bool cutSegmentOn120sForMcClearenStream; // @synthesize cutSegmentOn120sForMcClearenStream=_cutSegmentOn120sForMcClearenStream;
@property(nonatomic) _Bool chdUsesSidxInfo; // @synthesize chdUsesSidxInfo=_chdUsesSidxInfo;
@property(nonatomic) _Bool useAccurateTimingForBranchingPlayback; // @synthesize useAccurateTimingForBranchingPlayback=_useAccurateTimingForBranchingPlayback;
@property(nonatomic) _Bool chdCheckResponseHeader; // @synthesize chdCheckResponseHeader=_chdCheckResponseHeader;
@property(nonatomic) _Bool chdDefensiveCoding; // @synthesize chdDefensiveCoding=_chdDefensiveCoding;
@property(nonatomic) _Bool useCHDsQueueForNFURLSession; // @synthesize useCHDsQueueForNFURLSession=_useCHDsQueueForNFURLSession;
@property(nonatomic) _Bool usePreciseRangeRequestInChd; // @synthesize usePreciseRangeRequestInChd=_usePreciseRangeRequestInChd;
@property(nonatomic) _Bool doDataSanityCheckInCHD; // @synthesize doDataSanityCheckInCHD=_doDataSanityCheckInCHD;
@property(nonatomic) _Bool setDebugThreadNameForCHD; // @synthesize setDebugThreadNameForCHD=_setDebugThreadNameForCHD;
@property(retain, nonatomic) NSString *playbackId; // @synthesize playbackId=_playbackId;
@property(nonatomic) _Bool isAirplayEnabled; // @synthesize isAirplayEnabled=_isAirplayEnabled;
@property(nonatomic) _Bool isSavePartialContentHeaderAvailaible; // @synthesize isSavePartialContentHeaderAvailaible=_isSavePartialContentHeaderAvailaible;
@property(nonatomic) _Bool isOnlySidxBoxDownloadEnabled; // @synthesize isOnlySidxBoxDownloadEnabled=_isOnlySidxBoxDownloadEnabled;
@property(nonatomic) _Bool isUseSidxSisxContentHeaderDownload; // @synthesize isUseSidxSisxContentHeaderDownload=_isUseSidxSisxContentHeaderDownload;
@property(nonatomic) _Bool isHttpHeaderRangeRequestEnabled; // @synthesize isHttpHeaderRangeRequestEnabled=_isHttpHeaderRangeRequestEnabled;
@property(nonatomic) unsigned long long chdErrorCode; // @synthesize chdErrorCode=_chdErrorCode;
@property(retain, nonatomic) NSOperationQueue *delegateOperationQueue; // @synthesize delegateOperationQueue=_delegateOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *contentHeaderDownloadQueue; // @synthesize contentHeaderDownloadQueue=_contentHeaderDownloadQueue;
@property(nonatomic) unsigned int downloadedBytes; // @synthesize downloadedBytes=_downloadedBytes;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) __weak id <ContentHeaderDownloaderDelegate> contentHeaderDownloaderDelegate; // @synthesize contentHeaderDownloaderDelegate=_contentHeaderDownloaderDelegate;
@property(retain, nonatomic) NSURLSessionDataTask *downloadTask; // @synthesize downloadTask=_downloadTask;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain, nonatomic) ContentHeader3 *contentHeader3; // @synthesize contentHeader3=_contentHeader3;
@property __weak id <CdnSelectionDelegate> cdnSelectionDelegate; // @synthesize cdnSelectionDelegate=_cdnSelectionDelegate;
- (id)logExtraErrorDetails;
- (id)describeStreamType:(long long)arg1;
- (id)movieId;
@property(readonly, nonatomic) NSString *downloadableId;
- (long long)encodingProfile;
- (id)encodingProfileName;
- (unsigned long long)videoWidth;
- (unsigned long long)videoHeight;
- (unsigned long long)videoVmaf;
- (unsigned long long)audioChannelCount;
- (_Bool)isPreferredTextTrack;
- (_Bool)isPreferredAudioTrack;
- (_Bool)isTextStream;
- (_Bool)isAudioStream;
- (_Bool)isVideoStream;
- (void)updateCdnIdForSubtitleSwitchToCdnId:(unsigned int)arg1;
- (void)updateCdnIdForCurrentCdnId;
- (void)updateCdnIdForSubtitleDownloadAttempt;
- (_Bool)updateCdnIdForAudioVideo;
- (void)notifyCdnSwitch:(unsigned int)arg1 downloadableId:(id)arg2;
@property(readonly, nonatomic) CdnStatistics *cdnStatistics;
- (_Bool)shouldRetryForSubtitle;
- (_Bool)processSubtitleHeaderData;
- (void)onTaskDidCompleteForSubtitle;
- (void)processDownloadedDataChunkForSubtitle:(id)arg1;
- (void)copyDataToBufferForSubtitle:(id)arg1;
- (void)initiateDownloadForSubtitle;
- (void)initializeBufferForSubtitle;
- (_Bool)shouldRetryForAudioVideo;
- (void)onTaskDidCompleteForAudioVideo;
- (void)dumpDashIndexData:(id)arg1;
- (void)setDashIndexDataFromMP4Info:(struct MP4Info *)arg1;
- (_Bool)searchForContentInBuffer:(char *)arg1 length:(int)arg2;
- (void)dataSanityCheck;
- (void)sendDebugTrapLogblobWithMessage:(id)arg1 dumpData:(_Bool)arg2 fromOffset:(unsigned long long)arg3 length:(unsigned long long)arg4;
- (void)processDownloadedDataChunkForAudioVideo:(id)arg1;
- (void)copyDataToBufferForAudioVideo:(id)arg1;
- (void)initiateDownloadForAudioVideo;
- (void)continueDownloadForAudioVideo;
- (id)byteRange;
- (void)initializeBufferForAudioVideo;
- (void)throughputMeasurementCalculate;
- (void)throughputMeasurementAddBytes:(unsigned int)arg1;
- (void)processData:(id)arg1;
- (id)errorWithUrlSessionTask:(id)arg1;
- (_Bool)isUrlCancelledError:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (id)urlAsRangeRequest:(id)arg1 startOffset:(long long)arg2 endOffset:(long long)arg3;
- (_Bool)shouldRetry;
- (_Bool)didCancelPrefetch;
- (void)cancelDownloadTask;
- (void)cancelHeaderDownload;
- (void)initiateDownload;
- (void)resetDownloaderState;
- (void)throughputMeasurementReset;
- (void)addHeaderDataToCache;
- (_Bool)loadHeaderFromCacheIfAvailable;
- (void)setHasDownloadBeenKickedOff:(_Bool)arg1;
@property(readonly, nonatomic) _Bool hasDownloadBeenKickedOff; // @synthesize hasDownloadBeenKickedOff=_hasDownloadBeenKickedOff;
- (void)setIsSuspiciousProxyDetected:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isSuspiciousProxyDetected; // @synthesize isSuspiciousProxyDetected=_isSuspiciousProxyDetected;
- (void)setIsDownloadingFailed:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isDownloadingFailed; // @synthesize isDownloadingFailed=_isDownloadingFailed;
- (void)setIsDownloadingSucceeded:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isDownloadingSucceeded; // @synthesize isDownloadingSucceeded=_isDownloadingSucceeded;
- (void)setIsDownloadFinished:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isDownloadFinished; // @synthesize isDownloadFinished=_isDownloadFinished;
- (void)dealloc;
- (id)initWithManifestStream:(id)arg1 andDelegate:(id)arg2;
- (id)initWithManifestStream:(id)arg1 playbackId:(id)arg2 andDelegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

