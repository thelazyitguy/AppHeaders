//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/DownloadSessionDelegate-Protocol.h>
#import <Nbp/NfOfflineContentManagerInternal-Protocol.h>
#import <Nbp/OfflineWatchableDelegate-Protocol.h>

@class NSDate, NSMapTable, NSMutableDictionary, NSString, NflxTimer, OfflineDeactivationQueue;
@protocol DownloadSessionProtocol, NfOfflineContentManagerDelegate, OS_dispatch_queue, OfflineDBProtocol, OfflineDependencyProvider;

@interface OfflineManagerV2 : NSObject <OfflineWatchableDelegate, DownloadSessionDelegate, NfOfflineContentManagerInternal>
{
    _Bool _isQueueRunning;
    _Bool _backgroundTasksInitialized;
    _Bool _autoLicenseRefreshDisabled;
    _Bool _avAssetDownloadingDisabled;
    id <NfOfflineContentManagerDelegate> _delegate;
    long long _maxConcurrentDownloadCount;
    id <OfflineDependencyProvider> _provider;
    NSMutableDictionary *_watchablesByMovieId;
    NSMapTable *_recordToWatchable;
    NSObject<OfflineDBProtocol> *_offlineDb;
    NSObject<DownloadSessionProtocol> *_downloadSession;
    NSObject<OS_dispatch_queue> *_queue;
    NflxTimer *_tidyUpTimer;
    NSDate *_tidyUpDate;
    NSDate *_ocmInitTime;
    NSString *_applicationNotifiedSessionIdentifier;
    OfflineDeactivationQueue *_deactivationQueue;
    NSMutableDictionary *_yearlyLimitShownMap;
}

+ (_Bool)hasDownloads;
- (void).cxx_destruct;
@property(retain) NSMutableDictionary *yearlyLimitShownMap; // @synthesize yearlyLimitShownMap=_yearlyLimitShownMap;
@property(retain) OfflineDeactivationQueue *deactivationQueue; // @synthesize deactivationQueue=_deactivationQueue;
@property(retain) NSString *applicationNotifiedSessionIdentifier; // @synthesize applicationNotifiedSessionIdentifier=_applicationNotifiedSessionIdentifier;
@property(retain) NSDate *ocmInitTime; // @synthesize ocmInitTime=_ocmInitTime;
@property(retain) NSDate *tidyUpDate; // @synthesize tidyUpDate=_tidyUpDate;
@property(retain) NflxTimer *tidyUpTimer; // @synthesize tidyUpTimer=_tidyUpTimer;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSObject<DownloadSessionProtocol> *downloadSession; // @synthesize downloadSession=_downloadSession;
@property(retain) NSObject<OfflineDBProtocol> *offlineDb; // @synthesize offlineDb=_offlineDb;
@property(retain) NSMapTable *recordToWatchable; // @synthesize recordToWatchable=_recordToWatchable;
@property(retain) NSMutableDictionary *watchablesByMovieId; // @synthesize watchablesByMovieId=_watchablesByMovieId;
@property(nonatomic) __weak id <OfflineDependencyProvider> provider; // @synthesize provider=_provider;
@property(readonly, nonatomic) long long maxConcurrentDownloadCount; // @synthesize maxConcurrentDownloadCount=_maxConcurrentDownloadCount;
@property(nonatomic) _Bool avAssetDownloadingDisabled; // @synthesize avAssetDownloadingDisabled=_avAssetDownloadingDisabled;
@property _Bool autoLicenseRefreshDisabled; // @synthesize autoLicenseRefreshDisabled=_autoLicenseRefreshDisabled;
@property(nonatomic) _Bool backgroundTasksInitialized; // @synthesize backgroundTasksInitialized=_backgroundTasksInitialized;
@property(nonatomic) __weak id <NfOfflineContentManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)resumeAllDownloads;
- (void)suspendAllDownloads;
- (void)resumeDownload:(id)arg1;
- (void)suspendDownload:(id)arg1;
- (void)deleteDebugState;
- (void)updateDebugState:(id)arg1;
- (id)debugState;
- (void)updateDebugStateForId:(id)arg1 append:(id)arg2;
- (id)debugStateForId:(id)arg1;
- (id)getOfflineDownloadInfoForId:(id)arg1;
- (id)getOfflinePlaybackForId:(id)arg1 offlineTransactionId:(id)arg2 fetchOptions:(unsigned long long)arg3;
- (id)getOfflinePlaybackForId:(id)arg1 offlineTransactionId:(id)arg2;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)_refreshPlayWindows;
- (void)refreshPlayWindows;
- (void)refreshLicenseForId:(id)arg1;
- (void)_initiateDownloadForId:(id)arg1 quality:(id)arg2 trackingInfo:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)_startDownloadForWatchable:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_invokeInitiateDownloadCallback:(CDUnknownBlockType)arg1 info:(id)arg2;
- (void)initiateDownloadForId:(id)arg1 quality:(id)arg2 trackingInfo:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)_notifyDLFailureForMovieId:(id)arg1 errorCode:(int)arg2;
- (void)syncDeactivateLinksResponseDirect:(id)arg1 didIncludeSPC:(_Bool)arg2;
- (_Bool)queueDeactivateLinkForWatchable:(id)arg1;
- (id)_trackingInfoFromBackingInfo:(id)arg1;
- (id)webVTTPlist;
- (void)updateWebVTTPlist:(id)arg1;
- (void)respondToNextTaskResuming:(CDUnknownBlockType)arg1;
- (void)respondToDownloadFinished:(CDUnknownBlockType)arg1;
- (void)removeAllDataForId:(id)arg1;
- (_Bool)hasId:(id)arg1;
- (id)getAllIds;
- (id)dependencyProvider;
- (id)delegateForTaskIdentifier:(id)arg1;
- (id)_watchableForRecord:(id)arg1;
- (id)_downloadIdFromTaskId:(id)arg1;
- (void)startQueue;
- (void)stopQueue;
- (void)setIsQueueRunning:(_Bool)arg1;
- (_Bool)isQueueRunning;
- (_Bool)shouldRespondToEventsForBackgroundURLSessionIdentifier:(id)arg1;
- (void)initializeBackgroundTasks:(CDUnknownBlockType)arg1;
- (_Bool)isSecureInvalidationReady;
- (id)findPersistentBlobForPlaybackId:(id)arg1;
- (id)findOfflineDownloaderForPlaybackId:(id)arg1;
- (id)findOfflinePlaybackForPlaybackId:(id)arg1;
- (unsigned long long)spaceAvailableForDownloads;
- (_Bool)supportsAVAggregate;
- (id)deactivateLinksV2;
- (id)deactivateLinks;
- (id)getWatchableInfoForLinksKey:(id)arg1;
- (id)createDownloaderWithWatchableInfo:(id)arg1 andTask:(id)arg2;
- (_Bool)shouldShowYearlyLimitWarning:(id)arg1;
- (void)downloadFinished:(id)arg1;
- (void)licenseRefreshed:(id)arg1;
- (void)downloadProgress:(id)arg1;
- (void)downloadStarted:(id)arg1;
- (void)downloadRemoved:(id)arg1;
- (void)downloadFailed:(id)arg1;
- (void)_initializeWatchableMaps;
- (void)_tidyUpWatchables;
- (void)_updateBackgroundCompletedDownloads;
- (void)_deleteRemovedDownloads;
- (void)_retryDeactivation:(id)arg1;
- (id)_mostRecentDate:(id)arg1;
- (void)_startStalledDownloads;
- (void)_restartFailedDownloads;
- (void)_renewExpiredLicenses;
- (void)_notifyDelegateOfDownloadEnded:(id)arg1;
- (void)_notifyDelegateOfDownloadResumed:(id)arg1;
- (void)_notifyDelegateOfDownloadSuspeneded:(id)arg1;
- (void)_notifyDelegateOfUpdatedLicense:(id)arg1;
- (void)_notifyDelegateOfDownloadChange:(id)arg1;
- (void)_notifyDelegateOfDownloadProgress:(id)arg1;
- (void)_notifyDelegateOfDownloadOpened:(id)arg1;
- (_Bool)_isWatchableValid:(id)arg1;
- (void)_startTidyUpTimer;
- (void)sessionTaskRecoveryDidComplete;
- (id)initWithDependencyProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

