//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVPlayerItem, AudioSubtitleProcessor, NSArray, NflxMovieDetails;
@protocol NFImageBasedSubtitleController, NfPlaybackAudioOption, NfPlaybackSubtitleOption, NfSubtitleAudioControllerInternal, PlatformConfigProvider;

@interface AudioSubtitleManager : NSObject
{
    _Bool _webVTTOverImageBasedSubtitles;
    NSArray *_imageBasedSubtitlesArray;
    NflxMovieDetails *_movieDetails;
    AVPlayerItem *_avPlayerItem;
    NSArray *_subtitleOptions;
    NSArray *_audioOptions;
    NSArray *_subsetSubtitleOptions;
    id <NfPlaybackAudioOption> _audioOption;
    id <NfPlaybackSubtitleOption> _subtitleOption;
    id <PlatformConfigProvider> _platformConfig;
    id <NfSubtitleAudioControllerInternal> _audioSubtitleDelegate;
    id <NFImageBasedSubtitleController> _imageBasedSubtitleController;
    AudioSubtitleProcessor *_audioSubtitleProcessor;
}

- (void).cxx_destruct;
@property(retain, nonatomic) AudioSubtitleProcessor *audioSubtitleProcessor; // @synthesize audioSubtitleProcessor=_audioSubtitleProcessor;
@property(retain, nonatomic) id <NFImageBasedSubtitleController> imageBasedSubtitleController; // @synthesize imageBasedSubtitleController=_imageBasedSubtitleController;
@property(nonatomic) _Bool webVTTOverImageBasedSubtitles; // @synthesize webVTTOverImageBasedSubtitles=_webVTTOverImageBasedSubtitles;
@property(retain, nonatomic) id <NfSubtitleAudioControllerInternal> audioSubtitleDelegate; // @synthesize audioSubtitleDelegate=_audioSubtitleDelegate;
@property(retain, nonatomic) id <PlatformConfigProvider> platformConfig; // @synthesize platformConfig=_platformConfig;
@property(retain, nonatomic) id <NfPlaybackSubtitleOption> subtitleOption; // @synthesize subtitleOption=_subtitleOption;
@property(retain, nonatomic) id <NfPlaybackAudioOption> audioOption; // @synthesize audioOption=_audioOption;
@property(retain, nonatomic) NSArray *subsetSubtitleOptions; // @synthesize subsetSubtitleOptions=_subsetSubtitleOptions;
@property(retain, nonatomic) NSArray *audioOptions; // @synthesize audioOptions=_audioOptions;
@property(retain, nonatomic) NSArray *subtitleOptions; // @synthesize subtitleOptions=_subtitleOptions;
@property(nonatomic) __weak AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(retain, nonatomic) NflxMovieDetails *movieDetails; // @synthesize movieDetails=_movieDetails;
@property(readonly, nonatomic) NSArray *imageBasedSubtitlesArray; // @synthesize imageBasedSubtitlesArray=_imageBasedSubtitlesArray;
- (id)defaultBCP47AudioTrack:(_Bool *)arg1;
- (void)selectMediaOption:(id)arg1 inMediaSelectionGroup:(id)arg2 isPlaybackStart:(_Bool)arg3;
- (void)selectExternalSubtitleOptions:(id)arg1;
- (id)allowedBCP47SubtitlesFromSoundBCP47:(id)arg1;
- (_Bool)hasNoOffTrackFromSoundBCP47:(id)arg1;
- (void)reportCurrentBCP47Channels;
- (void)reportSpliceEventForStickiness:(id)arg1 subtitleOption:(id)arg2;
- (void)reportSubtitleSelection:(id)arg1;
- (void)reportAudioSelection:(id)arg1;
- (void)selectMediaOnAVPlayer:(id)arg1 inMediaSelectionGroup:(id)arg2;
- (_Bool)hasNoSubtitleOffTrackForAudio:(id)arg1;
- (void)displayWebVTTSubtitles:(_Bool)arg1;
- (void)pipActive:(_Bool)arg1;
- (void)airplayActive:(_Bool)arg1;
- (void)audioStreamSelected:(id)arg1 downloadableId:(id)arg2;
- (_Bool)isSelectedSubtitleImageBased;
- (id)selectedSubtitleOption;
- (id)selectedSubsetSubtitleOption;
- (id)selectedAudioOption;
- (id)availableSubtitleOptions;
- (id)availableSubsetSubtitleOptions;
- (id)availableAudioOptions;
- (void)enableStickyForSelectedAudioSubtitle;
- (void)selectSubtitleOption:(id)arg1;
- (void)selectSubsetSubtitleOption:(id)arg1;
- (void)selectAudioOption:(id)arg1;
- (void)selectAndReportSubtitleOption:(id)arg1;
- (void)selectAndReportAudioOption:(id)arg1;
- (void)selectInitialAudioSubtitleOptionForAVPlayerItem:(id)arg1;
- (void)setNbpImageBasedSubtitleController:(id)arg1;
- (id)initWithDelegate:(id)arg1 platformConfig:(id)arg2;

@end

