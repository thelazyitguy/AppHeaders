//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/BRLNetworkProxyDelegate-Protocol.h>
#import <Nbp/FTLProbeLogBlober-Protocol.h>
#import <Nbp/IosMslClientConfigurationProvider-Protocol.h>
#import <Nbp/LoggingDependencyProvider-Protocol.h>
#import <Nbp/NrdController-Protocol.h>
#import <Nbp/OfflineDependencyProvider-Protocol.h>
#import <Nbp/PBOClientDelegate-Protocol.h>
#import <Nbp/PlatformConfigProvider-Protocol.h>
#import <Nbp/PlatformLoggerLogblobTranslationDelegate-Protocol.h>

@class APIConfiguration, APIStateCleanupManager, APIStateStore, AppleNrdpBridge, BRLLoggingValidator, BRLNetworkProxy, BladeRunnerFtlStateReporter, BladeRunnerLogging, EdgeClient, FTLProbeClient, IosMslClient, NFLXNetworkInfoProvider, NFZuulPreprocessor, NSArray, NSConditionLock, NSDate, NSOperationQueue, NSString, NetworkCategoryLogger, NrdCrashReporter, NrdFtlProbeManager, NrdPlaydelayReporter, OfflineLicenseSyncManager, OfflineMetadataManager, PBOClient, PlatformConfigManager, PlatformLogblobSinkProxy, PrefetchManager, UrlSessionRetryAuthority;
@protocol AppleNativeStorage, IDevice, InititalBandwidthCapReporterDelegate, LoggingNetworkDelegate, LoggingValidationDelegate, MSLClient, NFZuulHeaderStateProvider, NfOfflineContentManagerInternal, NfRegistrationController, NrdFtlStateDelegate, NrdHandler, PlatformConfigProvider, StoreCrypto;

@interface NfNrdController : NSObject <FTLProbeLogBlober, IosMslClientConfigurationProvider, PlatformConfigProvider, PBOClientDelegate, LoggingDependencyProvider, PlatformLoggerLogblobTranslationDelegate, OfflineDependencyProvider, BRLNetworkProxyDelegate, NrdController>
{
    _Bool _activatedHint;
    _Bool _supportsDownload;
    _Bool _canPlayDovi;
    _Bool _canPlayDolby;
    _Bool _canPlayDolbyAtmos;
    _Bool _isInBackground;
    _Bool _appbootOnStartup;
    _Bool _recordedStartupLogblob;
    _Bool _requireAppbootSuccess;
    NSObject<IDevice> *_DAL;
    APIConfiguration *_configuration;
    NFLXNetworkInfoProvider *_networkInfoProvider;
    long long _nrdLogLevel;
    APIStateStore *_stateStore;
    NSObject<AppleNativeStorage> *_storage;
    id <NfRegistrationController> _registrationController;
    NSOperationQueue *_operationQueue;
    id <NrdHandler> _handler;
    NSArray *_registrationHandlers;
    PrefetchManager *_prefetchManager;
    id <NfOfflineContentManagerInternal> _offlineContentManager;
    OfflineMetadataManager *_offlineMetadataManager;
    BladeRunnerLogging *_offlineLogging;
    BRLNetworkProxy *_brlNetworkProxy;
    BRLLoggingValidator *_brlLoggingValidator;
    PlatformLogblobSinkProxy *_platformLogblobSinkProxy;
    APIStateCleanupManager *_apiStateCleanupManager;
    long long _nrdState;
    long long _playbackCount;
    long long _environment;
    EdgeClient *_edgeClient;
    PBOClient *_pboClient;
    IosMslClient *_mslClient;
    id <MSLClient> _platformMslClient;
    NetworkCategoryLogger *_networkCategoryLogger;
    NFZuulPreprocessor *_networkStatisticsPreprocessor;
    UrlSessionRetryAuthority *_urlSessionRetryAuthority;
    NrdPlaydelayReporter *_playdelayReporter;
    FTLProbeClient *_ftlProbeClient;
    NrdFtlProbeManager *_ftlProbeManager;
    AppleNrdpBridge *_nrdp;
    PlatformConfigManager *_platformConfigManager;
    NrdCrashReporter *_nrdCrashReporter;
    OfflineLicenseSyncManager *_offlineLicenseSyncManager;
    BladeRunnerFtlStateReporter *_ftlStateReporter;
    NSDate *_lastDateInBackground;
    NSConditionLock *_appbootLock;
    long long _nrdStartAlreadyCalled;
    long long _nrdStartComplete;
    long long _receivedConfigChanges;
    NSDate *_nrdControllerInitTime;
}

+ (id)sharedInstance;
+ (long long)advisoryForTokenResetDueToEnvironmentChange:(_Bool)arg1 buildTypeDidChange:(_Bool)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDate *nrdControllerInitTime; // @synthesize nrdControllerInitTime=_nrdControllerInitTime;
@property long long receivedConfigChanges; // @synthesize receivedConfigChanges=_receivedConfigChanges;
@property long long nrdStartComplete; // @synthesize nrdStartComplete=_nrdStartComplete;
@property long long nrdStartAlreadyCalled; // @synthesize nrdStartAlreadyCalled=_nrdStartAlreadyCalled;
@property(nonatomic) _Bool requireAppbootSuccess; // @synthesize requireAppbootSuccess=_requireAppbootSuccess;
@property(nonatomic) _Bool recordedStartupLogblob; // @synthesize recordedStartupLogblob=_recordedStartupLogblob;
@property(nonatomic) _Bool appbootOnStartup; // @synthesize appbootOnStartup=_appbootOnStartup;
@property(retain, nonatomic) NSConditionLock *appbootLock; // @synthesize appbootLock=_appbootLock;
@property(retain, nonatomic) NSDate *lastDateInBackground; // @synthesize lastDateInBackground=_lastDateInBackground;
@property(nonatomic) _Bool isInBackground; // @synthesize isInBackground=_isInBackground;
@property(nonatomic) _Bool canPlayDolbyAtmos; // @synthesize canPlayDolbyAtmos=_canPlayDolbyAtmos;
@property(nonatomic) _Bool canPlayDolby; // @synthesize canPlayDolby=_canPlayDolby;
@property(nonatomic) _Bool canPlayDovi; // @synthesize canPlayDovi=_canPlayDovi;
@property(retain, nonatomic) BladeRunnerFtlStateReporter *ftlStateReporter; // @synthesize ftlStateReporter=_ftlStateReporter;
@property(retain, nonatomic) OfflineLicenseSyncManager *offlineLicenseSyncManager; // @synthesize offlineLicenseSyncManager=_offlineLicenseSyncManager;
@property(retain, nonatomic) NrdCrashReporter *nrdCrashReporter; // @synthesize nrdCrashReporter=_nrdCrashReporter;
@property(retain, nonatomic) PlatformConfigManager *platformConfigManager; // @synthesize platformConfigManager=_platformConfigManager;
@property(nonatomic) _Bool supportsDownload; // @synthesize supportsDownload=_supportsDownload;
@property(retain, nonatomic) AppleNrdpBridge *nrdp; // @synthesize nrdp=_nrdp;
@property(retain, nonatomic) NrdFtlProbeManager *ftlProbeManager; // @synthesize ftlProbeManager=_ftlProbeManager;
@property(retain, nonatomic) FTLProbeClient *ftlProbeClient; // @synthesize ftlProbeClient=_ftlProbeClient;
@property(retain, nonatomic) NrdPlaydelayReporter *playdelayReporter; // @synthesize playdelayReporter=_playdelayReporter;
@property(retain, nonatomic) UrlSessionRetryAuthority *urlSessionRetryAuthority; // @synthesize urlSessionRetryAuthority=_urlSessionRetryAuthority;
@property(retain, nonatomic) NFZuulPreprocessor *networkStatisticsPreprocessor; // @synthesize networkStatisticsPreprocessor=_networkStatisticsPreprocessor;
@property(retain, nonatomic) NetworkCategoryLogger *networkCategoryLogger; // @synthesize networkCategoryLogger=_networkCategoryLogger;
@property(retain, nonatomic) id <MSLClient> platformMslClient; // @synthesize platformMslClient=_platformMslClient;
@property(retain, nonatomic) IosMslClient *mslClient; // @synthesize mslClient=_mslClient;
@property(retain, nonatomic) PBOClient *pboClient; // @synthesize pboClient=_pboClient;
@property(retain, nonatomic) EdgeClient *edgeClient; // @synthesize edgeClient=_edgeClient;
@property(nonatomic) long long environment; // @synthesize environment=_environment;
@property(nonatomic) long long playbackCount; // @synthesize playbackCount=_playbackCount;
@property(nonatomic) long long nrdState; // @synthesize nrdState=_nrdState;
@property(retain, nonatomic) APIStateCleanupManager *apiStateCleanupManager; // @synthesize apiStateCleanupManager=_apiStateCleanupManager;
@property(retain, nonatomic) PlatformLogblobSinkProxy *platformLogblobSinkProxy; // @synthesize platformLogblobSinkProxy=_platformLogblobSinkProxy;
@property(retain, nonatomic) BRLLoggingValidator *brlLoggingValidator; // @synthesize brlLoggingValidator=_brlLoggingValidator;
@property(retain, nonatomic) BRLNetworkProxy *brlNetworkProxy; // @synthesize brlNetworkProxy=_brlNetworkProxy;
@property(retain, nonatomic) BladeRunnerLogging *offlineLogging; // @synthesize offlineLogging=_offlineLogging;
@property(retain, nonatomic) OfflineMetadataManager *offlineMetadataManager; // @synthesize offlineMetadataManager=_offlineMetadataManager;
@property(retain, nonatomic) id <NfOfflineContentManagerInternal> offlineContentManager; // @synthesize offlineContentManager=_offlineContentManager;
@property(retain, nonatomic) PrefetchManager *prefetchManager; // @synthesize prefetchManager=_prefetchManager;
@property(copy, nonatomic) NSArray *registrationHandlers; // @synthesize registrationHandlers=_registrationHandlers;
@property(nonatomic) __weak id <NrdHandler> handler; // @synthesize handler=_handler;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic, setter=setRegistrationController:) id <NfRegistrationController> registrationController; // @synthesize registrationController=_registrationController;
@property(nonatomic, getter=activatedHint) _Bool activatedHint; // @synthesize activatedHint=_activatedHint;
@property(readonly, nonatomic) NSObject<AppleNativeStorage> *storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) APIStateStore *stateStore; // @synthesize stateStore=_stateStore;
@property(setter=setNrdLogLevel:) long long nrdLogLevel; // @synthesize nrdLogLevel=_nrdLogLevel;
@property(readonly, nonatomic) NFLXNetworkInfoProvider *networkInfoProvider; // @synthesize networkInfoProvider=_networkInfoProvider;
@property(readonly, nonatomic) APIConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, nonatomic) NSObject<IDevice> *DAL; // @synthesize DAL=_DAL;
@property(readonly, nonatomic) id <InititalBandwidthCapReporterDelegate> inititalBandwidthCapReporterDelegate;
- (void)networkProxy:(id)arg1 didSendEvents:(id)arg2 error:(id)arg3;
- (void)networkProxy:(id)arg1 didSendLogblobs:(id)arg2 error:(id)arg3;
- (id)translateLogblob:(id)arg1;
@property(readonly, nonatomic) id <StoreCrypto> storeCrypto;
@property(readonly, nonatomic) id <LoggingValidationDelegate> loggingValidationDelegate;
@property(readonly, nonatomic) id <LoggingNetworkDelegate> loggingNetworkDelegate;
- (id)trustStoreFromString:(id)arg1;
- (void)pboClient:(id)arg1 didUpdateServerTime:(unsigned long long)arg2;
- (void)recordOfflineBytesDownloadedForVideo:(unsigned long long)arg1 andAudio:(unsigned long long)arg2 andText:(unsigned long long)arg3;
- (void)recordVoipBytesDownloaded:(unsigned long long)arg1 andBytesUploaded:(unsigned long long)arg2;
- (void)recordAudioBytesDownloaded:(unsigned long long)arg1 andBytesUploaded:(unsigned long long)arg2 forXid:(id)arg3;
- (void)recordVideoBytesDownloaded:(unsigned long long)arg1 andBytesUploaded:(unsigned long long)arg2 forXid:(id)arg3;
- (void)kickstartPlatformBackgroundTaskWithCompletion:(CDUnknownBlockType)arg1;
- (void)getBackgroundState:(_Bool *)arg1 andLastBackgroundStartingDate:(id *)arg2;
- (void)willEnterForeground:(id)arg1;
- (void)didBecomeActive:(id)arg1;
- (void)willResignActive:(id)arg1;
- (void)unregisterBackgroundCheckNotification;
- (void)registerBackgroundCheckNotification;
- (id)adaptiveStringValueforKey:(id)arg1;
- (long long)adaptiveIntegerValueForKey:(id)arg1 defaultIfNotPresent:(long long)arg2;
- (_Bool)isAdaptiveFlagTrue:(id)arg1 defaultIfNotPresent:(_Bool)arg2;
- (id)objectValueForKey:(id)arg1;
- (id)stringValueforKey:(id)arg1;
- (long long)integerValueForKey:(id)arg1 defaultIfNotPresent:(long long)arg2;
- (_Bool)isFlagTrue:(id)arg1 defaultIfNotPresent:(_Bool)arg2;
- (id)endpointUrlBaseForIosMslClient:(id)arg1;
- (void)logWithType:(id)arg1 payload:(id)arg2;
- (void)stopFTLProbe;
- (void)startFTLProbe;
- (void)setupFTLProbe;
- (id)branchingMovieIdsFromConfig;
- (void)setupBranchingMovieIds;
- (void)syncNetworkCategoryLoggerWithConfigState;
- (void)syncUrlSessionRetryAuthorityWithConfigState;
- (void)syncEsnHeaderWithConfigState;
- (void)syncExternalScreenAuditorWithConfigState;
- (void)syncReachabilityWithConfigState;
- (void)resetLoggingConfiguration;
- (void)setupLogblobDefaultValues;
- (void)setupLogging;
- (void)setupContentHeaderCache;
- (void)platformConfigurationDidChange:(id)arg1;
- (void)_considerPendingConfigUpdate;
- (void)unregisterForConfigChangeNotifications;
- (void)registerForConfigChangeNotifications;
- (void)voipCallStatisticsWereCollected:(id)arg1;
- (void)registerForVoipStatisticsNotifications;
@property(copy, nonatomic) NSString *uiVersion; // @dynamic uiVersion;
@property(readonly, nonatomic) NSString *currentNetworkId;
- (_Bool)isQuickplayCapable;
- (void)sendStartupLog:(_Bool)arg1;
- (void)stopNrdApplication:(id)arg1;
- (void)startNrdForEnvironment:(long long)arg1 configuration:(id)arg2;
- (void)_startNrdWithHandler:(id)arg1 forEnvironment:(long long)arg2 configuration:(id)arg3;
- (void)_factoryResetMdxIfNeeded:(id)arg1;
- (void)_setupDownloads;
- (void)startNrdWithHandler:(id)arg1 forEnvironment:(long long)arg2 configuration:(id)arg3;
- (void)startNrdWithHandler:(id)arg1 forEnvironment:(long long)arg2;
- (id)platformLogblobSink;
- (id)getPlatformLogger;
- (id)getOfflineMetadataManager;
- (id)getOfflineContentManager;
- (int)prefetchCacheManagerVersion;
- (id)playbackControllerForMovieId:(id)arg1 uniqueRequestId:(id)arg2 trackId:(id)arg3 fetchOptions:(unsigned long long)arg4;
- (id)playbackControllerForPlaybackRequest:(id)arg1;
- (id)playbackForPlaybackId:(id)arg1;
- (void)setSLSEnabled:(_Bool)arg1;
- (_Bool)isPlaybackOn;
- (_Bool)isPrefetchInflight:(unsigned long long)arg1;
- (void)startPrefetchForMovieId:(id)arg1 params:(id)arg2;
- (void)startPrefetchForMovieId:(id)arg1 trackId:(id)arg2 fetchOptions:(unsigned long long)arg3;
- (void)startPrefetchForPlaybackRequest:(id)arg1;
- (void)notifyBranchingMovieId:(id)arg1;
- (void)setupPrefetchManager;
- (void)logCrash:(id)arg1;
- (_Bool)log:(id)arg1 level:(long long)arg2 type:(id)arg3;
@property(readonly, nonatomic) id <NrdFtlStateDelegate> ftlStateDelegate;
@property(readonly, nonatomic) id <NFZuulHeaderStateProvider> zuulHeaderStateProvider;
- (void)didSetRegistrationController;
- (void)removeRegistrationHandler:(id)arg1;
- (void)addRegistrationHandler:(id)arg1;
- (id)streamingPlaybackWithPlaybackRequest:(id)arg1 playbackId:(id)arg2 andPrefetchCacheManager:(id)arg3 andConfig:(id)arg4 isBranching:(_Bool)arg5;
@property(readonly, nonatomic) id <PlatformConfigProvider> platformConfigProvider;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

