//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class BladeRunnerPlaybackReporter, ISCMasterIndex, NSArray, NSData, NSDictionary, NSMutableSet, NSString, NSURLSession, SubtitleDecrypt, SubtitleTranslate;
@protocol NfPlaybackController><NfSubtitleAudioController, PlatformConfigProvider;

@interface ISCParser : NSObject
{
    _Bool _useFourSegments;
    _Bool _useMultiSegments;
    _Bool _fourSegmentMaxISCFix;
    _Bool _useAdditionalLogging;
    _Bool _loaded;
    _Bool _seeking;
    unsigned int _bladeRunnerCdnId;
    int _startSeek;
    int _externalTiming;
    int _loadedTimeMax;
    int _loadedTimeMin;
    NSString *_dlId;
    NSURLSession *_networkSession;
    NSArray *_firstSegment;
    long long _firstSegmentNumber;
    NSArray *_secondSegment;
    long long _secondSegmentNumber;
    NSArray *_thirdSegment;
    long long _thirdSegmentNumber;
    NSArray *_fourthSegment;
    long long _fourthSegmentNumber;
    long long _multiSegmentState;
    NSArray *_endDurationMS;
    ISCMasterIndex *_masterIndex;
    NSString *_urlString;
    NSString *_bladeRunnerURL;
    NSString *_language;
    long long *_time;
    NSArray *_urlsCdnsArray;
    long long _retryCount;
    long long _timeBackOff;
    long long _timeBackOffMax;
    long long _loadingState;
    long long _masterSize;
    long long _masterOffset;
    NSString *_decryptKey;
    SubtitleTranslate *_subtitleTranslation;
    SubtitleDecrypt *_subtitleDecryption;
    NSDictionary *_masterIndexV2Dictionary;
    NSArray *_segmentIndexV2Array;
    id <NfPlaybackController><NfSubtitleAudioController> _playbackDelegate;
    NSMutableSet *_comparisonSet;
    NSData *_offlineData;
    BladeRunnerPlaybackReporter *_playbackReporter;
    id <PlatformConfigProvider> _platformConfig;
    NSString *_stateInformationForLoggingPrimary;
    NSString *_stateInformationForLoggingSecondary;
    long long _iscTimeoutSeconds;
}

+ (void)sendSubtitleErrorForDownloadableId:(id)arg1 cdnId:(long long)arg2 URL:(id)arg3 subtitleType:(id)arg4 language:(id)arg5 willRetry:(_Bool)arg6 format:(id)arg7;
- (void).cxx_destruct;
@property(nonatomic) long long iscTimeoutSeconds; // @synthesize iscTimeoutSeconds=_iscTimeoutSeconds;
@property(copy, nonatomic) NSString *stateInformationForLoggingSecondary; // @synthesize stateInformationForLoggingSecondary=_stateInformationForLoggingSecondary;
@property(copy, nonatomic) NSString *stateInformationForLoggingPrimary; // @synthesize stateInformationForLoggingPrimary=_stateInformationForLoggingPrimary;
@property(retain, nonatomic) id <PlatformConfigProvider> platformConfig; // @synthesize platformConfig=_platformConfig;
@property(nonatomic) int loadedTimeMin; // @synthesize loadedTimeMin=_loadedTimeMin;
@property(nonatomic) int loadedTimeMax; // @synthesize loadedTimeMax=_loadedTimeMax;
@property(nonatomic) __weak BladeRunnerPlaybackReporter *playbackReporter; // @synthesize playbackReporter=_playbackReporter;
@property(retain, nonatomic) NSData *offlineData; // @synthesize offlineData=_offlineData;
@property(nonatomic) int externalTiming; // @synthesize externalTiming=_externalTiming;
@property(nonatomic) int startSeek; // @synthesize startSeek=_startSeek;
@property(retain, nonatomic) NSMutableSet *comparisonSet; // @synthesize comparisonSet=_comparisonSet;
@property(nonatomic) __weak id <NfPlaybackController><NfSubtitleAudioController> playbackDelegate; // @synthesize playbackDelegate=_playbackDelegate;
@property(copy, nonatomic) NSArray *segmentIndexV2Array; // @synthesize segmentIndexV2Array=_segmentIndexV2Array;
@property(copy, nonatomic) NSDictionary *masterIndexV2Dictionary; // @synthesize masterIndexV2Dictionary=_masterIndexV2Dictionary;
@property(retain, nonatomic) SubtitleDecrypt *subtitleDecryption; // @synthesize subtitleDecryption=_subtitleDecryption;
@property(retain, nonatomic) SubtitleTranslate *subtitleTranslation; // @synthesize subtitleTranslation=_subtitleTranslation;
@property(copy, nonatomic) NSString *decryptKey; // @synthesize decryptKey=_decryptKey;
@property(nonatomic) long long masterOffset; // @synthesize masterOffset=_masterOffset;
@property(nonatomic) long long masterSize; // @synthesize masterSize=_masterSize;
@property(nonatomic) long long loadingState; // @synthesize loadingState=_loadingState;
@property(nonatomic) long long timeBackOffMax; // @synthesize timeBackOffMax=_timeBackOffMax;
@property(nonatomic) long long timeBackOff; // @synthesize timeBackOff=_timeBackOff;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(copy, nonatomic) NSArray *urlsCdnsArray; // @synthesize urlsCdnsArray=_urlsCdnsArray;
@property(nonatomic) long long *time; // @synthesize time=_time;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
@property(nonatomic) unsigned int bladeRunnerCdnId; // @synthesize bladeRunnerCdnId=_bladeRunnerCdnId;
@property(copy, nonatomic) NSString *bladeRunnerURL; // @synthesize bladeRunnerURL=_bladeRunnerURL;
@property(nonatomic) _Bool seeking; // @synthesize seeking=_seeking;
@property(nonatomic) _Bool loaded; // @synthesize loaded=_loaded;
@property(copy, nonatomic) NSString *urlString; // @synthesize urlString=_urlString;
@property(retain, nonatomic) ISCMasterIndex *masterIndex; // @synthesize masterIndex=_masterIndex;
@property(copy, nonatomic) NSArray *endDurationMS; // @synthesize endDurationMS=_endDurationMS;
@property(nonatomic) long long multiSegmentState; // @synthesize multiSegmentState=_multiSegmentState;
@property(nonatomic) _Bool useAdditionalLogging; // @synthesize useAdditionalLogging=_useAdditionalLogging;
@property(nonatomic) _Bool fourSegmentMaxISCFix; // @synthesize fourSegmentMaxISCFix=_fourSegmentMaxISCFix;
@property(nonatomic) _Bool useMultiSegments; // @synthesize useMultiSegments=_useMultiSegments;
@property(nonatomic) _Bool useFourSegments; // @synthesize useFourSegments=_useFourSegments;
@property(nonatomic) long long fourthSegmentNumber; // @synthesize fourthSegmentNumber=_fourthSegmentNumber;
@property(copy, nonatomic) NSArray *fourthSegment; // @synthesize fourthSegment=_fourthSegment;
@property(nonatomic) long long thirdSegmentNumber; // @synthesize thirdSegmentNumber=_thirdSegmentNumber;
@property(copy, nonatomic) NSArray *thirdSegment; // @synthesize thirdSegment=_thirdSegment;
@property(nonatomic) long long secondSegmentNumber; // @synthesize secondSegmentNumber=_secondSegmentNumber;
@property(copy, nonatomic) NSArray *secondSegment; // @synthesize secondSegment=_secondSegment;
@property(nonatomic) long long firstSegmentNumber; // @synthesize firstSegmentNumber=_firstSegmentNumber;
@property(copy, nonatomic) NSArray *firstSegment; // @synthesize firstSegment=_firstSegment;
@property(retain, nonatomic) NSURLSession *networkSession; // @synthesize networkSession=_networkSession;
@property(copy, nonatomic) NSString *dlId; // @synthesize dlId=_dlId;
- (int)maxLoadTime;
- (int)minLoadTime;
- (void)fifthSecondTimer;
- (unsigned int)countFromSegmentsForTime:(int)arg1 endTime:(int)arg2;
- (id)imagesFromSegmentsForTime:(int)arg1;
- (void)calculateDurations;
- (void)calculateDurationsV2;
- (_Bool)loadSegmentsIfNeededForTime:(int)arg1;
- (void)fullRangedSegments:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)fullRangedSegmentsV2:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)fullRangedSegmentsV3:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)fullRangedSegmentsV4:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)twoRangedSegmentsv4:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)singleRangedSegment:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)singleRangedSegmentV2:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)singleRangedSegmentV3:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)singleRangedSegmentV4:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)initialMultiSegmentState;
- (void)moveThroughMultiSegmentState;
- (long long)findSegmentForTime:(int)arg1;
- (_Bool)bytesRangeForSegment:(id)arg1 start:(long long *)arg2 end:(long long *)arg3 count:(unsigned int *)arg4;
- (_Bool)byteRangesForSegmentV2:(id)arg1 start:(long long *)arg2 end:(long long *)arg3 count:(unsigned int *)arg4;
- (id)imagesFromSegmentEntry:(id)arg1 withOffset:(long long)arg2 data:(id)arg3 errorString:(id)arg4;
- (id)imagesFromSegmentEntryV2:(id)arg1 withOffset:(long long)arg2 data:(id)arg3;
- (void)setPlaybackReporterTo:(id)arg1;
- (id)initWithUrlsCdns:(id)arg1 masterOffset:(long long)arg2 masterSize:(long long)arg3 language:(id)arg4 downloadableId:(id)arg5 time:(long long *)arg6 decryptKey:(id)arg7 playbackDelegate:(id)arg8 offlineData:(id)arg9 bladeRunnerUrl:(id)arg10 bladeRunnerCdnId:(unsigned int)arg11 playbackReporter:(id)arg12 platformConfig:(id)arg13;
- (void)clearFirstSegment:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (_Bool)clearThirdSegment:(long long)arg1 firstSegmentNumber:(long long)arg2;
- (void)loadMaster;
- (void)subtitleQOELogExpected:(unsigned int)arg1 missed:(unsigned int)arg2;
- (void)loadSegment;
- (void)downloadDataWithRangeOffset:(long long)arg1 rangeSize:(long long)arg2 errorString:(id)arg3 cancelOnScrub:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)requestWithURLString:(id)arg1 rangeOffset:(long long)arg2 rangeSize:(long long)arg3;
- (id)errorCode:(long long)arg1 errorMessage:(id)arg2;
- (void)cancelDownload;
- (void)retryCondition;
- (unsigned int)cdnIdFromRetryCount;
- (id)urlStringFromRetryCount;
- (id)segmentIndexV2Generate:(id)arg1;
- (long long)totalSegmentIndexSizeV2;
- (unsigned long long)segmentCountV2;
- (unsigned long long)segmentOffsetV2;
- (void)dealloc;
- (void)loggingState:(id)arg1 code:(long long)arg2 primary:(_Bool)arg3;
- (id)loggingStateString;

@end

