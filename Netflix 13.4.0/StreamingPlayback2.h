//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/AudioSessionAnnouncerDelegate-Protocol.h>
#import <Nbp/NfLoadingRequestPlaybackController-Protocol.h>
#import <Nbp/NfPlaybackControllerInternal-Protocol.h>

@class AVPlayer, AVPlayerItem, AVURLAsset, AudioSessionAnnouncer, AudioSubtitleManager, MonoClockTimestamp, NSArray, NSDate, NSDictionary, NSError, NSMutableDictionary, NSString, NSURLSession, NbpImageBasedSubtitleController, NflxMovieDetails, NflxTimer, PlaybackAuxiliaryDisplayProvider, StreamingMediaController, StreamingPlaybackSession, TimePitchAlgorithmManager;
@protocol NFImageBasedSubtitleController, NFPlaybackLoggerAuxiliaryLogInfo, NSObject, NfPlaybackAudioOption, NfPlaybackAuxiliaryDisplayProvider, NfPlaybackDelegate, NfPlaybackSubtitleOption, OS_dispatch_queue, OS_dispatch_source, PlatformConfigProvider;

@interface StreamingPlayback2 : NSObject <NfPlaybackControllerInternal, NfLoadingRequestPlaybackController, AudioSessionAnnouncerDelegate>
{
    _Bool _isUIAutoPlay;
    _Bool _postplayStarted;
    _Bool _waitingForISC;
    _Bool _playerItemIsReady;
    _Bool _playbackReachedEnd;
    _Bool _playbackStalled;
    _Bool _isMovieFinishedClosing;
    _Bool _didRecreateAVObjects;
    _Bool _allowAirplay;
    _Bool _forcedNarrative;
    _Bool _playerLikelyToKeepUp;
    _Bool _playbackStartedLogged;
    _Bool _autoStart;
    _Bool _errorPresentedToUser;
    _Bool _didEnterBackgroundLogged;
    _Bool _didCancelStallTimerOnBackgrounding;
    _Bool _effectiveRateRoundedHasChangedSinceLastTimerEvent;
    _Bool _isFork;
    _Bool _isFaststart;
    _Bool _isPlaybackClosed;
    _Bool _autoStartOnReload;
    _Bool _finishedLoadingAVPlayerAndItem;
    _Bool _keepOpenAtEnd;
    _Bool _finishingLoadingAVPlayerCalled;
    _Bool _reuseAVPlayer;
    _Bool _isReusingAVPlayer;
    _Bool _bookmarkUpdatedWithTimeProvider;
    _Bool _useAccurateTimingForBranchingPlayback;
    _Bool _playerShouldReportRateChange;
    _Bool _useStreamingPlaybackWeakRegistry;
    float _rate;
    int _videoBps;
    int _observedBps;
    float _timebaseEffectiveRate;
    id <NfPlaybackDelegate> _playbackDelegate;
    NSString *_uiLabel;
    id <NfPlaybackAudioOption> _audioOption;
    id <NfPlaybackSubtitleOption> _subtitleOption;
    AVPlayerItem *_avPlayerItem;
    double _preferredVideoNominalBps;
    AudioSubtitleManager *_audioSubtitlesManager;
    NSString *_lastReportedVideoDownloadbleId;
    NSString *_pcmStage;
    unsigned long long _peakBitrateIncreaseProgress;
    unsigned long long _peakBitrateIncreaseLastSetValue;
    AVPlayer *_avPlayer;
    NSString *_playbackId;
    NflxTimer *_playbackStalledTimer;
    PlaybackAuxiliaryDisplayProvider *_auxDisplay;
    NbpImageBasedSubtitleController *_nflxSubtitleController;
    NSArray *_manifestImageBasedSubtitleInformation;
    id <NSObject> _periodicTimeObserver;
    NSString *_activeAudioRoute;
    long long _totalTransferredBytes;
    NSURLSession *_networkSession;
    NSDictionary *_trackingInfo;
    NSString *_currentAudioName;
    NSString *_currentAudioBCP47;
    NSDate *_playbackStartTime;
    NSString *_lastReportedVideoStreamIdentifier;
    NSMutableDictionary *_accessLogUriToDuration;
    unsigned long long _lastReportedBytesTransferred;
    struct OpaqueCMTimebase *_timebase;
    NSObject<OS_dispatch_source> *_timerSource;
    NSArray *_availableVideoBps;
    NSDate *_lastVideoBpsSwitchDate;
    long long _lastVideoBpsIndex;
    long long _lastAccessLogPollingTS;
    long long _accessLogPollingInterval;
    double _creditStartSeconds;
    double _durationSeconds;
    NSString *_webVTTStylePlistUrl;
    NSError *_playerError;
    StreamingPlaybackSession *_streamingPlaybackSession;
    long long _trackerId;
    double _bookmarkSeconds;
    double _playbackTime;
    unsigned long long _lastReportedObservedThroughput;
    MonoClockTimestamp *_lastReportedObservedThroughputTimestamp;
    id <NSObject> _remoteCommandObserver;
    TimePitchAlgorithmManager *_timePitchManager;
    id <NFPlaybackLoggerAuxiliaryLogInfo> _auxiliaryLogInfo;
    AudioSessionAnnouncer *_asAnnouncer;
    CDStruct_1b6d18a9 _timerSourceNextFireTime;
    CDStruct_1b6d18a9 _bookmarkCMTime;
}

+ (id)lookupStreamingPlaybackByPlaybackId:(id)arg1;
+ (void)registerStreamingPlayback:(id)arg1;
+ (id)registrationTable;
- (void).cxx_destruct;
@property(nonatomic) _Bool useStreamingPlaybackWeakRegistry; // @synthesize useStreamingPlaybackWeakRegistry=_useStreamingPlaybackWeakRegistry;
@property(retain, nonatomic) AudioSessionAnnouncer *asAnnouncer; // @synthesize asAnnouncer=_asAnnouncer;
@property(retain, nonatomic) id <NFPlaybackLoggerAuxiliaryLogInfo> auxiliaryLogInfo; // @synthesize auxiliaryLogInfo=_auxiliaryLogInfo;
@property(retain, nonatomic) TimePitchAlgorithmManager *timePitchManager; // @synthesize timePitchManager=_timePitchManager;
@property(nonatomic) _Bool playerShouldReportRateChange; // @synthesize playerShouldReportRateChange=_playerShouldReportRateChange;
@property(nonatomic) CDStruct_1b6d18a9 bookmarkCMTime; // @synthesize bookmarkCMTime=_bookmarkCMTime;
@property(nonatomic) _Bool useAccurateTimingForBranchingPlayback; // @synthesize useAccurateTimingForBranchingPlayback=_useAccurateTimingForBranchingPlayback;
@property(nonatomic) _Bool bookmarkUpdatedWithTimeProvider; // @synthesize bookmarkUpdatedWithTimeProvider=_bookmarkUpdatedWithTimeProvider;
@property(retain, nonatomic) id <NSObject> remoteCommandObserver; // @synthesize remoteCommandObserver=_remoteCommandObserver;
@property(retain, nonatomic) MonoClockTimestamp *lastReportedObservedThroughputTimestamp; // @synthesize lastReportedObservedThroughputTimestamp=_lastReportedObservedThroughputTimestamp;
@property(nonatomic) unsigned long long lastReportedObservedThroughput; // @synthesize lastReportedObservedThroughput=_lastReportedObservedThroughput;
@property(nonatomic) _Bool isReusingAVPlayer; // @synthesize isReusingAVPlayer=_isReusingAVPlayer;
@property(nonatomic) _Bool reuseAVPlayer; // @synthesize reuseAVPlayer=_reuseAVPlayer;
@property(nonatomic) double playbackTime; // @synthesize playbackTime=_playbackTime;
@property(nonatomic) double bookmarkSeconds; // @synthesize bookmarkSeconds=_bookmarkSeconds;
@property(nonatomic) long long trackerId; // @synthesize trackerId=_trackerId;
@property(retain, nonatomic) StreamingPlaybackSession *streamingPlaybackSession; // @synthesize streamingPlaybackSession=_streamingPlaybackSession;
@property(nonatomic) _Bool finishingLoadingAVPlayerCalled; // @synthesize finishingLoadingAVPlayerCalled=_finishingLoadingAVPlayerCalled;
@property(retain, nonatomic) NSError *playerError; // @synthesize playerError=_playerError;
@property(nonatomic) _Bool keepOpenAtEnd; // @synthesize keepOpenAtEnd=_keepOpenAtEnd;
@property(retain, nonatomic) NSString *webVTTStylePlistUrl; // @synthesize webVTTStylePlistUrl=_webVTTStylePlistUrl;
@property(nonatomic) double durationSeconds; // @synthesize durationSeconds=_durationSeconds;
@property(nonatomic) double creditStartSeconds; // @synthesize creditStartSeconds=_creditStartSeconds;
@property(nonatomic) _Bool finishedLoadingAVPlayerAndItem; // @synthesize finishedLoadingAVPlayerAndItem=_finishedLoadingAVPlayerAndItem;
@property(nonatomic) _Bool autoStartOnReload; // @synthesize autoStartOnReload=_autoStartOnReload;
@property(nonatomic) _Bool isPlaybackClosed; // @synthesize isPlaybackClosed=_isPlaybackClosed;
@property(nonatomic) _Bool isFaststart; // @synthesize isFaststart=_isFaststart;
@property(nonatomic) _Bool isFork; // @synthesize isFork=_isFork;
@property(nonatomic) long long accessLogPollingInterval; // @synthesize accessLogPollingInterval=_accessLogPollingInterval;
@property(nonatomic) long long lastAccessLogPollingTS; // @synthesize lastAccessLogPollingTS=_lastAccessLogPollingTS;
@property(nonatomic) long long lastVideoBpsIndex; // @synthesize lastVideoBpsIndex=_lastVideoBpsIndex;
@property(retain, nonatomic) NSDate *lastVideoBpsSwitchDate; // @synthesize lastVideoBpsSwitchDate=_lastVideoBpsSwitchDate;
@property(retain, nonatomic) NSArray *availableVideoBps; // @synthesize availableVideoBps=_availableVideoBps;
@property(nonatomic) _Bool effectiveRateRoundedHasChangedSinceLastTimerEvent; // @synthesize effectiveRateRoundedHasChangedSinceLastTimerEvent=_effectiveRateRoundedHasChangedSinceLastTimerEvent;
@property(nonatomic) float timebaseEffectiveRate; // @synthesize timebaseEffectiveRate=_timebaseEffectiveRate;
@property(nonatomic) CDStruct_1b6d18a9 timerSourceNextFireTime; // @synthesize timerSourceNextFireTime=_timerSourceNextFireTime;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(nonatomic) struct OpaqueCMTimebase *timebase; // @synthesize timebase=_timebase;
@property(nonatomic) _Bool didCancelStallTimerOnBackgrounding; // @synthesize didCancelStallTimerOnBackgrounding=_didCancelStallTimerOnBackgrounding;
@property(nonatomic) _Bool didEnterBackgroundLogged; // @synthesize didEnterBackgroundLogged=_didEnterBackgroundLogged;
@property(nonatomic) unsigned long long lastReportedBytesTransferred; // @synthesize lastReportedBytesTransferred=_lastReportedBytesTransferred;
@property(retain, nonatomic) NSMutableDictionary *accessLogUriToDuration; // @synthesize accessLogUriToDuration=_accessLogUriToDuration;
@property(retain, nonatomic) NSString *lastReportedVideoStreamIdentifier; // @synthesize lastReportedVideoStreamIdentifier=_lastReportedVideoStreamIdentifier;
@property(nonatomic) int observedBps; // @synthesize observedBps=_observedBps;
@property(nonatomic) int videoBps; // @synthesize videoBps=_videoBps;
@property(retain, nonatomic) NSDate *playbackStartTime; // @synthesize playbackStartTime=_playbackStartTime;
@property(nonatomic) _Bool errorPresentedToUser; // @synthesize errorPresentedToUser=_errorPresentedToUser;
@property(nonatomic) _Bool autoStart; // @synthesize autoStart=_autoStart;
@property(retain, nonatomic) NSString *currentAudioBCP47; // @synthesize currentAudioBCP47=_currentAudioBCP47;
@property(retain, nonatomic) NSString *currentAudioName; // @synthesize currentAudioName=_currentAudioName;
@property(retain, nonatomic) NSDictionary *trackingInfo; // @synthesize trackingInfo=_trackingInfo;
@property(retain, nonatomic) NSURLSession *networkSession; // @synthesize networkSession=_networkSession;
@property(nonatomic) long long totalTransferredBytes; // @synthesize totalTransferredBytes=_totalTransferredBytes;
@property(nonatomic) float rate; // @synthesize rate=_rate;
@property(nonatomic) _Bool playbackStartedLogged; // @synthesize playbackStartedLogged=_playbackStartedLogged;
@property(nonatomic) _Bool playerLikelyToKeepUp; // @synthesize playerLikelyToKeepUp=_playerLikelyToKeepUp;
@property(nonatomic) _Bool forcedNarrative; // @synthesize forcedNarrative=_forcedNarrative;
@property(nonatomic) _Bool allowAirplay; // @synthesize allowAirplay=_allowAirplay;
@property(nonatomic) _Bool didRecreateAVObjects; // @synthesize didRecreateAVObjects=_didRecreateAVObjects;
@property(nonatomic) _Bool isMovieFinishedClosing; // @synthesize isMovieFinishedClosing=_isMovieFinishedClosing;
@property(nonatomic) _Bool playbackStalled; // @synthesize playbackStalled=_playbackStalled;
@property(nonatomic) _Bool playbackReachedEnd; // @synthesize playbackReachedEnd=_playbackReachedEnd;
@property(nonatomic) _Bool playerItemIsReady; // @synthesize playerItemIsReady=_playerItemIsReady;
@property(retain, nonatomic) NSString *activeAudioRoute; // @synthesize activeAudioRoute=_activeAudioRoute;
@property(retain, nonatomic) id <NSObject> periodicTimeObserver; // @synthesize periodicTimeObserver=_periodicTimeObserver;
@property(nonatomic) _Bool waitingForISC; // @synthesize waitingForISC=_waitingForISC;
@property(retain, nonatomic) NSArray *manifestImageBasedSubtitleInformation; // @synthesize manifestImageBasedSubtitleInformation=_manifestImageBasedSubtitleInformation;
@property(retain, nonatomic) NbpImageBasedSubtitleController *nflxSubtitleController; // @synthesize nflxSubtitleController=_nflxSubtitleController;
@property(retain, nonatomic) PlaybackAuxiliaryDisplayProvider *auxDisplay; // @synthesize auxDisplay=_auxDisplay;
@property(retain, nonatomic) NflxTimer *playbackStalledTimer; // @synthesize playbackStalledTimer=_playbackStalledTimer;
@property(retain, nonatomic) NSString *playbackId; // @synthesize playbackId=_playbackId;
@property(retain, nonatomic) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(nonatomic) unsigned long long peakBitrateIncreaseLastSetValue; // @synthesize peakBitrateIncreaseLastSetValue=_peakBitrateIncreaseLastSetValue;
@property(nonatomic) unsigned long long peakBitrateIncreaseProgress; // @synthesize peakBitrateIncreaseProgress=_peakBitrateIncreaseProgress;
@property(retain, nonatomic) NSString *pcmStage; // @synthesize pcmStage=_pcmStage;
@property(retain, nonatomic) NSString *lastReportedVideoDownloadbleId; // @synthesize lastReportedVideoDownloadbleId=_lastReportedVideoDownloadbleId;
@property(retain, nonatomic) AudioSubtitleManager *audioSubtitlesManager; // @synthesize audioSubtitlesManager=_audioSubtitlesManager;
@property(nonatomic) double preferredVideoNominalBps; // @synthesize preferredVideoNominalBps=_preferredVideoNominalBps;
@property(retain, nonatomic) AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(retain, nonatomic) id <NfPlaybackSubtitleOption> subtitleOption; // @synthesize subtitleOption=_subtitleOption;
@property(retain, nonatomic) id <NfPlaybackAudioOption> audioOption; // @synthesize audioOption=_audioOption;
@property(nonatomic) _Bool postplayStarted; // @synthesize postplayStarted=_postplayStarted;
- (id)uiLabel;
- (_Bool)isUIAutoPlay;
- (void)setPlaybackDelegate:(id)arg1;
- (id)playbackDelegate;
- (void)breakRetainCycleInPlayback;
- (void)audioSessionAnnouncerAnnoucesChanges:(id)arg1;
- (void)updateAuxiliaryLogInfo:(id)arg1;
- (void)didEndSegmentTransitionWithPlaybackState:(id)arg1 transitionType:(long long)arg2 success:(_Bool)arg3 transitionRecord:(id)arg4;
- (void)didEndSegmentTransitionWithPlaybackState:(id)arg1 transitionType:(long long)arg2 success:(_Bool)arg3;
- (void)willBeginSegmentTransitionWithPlaybackState:(id)arg1 userInitiated:(_Bool)arg2 seamlessRequested:(_Bool)arg3 transitionWeight:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)willBeginSegmentTransitionWithPlaybackState:(id)arg1 userInitiated:(_Bool)arg2 seamlessRequested:(_Bool)arg3 transitionWeight:(long long)arg4;
- (void)logApplicationError:(id)arg1 errorContext:(id)arg2 fromFunction:(id)arg3;
- (id)playbackLoggingController;
- (void)setAutoStart:(_Bool)arg1 onReloadForPlaybackId:(id)arg2;
- (id)createForkedPlayerWithStartingPts:(double)arg1;
- (void)applyPlaybackThroughputLimitationWithPreferredVideoNominalBps:(double)arg1;
- (void)applyPlaybackThroughputLimitation;
- (void)removeLimitationOnPlayback;
- (id)getCurrentPlaybackBitRate;
- (void)collectVideoNorminalBps;
- (void)limitVideoThroughputByNominalBps:(double)arg1;
- (void)hasDisplayedErrorToUser;
- (void)pipActive:(_Bool)arg1;
- (void)airplayActive:(_Bool)arg1;
- (void)userUnpaused;
- (void)userPaused;
- (void)userInteraction;
- (void)beginSeek;
- (id)aspectDetailsForMovie;
- (void)logPlaybackEndedWithError;
- (void)logPIPActive:(_Bool)arg1;
- (void)logAirPlayActive:(_Bool)arg1;
- (void)logPause:(_Bool)arg1;
- (void)logSeekFrom:(double)arg1 to:(double)arg2;
- (void)updateImageSubtitleViewVisibility;
- (void)activate;
- (void)inactivate;
- (void)enableStickyForSelectedAudioSubtitle;
- (void)selectSubtitleOption:(id)arg1;
- (void)selectAudioOption:(id)arg1;
- (id)availableSubtitleOptions;
- (id)availableAudioOptions;
- (id)selectedSubtitleOption;
- (id)selectedAudioOption;
- (void)imageBasedSubtitleSegmentsReady;
- (id)mediaSelectionSubtitleGroup;
- (void)setUiLabel:(id)arg1;
- (void)setIsUIAutoPlay:(_Bool)arg1;
- (void)setPlayerUIPresented:(id)arg1;
- (void)updateTrackingInfo:(id)arg1;
- (void)setPlayerAuxiliaryDisplayProvider:(id)arg1;
- (void)resumePlaybackFrom:(double)arg1 to:(double)arg2;
- (void)playerEndCreditStartsCallback;
- (_Bool)isBranching;
- (void)handlePlaybackTimeUpdatedWithTimeInterval:(double)arg1;
- (void)_handlePlaybackTimeUpdatedWithAccessLogForMovieTime:(double)arg1;
- (id)parseVideoDownloadbleIdFromStreamUrlString:(id)arg1;
- (void)_stopPlaybackStalledTimer;
- (void)_playbackStalledTimerFired;
- (void)_startPlaybackStalledTimer;
- (void)handleStalledNotification:(_Bool)arg1;
- (void)reportLastObservedThroughput:(unsigned long long)arg1;
- (void)playerPeriodicTimeObserverCallback:(CDStruct_1b6d18a9)arg1;
- (void)storeVideoBps:(int)arg1 observedBps:(int)arg2;
- (_Bool)shouldIgnoreAVFoundationError11819;
- (void)willEnterForeground:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (void)playerItemImageBasedSubtitleRecoverdFromStall:(id)arg1;
- (void)playerItemImageBasedSubtitleStalled:(id)arg1;
- (void)playerItemImageBasedSubtitleStalledDontLog:(id)arg1;
- (void)playerItemPlaybackStalled:(id)arg1;
- (void)sendDownloadableIdInfoToHud;
- (void)playerItemFailedToReachEnd:(id)arg1;
- (void)playerItemDidReachEnd:(id)arg1;
- (void)notifyDelegateOfMovieBegan;
- (void)notifyDelegateOfMovieReadyToPlay;
- (void)subtitleSegmentsReady;
- (id)timeControlStatusAsString:(long long)arg1;
- (void)handleRateChangeForPlayer:(id)arg1;
- (void)handlePlayerLikelyToKeepUpForPlayerItem:(id)arg1;
- (void)_sendPlaybackStarted:(id)arg1;
- (void)_playbackRecoveredFromStall:(id)arg1;
- (void)_playbackStartedOrRecoveredAfterPlaydelayCounting:(id)arg1;
- (void)_playbackStartedOrRecovered:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)streamingPlaybackSession:(id)arg1 didDetectLicenseError:(id)arg2 shouldPause:(_Bool)arg3;
- (void)_handleNewPlayerError:(id)arg1;
- (void)playerItemTimebaseEffectiveRateChanged;
- (void)handlePlayerItemTimebaseEffectiveRateChanged;
- (void)playerItemTimebaseTimeJumped;
- (void)endObservingTimebase;
- (void)beginObservingTimebase:(struct OpaqueCMTimebase *)arg1;
- (void)updateTimerSourceNextFireTime:(CDStruct_1b6d18a9)arg1;
- (void)updateTimerSourceNextFireTime:(CDStruct_1b6d18a9)arg1 forTimebase:(struct OpaqueCMTimebase *)arg2;
- (void)handleTimebaseTimerFired;
- (void)setupCMTimebaseTimerDispatchSource:(id)arg1;
- (void)endObservingPlayer:(id)arg1;
- (void)beginObservingPlayer:(id)arg1;
- (void)endObservingPlayerItem:(id)arg1;
- (void)beginObservingPlayerItem:(id)arg1;
- (void)playlistForRequestedM3u8:(id)arg1 forLoadingRequest:(id)arg2;
- (id)unencryptedWebVTTFileForRequest:(id)arg1;
- (void)encryptionKeyForStream:(id)arg1 forLoadingRequest:(id)arg2;
- (_Bool)shouldNotifyDelegateOfMovieOpened;
- (void)notifyDelegateOfMovieOpened;
- (void)finishLoadingAVPlayerAndItem;
- (void)finishLoadingAVPlayer:(id)arg1;
- (void)loadAvPlayer:(id)arg1;
- (_Bool)recreateAVObjects:(id)arg1 andLog:(id)arg2;
- (_Bool)isMediaServiceCrashed:(long long)arg1;
- (id)buildNonWebVTTSubtitleMenuArrayFromManifestSubtitleInformation;
- (void)webVTTPlistLoad:(id)arg1;
- (void)updatePlayerErrorWithFailedContentUrl;
- (void)movieOpenedWithError:(id)arg1;
- (id)getPlaybackPCMStage;
- (void)setPlaybackPCMStage:(id)arg1;
- (void)retrieveStatusForPrefetchCacheManager:(int *)arg1 prefetchSucceeded:(_Bool *)arg2 cacheExpired:(_Bool *)arg3;
- (_Bool)isAirplayOn;
- (_Bool)shouldProceedIfAirplayIsOn;
- (void)handleAudioRouteChangeNotification:(id)arg1;
- (void)handleScreenDidConnectNotification:(id)arg1;
- (_Bool)isAirplayAllowed;
- (void)screenDidConnect:(id)arg1;
- (void)audioRouteChange:(id)arg1;
- (_Bool)hasMovieOpened;
- (_Bool)hasPrefetchSucceeded;
- (_Bool)hasMovieInitiated;
- (_Bool)hasMovieClosed;
- (_Bool)isLicenseFailed;
- (void)expirePlayback;
- (void)processCacheExpiration;
- (_Bool)isCacheExpired;
- (void)teardownAVPlayerWithIntentToRecreate:(_Bool)arg1;
- (void)finishClosing;
- (void)startPlay;
- (double)currentPlaybackLocation;
- (id)dumpState;
- (void)closePlayback;
- (void)resumePrefetch;
- (void)cancelPrefetch;
- (id)xid;
- (void)startPlaybackWithTrackingInfo:(id)arg1;
- (void)cacheHasExpired;
- (void)removePlaybackForwardBufferLimitation;
- (void)applyPlaybackForwardBufferLimitation;
- (void)applyPlaybackBitrateLimitation;
- (void)stepPlaybackBitrateLimitationRemoval;
- (void)delayStepPlaybackBitrateLimitationRemoval;
- (void)startPlaybackBitrateLimitationRemoval;
- (void)setPlaydelayTimestamp:(id)arg1;
- (void)startPlaydelayCounting;
- (void)initPlaybackParameters:(id)arg1 startingPtsSeconds:(double)arg2 durationSeconds:(double)arg3 creditStartSeconds:(double)arg4 trackId:(id)arg5 webVTTPlistLocation:(id)arg6 autoStart:(_Bool)arg7 keepOpenAtEnd:(_Bool)arg8;
- (void)updateBookmarkSeconds:(double)arg1;
- (void)updateBookmarkIfNeeded;
- (void)initiatePlayback:(id)arg1 startingPtsSeconds:(double)arg2 durationSeconds:(double)arg3 creditStartSeconds:(double)arg4 trackId:(id)arg5 webVTTPlistLocation:(id)arg6 autoStart:(_Bool)arg7 keepOpenAtEnd:(_Bool)arg8;
- (void)initiatePlayback:(id)arg1 startingPtsSeconds:(double)arg2 durationSeconds:(double)arg3 creditStartSeconds:(double)arg4 trackingInfo:(id)arg5 webVTTPlistLocation:(id)arg6 autoStart:(_Bool)arg7 keepOpenAtEnd:(_Bool)arg8 allowAirplay:(_Bool)arg9;
@property(readonly, nonatomic) id <NfPlaybackAuxiliaryDisplayProvider> playerAuxiliaryDisplayProvider;
@property(readonly, nonatomic) id <NFImageBasedSubtitleController> imageBasedSubtitleController;
- (void)filterUIPlayContext:(vector_153622dc *)arg1;
- (_Bool)couldSupportReuseAVPlayer;
- (void)dealloc;
- (_Bool)isActiveFork;
- (double)minimalVideoFps;
@property(readonly, nonatomic) double playbackInitiateTimestamp;
@property(readonly, nonatomic) _Bool didUserStartPlayback;
- (_Bool)hasPlayedDolby;
- (_Bool)hasPlayedDovi;
@property(readonly, nonatomic) AVURLAsset *avAsset;
@property(readonly, nonatomic) id <PlatformConfigProvider> playbackConfig;
@property(readonly, nonatomic) StreamingMediaController *streamingMediaController;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *playbackQueue;
@property(nonatomic) unsigned long long fetchOptions;
@property(readonly, nonatomic) NflxMovieDetails *movieDetails;
@property(readonly, nonatomic) _Bool isMovieClosed;
@property(readonly, nonatomic) _Bool isMovieOpened;
@property(readonly, nonatomic) NSString *movieId;
- (id)platformPlaybackRequest;
- (id)initWithPlaybackRequest:(id)arg1 playbackId:(id)arg2 andPrefetchCacheManager:(id)arg3 andConfig:(id)arg4 isBranching:(_Bool)arg5 streamingPlaybackSession:(id)arg6;
- (id)initWithStreamingPlaybackSession:(id)arg1 playbackId:(id)arg2;
- (id)initWithPlaybackRequest:(id)arg1 playbackId:(id)arg2 andPrefetchCacheManager:(id)arg3 andConfig:(id)arg4 isBranching:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

