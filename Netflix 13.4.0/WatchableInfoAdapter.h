//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/OfflinePlaybackDelegate-Protocol.h>
#import <Nbp/OfflineRecordProtocol-Protocol.h>

@class APIStateStore, NSData, NSDate, NSDictionary, NSError, NSNumber, NSString, NflxMovieDetails, OfflineAsset, WatchableInfo;

@interface WatchableInfoAdapter : NSObject <OfflineRecordProtocol, OfflinePlaybackDelegate>
{
    WatchableInfo *_watchableInfo;
    APIStateStore *_stateStore;
    OfflineAsset *_offlineAsset;
}

- (void).cxx_destruct;
@property(retain) OfflineAsset *offlineAsset; // @synthesize offlineAsset=_offlineAsset;
@property(retain) APIStateStore *stateStore; // @synthesize stateStore=_stateStore;
@property(retain) WatchableInfo *watchableInfo; // @synthesize watchableInfo=_watchableInfo;
- (_Bool)startPlayWindow;
- (void)prepareForPlayback:(CDUnknownBlockType)arg1;
- (void)playbackFinished;
- (id)offlineRecord;
- (id)loggableSnapshotForEvent:(id)arg1;
- (id)loggableSnapshot;
- (void)deleteFromDb;
- (void)removeAllFilePaths;
- (void)removeFilePathForKey:(id)arg1;
- (id)filePathForKey:(id)arg1;
- (void)setApiLink:(id)arg1 forKey:(id)arg2;
- (id)apiLinkForKey:(id)arg1;
- (void)setPlaylist:(id)arg1 forKey:(id)arg2;
- (id)playlistForKey:(id)arg1;
- (id)incrementRetryCount;
- (id)calculatedAssetSize;
- (id)assetURL;
@property(retain) NSDictionary *uiMetadata;
@property(retain) NSData *secureStop;
@property(retain) NSError *networkError;
@property(retain) NSDictionary *taskProgress;
@property(retain) NSData *artwork;
@property(retain) NSDictionary *avOptions;
@property(retain) NSDictionary *trackingInfo;
@property(retain) NSDictionary *loggingDetails;
@property(retain) NflxMovieDetails *movieDetails;
@property(retain) NSDictionary *playbackLimitations;
@property(retain) NSData *contentKeyHash;
@property(retain) NSData *persistedContentKey;
@property(retain) NSError *lastError;
@property(retain) NSDictionary *imageSubtitles;
@property(retain) NSDate *lastReportedProgressTime;
@property(retain) NSDate *downloadCompleteTime;
@property(retain) NSString *licenseReceiptOsVersion;
@property(retain) NSDate *manifestCompleteTime;
@property(retain) NSDate *downloadStartTime;
@property(retain) NSNumber *retryCount;
@property(retain) NSString *title;
@property(retain) NSNumber *yearlyLimitWarningShown;
@property(retain) NSNumber *allocationsRemaining;
@property(retain) NSString *yearlyLimitationType;
@property(retain) NSDate *refreshLicenseTime;
@property(retain) NSDate *licenseEnd;
@property(retain) NSNumber *playWindowRefreshLimit;
@property(retain) NSDate *currentPlayWindowEnd;
@property(retain) NSNumber *playWindowInterval;
@property(retain) NSNumber *autoRefreshAttempts;
@property(retain) NSNumber *autoRefreshAllowed;
@property(retain) NSNumber *firedDeactivateEvent;
@property(retain) NSNumber *firedCompleteEvent;
@property(retain) NSString *assetPath;
@property(retain) NSNumber *assetActualSize;
@property(retain) NSNumber *assetExpectedSize;
@property(retain) NSNumber *isSupplemental;
@property(retain) NSNumber *isClearContent;
@property(retain) NSNumber *isBranching;
@property(retain) NSNumber *smartDownload;
@property(retain) NSNumber *movieFetchOptions;
@property(retain) NSNumber *downloadProgress;
@property(retain) NSString *downloadState;
@property(readonly) NSString *profileGUID;
@property(readonly) NSString *sourceShadowCacheId;
@property(readonly) NSString *trackId;
@property(readonly) NSString *downloadXid;
@property(readonly) NSString *offlineXid;
@property(readonly) NSString *downloadQuality;
@property(readonly) NSString *movieId;
@property(readonly) NSDate *timeCreated;
@property(readonly) NSNumber *downloadId;
- (id)initWithWatchableInfo:(id)arg1 stateStore:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

