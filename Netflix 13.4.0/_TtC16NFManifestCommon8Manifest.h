//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSString;

@interface _TtC16NFManifestCommon8Manifest : NSObject
{
    // Error parsing type: , name: manifest
}

+ (id)parseWatermarkInfoWithManifestDictionary:(id)arg1;
+ (id)parseVideoAspectDetailsWithManifestDictionary:(id)arg1;
+ (id)parseMediaArrayWithManifestDictionary:(id)arg1;
+ (id)dlid2PsshMapWithManifestDictionary:(id)arg1;
+ (id)parseVideoWithManifestDictionary:(id)arg1 config:(id)arg2;
+ (id)drmHeadersFromTrack:(id)arg1;
+ (id)parseAudioWithManifestDictionary:(id)arg1 config:(id)arg2;
+ (id)parseSubtitlesWithManifestDictionary:(id)arg1 config:(id)arg2;
+ (id)convertNewWithSubtitleUrls:(id)arg1 wihtServers:(id)arg2;
+ (id)convertWithSubtitleUrls:(id)arg1 wihtServers:(id)arg2;
+ (id)rankSortedCdnInfoArrayForServers:(id)arg1 manifest:(id)arg2;
- (void).cxx_destruct;
- (id)init;
@property(nonatomic, readonly) NSArray *trickplayInfos;
@property(nonatomic, readonly) NSDictionary *downloadIdToVideoResolutionClass;
@property(nonatomic, readonly) NSDictionary *maxBitrateByVideoResolutionClass;
- (id)validCdnForStream:(id)arg1;
- (_Bool)isAudioTrackInTrackPrefereceArray:(id)arg1;
- (_Bool)isTextTrackInTrackPrefereceArray:(id)arg1;
- (void)enumerateTracks:(CDUnknownBlockType)arg1;
- (void)enumerateVideoTracks:(CDUnknownBlockType)arg1;
- (void)enumerateTextTracks:(CDUnknownBlockType)arg1;
- (void)enumerateAudioTracks:(CDUnknownBlockType)arg1;
- (id)locationForKey:(id)arg1;
- (id)cdnInfoAfter:(id)arg1 validCdnIdSet:(id)arg2;
- (id)cdnInfoFromCdnId:(long long)arg1;
@property(nonatomic, readonly) NSArray *rankSortedCdnInfoArray;
- (id)searchForVideoNewTrackId:(id)arg1 inAllVideoTracks:(id)arg2;
- (id)searchForTextNewTrackId:(id)arg1 inAllTextTracks:(id)arg2;
- (id)searchForAudioNewTrackId:(id)arg1 inAllAudioTracks:(id)arg2;
- (id)searchForVideoTrackId:(id)arg1 inAllVideoTracks:(id)arg2;
- (id)searchForTextTrackId:(id)arg1 inAllTextTracks:(id)arg2;
- (id)searchForAudioTrackId:(id)arg1 inAllAudioTracks:(id)arg2;
@property(nonatomic, readonly) NSArray *sortedTrackPreferenceArray;
@property(nonatomic, readonly) NSString *movieId;
- (id)initWithDictionary:(id)arg1;

@end

