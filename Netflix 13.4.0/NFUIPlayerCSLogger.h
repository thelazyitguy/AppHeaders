//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NFUIPlayerCSLoggerLoggingProtocol-Protocol.h"

@class NFUIPlaybackRequest, NSNumber, NSString;
@protocol NFUIPlayerCSLoggerLoggingProtocol;

@interface NFUIPlayerCSLogger : NSObject <NFUIPlayerCSLoggerLoggingProtocol>
{
    NFUIPlaybackRequest *_currentPlaybackRequest;
    NSString *_currentPlaybackXid;
    NSNumber *_actualOffsetHint;
    NSNumber *_startPlayLoggerSessionId;
    NSNumber *_playbackLoggerSessionId;
    NSNumber *_xidLoggerContextId;
    NSNumber *_interrupterSessionId;
    NSNumber *_mediaPlayerContextId;
    id <NFUIPlayerCSLoggerLoggingProtocol> _csLoggerDelegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <NFUIPlayerCSLoggerLoggingProtocol> csLoggerDelegate; // @synthesize csLoggerDelegate=_csLoggerDelegate;
@property(retain, nonatomic) NSNumber *mediaPlayerContextId; // @synthesize mediaPlayerContextId=_mediaPlayerContextId;
@property(retain, nonatomic) NSNumber *interrupterSessionId; // @synthesize interrupterSessionId=_interrupterSessionId;
@property(retain, nonatomic) NSNumber *xidLoggerContextId; // @synthesize xidLoggerContextId=_xidLoggerContextId;
@property(retain, nonatomic) NSNumber *playbackLoggerSessionId; // @synthesize playbackLoggerSessionId=_playbackLoggerSessionId;
@property(retain, nonatomic) NSNumber *startPlayLoggerSessionId; // @synthesize startPlayLoggerSessionId=_startPlayLoggerSessionId;
@property(retain, nonatomic) NSNumber *actualOffsetHint; // @synthesize actualOffsetHint=_actualOffsetHint;
@property(retain, nonatomic) NSString *currentPlaybackXid; // @synthesize currentPlaybackXid=_currentPlaybackXid;
@property(retain, nonatomic) NFUIPlaybackRequest *currentPlaybackRequest; // @synthesize currentPlaybackRequest=_currentPlaybackRequest;
- (void)cancelLoggerSession:(id)arg1;
- (void)endLoggerSession:(id)arg1;
- (id)startLoggerSession:(id)arg1 data:(id)arg2;
- (id)startLoggerSession:(id)arg1;
- (id)addContext:(id)arg1 data:(id)arg2;
- (void)addExclusiveMediaOffsetContextWithSeconds:(double)arg1;
- (void)removeContextId:(id)arg1;
- (id)addMediaPlayerContext;
- (id)seekLogging:(CDUnknownBlockType)arg1 withGesture:(id)arg2 gestureData:(id)arg3 andCommand:(id)arg4;
- (id)doubleTapSkipAheadLogging:(CDUnknownBlockType)arg1;
- (id)doubleTapSkipBackLogging:(CDUnknownBlockType)arg1;
- (id)seekLogging:(CDUnknownBlockType)arg1 withFocus:(id)arg2 focusData:(id)arg3 andCommand:(id)arg4;
- (id)scrubSeekLogging:(CDUnknownBlockType)arg1;
- (id)skipAheadButtonLogging:(CDUnknownBlockType)arg1;
- (id)skipBackButtonLogging:(CDUnknownBlockType)arg1;
- (void)endInterrupterPresentationSession;
- (void)startInterrupterPresentationSession;
- (void)endFocusSession:(id)arg1;
- (id)startFocusSessionWithData:(id)arg1;
- (void)logPerceivedPlayDelayEvent:(id)arg1;
- (void)renewPlaybackSessionId;
- (void)logStateChange:(unsigned long long)arg1 previousState:(unsigned long long)arg2;
- (void)failAllSessionsWithError:(id)arg1;
- (void)endPlaybackSession;
- (void)failPlaybackSessionWithError:(id)arg1;
- (void)cancelPlaybackSession;
- (void)beginPlaybackSession;
- (void)endStartPlaySession;
- (void)failStartPlaySessionWithError:(id)arg1;
- (void)cancelStartPlaySession;
- (void)beginStartPlaySession;
- (void)removeMediaPlayerContext;
- (id)addOrGetMediaPlayerContext;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

