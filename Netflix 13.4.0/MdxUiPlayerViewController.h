//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "MdxUiAudioSubtitlesViewControllerDelegate-Protocol.h"
#import "MdxUiPostPlayViewControllerDelegate-Protocol.h"
#import "MdxUiVolumeViewControllerDelegate-Protocol.h"
#import "NFUIPlayerScrubberDelegate-Protocol.h"
#import "NFUIRemotePlayerControlsDelegate-Protocol.h"
#import "NFUITouchGestureDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class AVAudioPlayer, CAShapeLayer, MdxUiAudioSubtitlesViewController, MdxUiPlayerViewModel, MdxUiPostPlayViewController, MdxUiStatusButton, MdxUiVolumeViewController, NFUIButton, NFUIEpisodePickerViewController, NFUIPlayerScrubber, NFUIRemotePlayerControlsController, NFUITrickPlayController, NSLayoutConstraint, NSNumber, NSString, PlaybackRequest, UIActivityIndicatorView, UIButton, UIImage, UIImageView, UILabel, UIView;

@interface MdxUiPlayerViewController : UIViewController <UIGestureRecognizerDelegate, NFUIPlayerScrubberDelegate, NFUITouchGestureDelegate, MdxUiVolumeViewControllerDelegate, MdxUiPostPlayViewControllerDelegate, MdxUiAudioSubtitlesViewControllerDelegate, NFUIRemotePlayerControlsDelegate>
{
    _Bool _needsRoundedCornersUpdatedOnNowPlayingImage;
    struct CGRect _previousNowPlayingImageViewBounds;
    CAShapeLayer *_roundedCornerMaskLayer;
    _Bool _expanded;
    _Bool _didAdjustSkipIntro;
    _Bool _isInSkipIntroWindow;
    _Bool _isInPostPlay;
    _Bool _areLockScreenControlsEnabled;
    _Bool _isInBackground;
    _Bool _didStartPlayback;
    _Bool _didUpdateForPlaybackState;
    _Bool _isPaused;
    _Bool _isSwitchingTitle;
    _Bool _shouldIgnoreNextCurrentTimeChange;
    _Bool _isEpisodic;
    _Bool _isVisible;
    _Bool _isBeingDismissed;
    _Bool _isBeingPresented;
    _Bool _isObservingDefault;
    _Bool _isObservingPlayback;
    _Bool _dismissed;
    UIView *_transitionView;
    NSLayoutConstraint *_parentViewHeight;
    UILabel *_expandedIndicatorLabel;
    NSLayoutConstraint *_expandedIndicatorLabelTop;
    UIActivityIndicatorView *_connectionSpinner;
    UILabel *_titleLabel;
    NSLayoutConstraint *_titleLabelCenterY;
    UILabel *_episodeTitleLabel;
    NSLayoutConstraint *_episodeTitleTop;
    UIView *_miniPlayerDividerView;
    UIButton *_miniPlayButton;
    UIButton *_miniRewindButton;
    NSLayoutConstraint *_miniRewindButtonLeadingConstraint;
    UIButton *_playButton;
    UIButton *_stopButton;
    UIButton *_rewindButton;
    MdxUiStatusButton *_devicePickerButton;
    NSLayoutConstraint *_devicePickerCenterX;
    UIButton *_episodesButton;
    NSLayoutConstraint *_episodesPickerHSpace;
    UIButton *_subsDubsButton;
    NSLayoutConstraint *_subsDubsHSpace;
    UIButton *_volumeButton;
    NSLayoutConstraint *_volumeHSpace;
    UIView *_titleContainer;
    UIButton *_titleBarEpisodesButton;
    NSLayoutConstraint *_titleBarEpisodeButtonWidth;
    UIButton *_titleBarSubsDubsButton;
    UIView *_playbackControlsContainer;
    UIView *_statusContainer;
    UILabel *_trickPlayCurrentTimeLabel;
    UILabel *_timeRemainingLabel;
    UIView *_imageContainer;
    UIView *_supplementalControlsContainer;
    UIView *_playbackButtonsContainer;
    UIImageView *_nowPlayingImageView;
    NFUIPlayerScrubber *_playerScrubber;
    UIView *_scrubberContainer;
    NSLayoutConstraint *_titleWidthConstraint;
    NSLayoutConstraint *_titleContainerYConstraint;
    NSLayoutConstraint *_skipIntroContainerHeight;
    NSLayoutConstraint *_playbackContainerBottom;
    NSLayoutConstraint *_skipIntroToTop;
    NFUIButton *_skipIntroButton;
    UIView *_skipIntroContainer;
    MdxUiPlayerViewModel *_model;
    PlaybackRequest *_playbackRequest;
    UIImage *_nowPlayingImage;
    NSNumber *_targetVideoId;
    NFUITrickPlayController *_trickPlayController;
    MdxUiAudioSubtitlesViewController *_subtitlesViewController;
    NFUIEpisodePickerViewController *_episodesListViewController;
    MdxUiVolumeViewController *_volumeViewController;
    MdxUiPostPlayViewController *_postPlayViewController;
    NFUIRemotePlayerControlsController *_remotePlayerController;
    AVAudioPlayer *_audioPlayer;
    UIActivityIndicatorView *_loadingIndicator;
}

+ (void)handleMdxUiError:(id)arg1;
+ (id)mdxUiPlayerViewController;
- (void).cxx_destruct;
@property(nonatomic) _Bool dismissed; // @synthesize dismissed=_dismissed;
@property(nonatomic) _Bool isObservingPlayback; // @synthesize isObservingPlayback=_isObservingPlayback;
@property(nonatomic) _Bool isObservingDefault; // @synthesize isObservingDefault=_isObservingDefault;
@property(nonatomic) __weak UIActivityIndicatorView *loadingIndicator; // @synthesize loadingIndicator=_loadingIndicator;
@property(nonatomic) _Bool isBeingPresented; // @synthesize isBeingPresented=_isBeingPresented;
@property(nonatomic) _Bool isBeingDismissed; // @synthesize isBeingDismissed=_isBeingDismissed;
@property(nonatomic) _Bool isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) _Bool isEpisodic; // @synthesize isEpisodic=_isEpisodic;
@property(nonatomic) _Bool shouldIgnoreNextCurrentTimeChange; // @synthesize shouldIgnoreNextCurrentTimeChange=_shouldIgnoreNextCurrentTimeChange;
@property(nonatomic) _Bool isSwitchingTitle; // @synthesize isSwitchingTitle=_isSwitchingTitle;
@property(nonatomic) _Bool isPaused; // @synthesize isPaused=_isPaused;
@property(nonatomic) _Bool didUpdateForPlaybackState; // @synthesize didUpdateForPlaybackState=_didUpdateForPlaybackState;
@property(nonatomic) _Bool didStartPlayback; // @synthesize didStartPlayback=_didStartPlayback;
@property(retain, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) NFUIRemotePlayerControlsController *remotePlayerController; // @synthesize remotePlayerController=_remotePlayerController;
@property(retain, nonatomic) MdxUiPostPlayViewController *postPlayViewController; // @synthesize postPlayViewController=_postPlayViewController;
@property(retain, nonatomic) MdxUiVolumeViewController *volumeViewController; // @synthesize volumeViewController=_volumeViewController;
@property(retain, nonatomic) NFUIEpisodePickerViewController *episodesListViewController; // @synthesize episodesListViewController=_episodesListViewController;
@property(retain, nonatomic) MdxUiAudioSubtitlesViewController *subtitlesViewController; // @synthesize subtitlesViewController=_subtitlesViewController;
@property(nonatomic) _Bool isInBackground; // @synthesize isInBackground=_isInBackground;
@property(nonatomic) _Bool areLockScreenControlsEnabled; // @synthesize areLockScreenControlsEnabled=_areLockScreenControlsEnabled;
@property(nonatomic) _Bool isInPostPlay; // @synthesize isInPostPlay=_isInPostPlay;
@property(nonatomic) _Bool isInSkipIntroWindow; // @synthesize isInSkipIntroWindow=_isInSkipIntroWindow;
@property(nonatomic) _Bool didAdjustSkipIntro; // @synthesize didAdjustSkipIntro=_didAdjustSkipIntro;
@property(retain, nonatomic) NFUITrickPlayController *trickPlayController; // @synthesize trickPlayController=_trickPlayController;
@property(retain, nonatomic) NSNumber *targetVideoId; // @synthesize targetVideoId=_targetVideoId;
@property(retain, nonatomic) UIImage *nowPlayingImage; // @synthesize nowPlayingImage=_nowPlayingImage;
@property(retain, nonatomic) PlaybackRequest *playbackRequest; // @synthesize playbackRequest=_playbackRequest;
@property(retain, nonatomic) MdxUiPlayerViewModel *model; // @synthesize model=_model;
@property(nonatomic) __weak UIView *skipIntroContainer; // @synthesize skipIntroContainer=_skipIntroContainer;
@property(nonatomic) __weak NFUIButton *skipIntroButton; // @synthesize skipIntroButton=_skipIntroButton;
@property(retain, nonatomic) NSLayoutConstraint *skipIntroToTop; // @synthesize skipIntroToTop=_skipIntroToTop;
@property(retain, nonatomic) NSLayoutConstraint *playbackContainerBottom; // @synthesize playbackContainerBottom=_playbackContainerBottom;
@property(retain, nonatomic) NSLayoutConstraint *skipIntroContainerHeight; // @synthesize skipIntroContainerHeight=_skipIntroContainerHeight;
@property(nonatomic) __weak NSLayoutConstraint *titleContainerYConstraint; // @synthesize titleContainerYConstraint=_titleContainerYConstraint;
@property(retain, nonatomic) NSLayoutConstraint *titleWidthConstraint; // @synthesize titleWidthConstraint=_titleWidthConstraint;
@property(nonatomic) __weak UIView *scrubberContainer; // @synthesize scrubberContainer=_scrubberContainer;
@property(nonatomic) __weak NFUIPlayerScrubber *playerScrubber; // @synthesize playerScrubber=_playerScrubber;
@property(nonatomic) __weak UIImageView *nowPlayingImageView; // @synthesize nowPlayingImageView=_nowPlayingImageView;
@property(nonatomic) __weak UIView *playbackButtonsContainer; // @synthesize playbackButtonsContainer=_playbackButtonsContainer;
@property(nonatomic) __weak UIView *supplementalControlsContainer; // @synthesize supplementalControlsContainer=_supplementalControlsContainer;
@property(nonatomic) __weak UIView *imageContainer; // @synthesize imageContainer=_imageContainer;
@property(nonatomic) __weak UILabel *timeRemainingLabel; // @synthesize timeRemainingLabel=_timeRemainingLabel;
@property(nonatomic) __weak UILabel *trickPlayCurrentTimeLabel; // @synthesize trickPlayCurrentTimeLabel=_trickPlayCurrentTimeLabel;
@property(nonatomic) __weak UIView *statusContainer; // @synthesize statusContainer=_statusContainer;
@property(nonatomic) __weak UIView *playbackControlsContainer; // @synthesize playbackControlsContainer=_playbackControlsContainer;
@property(nonatomic) __weak UIButton *titleBarSubsDubsButton; // @synthesize titleBarSubsDubsButton=_titleBarSubsDubsButton;
@property(nonatomic) __weak NSLayoutConstraint *titleBarEpisodeButtonWidth; // @synthesize titleBarEpisodeButtonWidth=_titleBarEpisodeButtonWidth;
@property(nonatomic) __weak UIButton *titleBarEpisodesButton; // @synthesize titleBarEpisodesButton=_titleBarEpisodesButton;
@property(nonatomic) __weak UIView *titleContainer; // @synthesize titleContainer=_titleContainer;
@property(nonatomic) __weak NSLayoutConstraint *volumeHSpace; // @synthesize volumeHSpace=_volumeHSpace;
@property(nonatomic) __weak UIButton *volumeButton; // @synthesize volumeButton=_volumeButton;
@property(nonatomic) __weak NSLayoutConstraint *subsDubsHSpace; // @synthesize subsDubsHSpace=_subsDubsHSpace;
@property(nonatomic) __weak UIButton *subsDubsButton; // @synthesize subsDubsButton=_subsDubsButton;
@property(nonatomic) __weak NSLayoutConstraint *episodesPickerHSpace; // @synthesize episodesPickerHSpace=_episodesPickerHSpace;
@property(nonatomic) __weak UIButton *episodesButton; // @synthesize episodesButton=_episodesButton;
@property(nonatomic) __weak NSLayoutConstraint *devicePickerCenterX; // @synthesize devicePickerCenterX=_devicePickerCenterX;
@property(nonatomic) __weak MdxUiStatusButton *devicePickerButton; // @synthesize devicePickerButton=_devicePickerButton;
@property(nonatomic) __weak UIButton *rewindButton; // @synthesize rewindButton=_rewindButton;
@property(nonatomic) __weak UIButton *stopButton; // @synthesize stopButton=_stopButton;
@property(nonatomic) __weak UIButton *playButton; // @synthesize playButton=_playButton;
@property(nonatomic) __weak NSLayoutConstraint *miniRewindButtonLeadingConstraint; // @synthesize miniRewindButtonLeadingConstraint=_miniRewindButtonLeadingConstraint;
@property(nonatomic) __weak UIButton *miniRewindButton; // @synthesize miniRewindButton=_miniRewindButton;
@property(nonatomic) __weak UIButton *miniPlayButton; // @synthesize miniPlayButton=_miniPlayButton;
@property(nonatomic) __weak UIView *miniPlayerDividerView; // @synthesize miniPlayerDividerView=_miniPlayerDividerView;
@property(nonatomic) __weak NSLayoutConstraint *episodeTitleTop; // @synthesize episodeTitleTop=_episodeTitleTop;
@property(nonatomic) __weak UILabel *episodeTitleLabel; // @synthesize episodeTitleLabel=_episodeTitleLabel;
@property(nonatomic) __weak NSLayoutConstraint *titleLabelCenterY; // @synthesize titleLabelCenterY=_titleLabelCenterY;
@property(nonatomic) __weak UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak UIActivityIndicatorView *connectionSpinner; // @synthesize connectionSpinner=_connectionSpinner;
@property(nonatomic) __weak NSLayoutConstraint *expandedIndicatorLabelTop; // @synthesize expandedIndicatorLabelTop=_expandedIndicatorLabelTop;
@property(nonatomic) __weak UILabel *expandedIndicatorLabel; // @synthesize expandedIndicatorLabel=_expandedIndicatorLabel;
@property(nonatomic) _Bool expanded; // @synthesize expanded=_expanded;
@property(retain, nonatomic) NSLayoutConstraint *parentViewHeight; // @synthesize parentViewHeight=_parentViewHeight;
@property(nonatomic) __weak UIView *transitionView; // @synthesize transitionView=_transitionView;
- (void)updatePosition:(double)arg1;
- (void)remoteControlAction:(long long)arg1;
- (void)setRemotePlayState;
- (void)setRemoteSkipWindowState;
- (void)configureRemoteControlsModel;
- (void)setupLockScreenControls;
- (void)handleEnterForegroundNotification:(id)arg1;
- (void)adjustSkipIntroContsantForExpanded:(_Bool)arg1;
- (void)adjustSkipIntroContainerWithAnimation:(_Bool)arg1;
- (void)handleMdxUiPlaySessionIsInSkipIntroWindowChangedNotification:(id)arg1;
- (_Bool)accessibilityPerformEscape;
- (void)updatePlayPauseAccessibility;
- (void)configureAcccessibility;
- (void)updateAudioSubtitlesControllerOptions;
- (void)handleMdxUiAudioSubtitlesChangedNotification:(id)arg1;
- (void)handleLogoutNotification:(id)arg1;
- (void)handleMdxUiPlayerCapabilitiesChangedNotification:(id)arg1;
- (void)handleMdxUiDialogDismissedNotifications:(id)arg1;
- (void)handleMdxUiPlaySessionCurrentTimeChange:(id)arg1 observer:(id)arg2;
- (void)handleMdxUiPostPlayDidActivateNotification:(id)arg1;
- (void)handleMdxUiPlaySessionStateChangedNotification:(id)arg1;
- (void)handleMdxUiConnectionStateChangedNotification:(id)arg1;
- (void)handleMdxUiStatusChangedNotification:(id)arg1;
- (void)configureWithPostPlay:(id)arg1;
- (void)configureWithPlaySession:(id)arg1;
- (void)configureWithConnection:(id)arg1;
- (void)configureWithMdxStatus:(unsigned long long)arg1;
- (void)stopFromPostPlay;
- (void)advanceToNextPostPlayItem;
- (void)showPostPlayEpisodePicker;
- (void)presentPostPlayViewController;
- (void)initPostPlayPanel;
- (void)didChangeVolume:(double)arg1;
- (void)dismiss:(CDUnknownBlockType)arg1;
- (void)present:(CDUnknownBlockType)arg1;
- (void)pausePlayback:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)updateCurrentTime:(float)arg1;
- (void)stopPlaybackDismissing:(_Bool)arg1;
- (void)startPlayback:(id)arg1 withModel:(id)arg2;
- (void)cancelPlaybackTimer;
- (void)updateTimeRemainingForCurrentTime:(double)arg1;
- (void)startPlaybackTimer;
- (void)updateForProgressState;
- (void)updateForSkipIntroState;
- (void)updateForPlaybackState;
- (void)updateForBeginCastingState;
- (void)updateForPauseState;
- (void)fadePlaybackControlsToVisible:(_Bool)arg1;
- (void)toggleNonScrubControlsToVisible:(_Bool)arg1;
- (void)configureCurrentTrickPlayImage;
- (void)updateElapsedTime;
- (void)scrubberValueChanged;
- (void)scrubberValueChanged:(id)arg1;
- (void)scrubRemoteToCurrentTime;
- (void)endScrubbing;
- (void)beginScrubbing;
- (void)togglePlayback:(id)arg1;
- (void)stopPlayback:(id)arg1;
- (void)skipIntro:(id)arg1;
- (void)toggleSize:(id)arg1;
- (void)showEpisodePicker:(id)arg1;
- (void)showSubsDubsPicker:(id)arg1;
- (void)showVolumeControl:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)updateWithVideoSummary:(id)arg1;
- (void)fastForwardThirty;
- (void)rewindThirty:(id)arg1;
- (void)initVolumePanel;
- (void)initAudioSubtitlesPanel;
- (void)initEpisodesListPanelWithVideoSummary:(id)arg1;
- (void)initViews;
- (void)prepareForReuse;
- (void)adjustDismissalLabel;
- (void)viewSafeAreaInsetsDidChange;
- (void)configureTitlebarSupplementalControls;
- (void)toggleSize;
- (void)_updateCornerRadiusOnNowPlayingImageIfNeeded;
- (void)loadNowPlayingImage;
- (_Bool)isRTLDeviceLocale;
- (void)configureSupplementalControls;
- (void)getSubsDubsInfo;
- (void)updateForCurrentAudioSubtitleSelection;
- (void)configureTrickPlay;
- (void)handleSwipe:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)configureGestureRecognizers;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)forcePresentViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)hasVolumeControl;
- (_Bool)hasSubsDubs;
- (void)willEnterForeground:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (void)setIsObserving:(_Bool)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

