//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Nbp/NfOfflineContentManagerDelegate-Protocol.h>
#import <Nbp/NfOfflineContentManagerInternal-Protocol.h>

@class NSString;
@protocol NfOfflineContentManagerDelegate, NfOfflineContentManagerInternal;

@interface OCMVersionDispatcher : NSObject <NfOfflineContentManagerDelegate, NfOfflineContentManagerInternal>
{
    _Bool _backgroundTasksInitialized;
    _Bool _autoLicenseRefreshDisabled;
    _Bool _avAssetDownloadingDisabled;
    id <NfOfflineContentManagerDelegate> _delegate;
    long long _maxConcurrentDownloadCount;
    id <NfOfflineContentManagerInternal> _managerV1;
    id <NfOfflineContentManagerInternal> _managerV2;
}

- (void).cxx_destruct;
@property(retain) id <NfOfflineContentManagerInternal> managerV2; // @synthesize managerV2=_managerV2;
@property(retain) id <NfOfflineContentManagerInternal> managerV1; // @synthesize managerV1=_managerV1;
@property(readonly, nonatomic) long long maxConcurrentDownloadCount; // @synthesize maxConcurrentDownloadCount=_maxConcurrentDownloadCount;
@property(nonatomic) _Bool avAssetDownloadingDisabled; // @synthesize avAssetDownloadingDisabled=_avAssetDownloadingDisabled;
@property _Bool autoLicenseRefreshDisabled; // @synthesize autoLicenseRefreshDisabled=_autoLicenseRefreshDisabled;
@property(readonly, nonatomic) _Bool backgroundTasksInitialized; // @synthesize backgroundTasksInitialized=_backgroundTasksInitialized;
@property(nonatomic) __weak id <NfOfflineContentManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)nflxDownload:(id)arg1 resumed:(id)arg2;
- (void)nflxDownload:(id)arg1 suspended:(id)arg2;
- (void)nflxDownload:(id)arg1 updatedLicense:(id)arg2;
- (void)nflxDownload:(id)arg1 updatedProgress:(double)arg2;
- (void)nflxDownload:(id)arg1 ended:(id)arg2;
- (void)nflxDownload:(id)arg1 stateChanged:(id)arg2;
- (void)nflxDownload:(id)arg1 opened:(id)arg2;
- (void)suspendDownload:(id)arg1;
- (void)resumeDownload:(id)arg1;
- (void)resumeAllDownloads;
- (void)suspendAllDownloads;
- (void)deleteDebugState;
- (void)updateDebugState:(id)arg1;
- (id)debugState;
- (void)updateDebugStateForId:(id)arg1 append:(id)arg2;
- (id)debugStateForId:(id)arg1;
- (id)getOfflineDownloadInfoForId:(id)arg1;
- (id)getOfflinePlaybackForId:(id)arg1 offlineTransactionId:(id)arg2 fetchOptions:(unsigned long long)arg3;
- (id)getOfflinePlaybackForId:(id)arg1 offlineTransactionId:(id)arg2;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)refreshPlayWindows;
- (void)refreshLicenseForId:(id)arg1;
- (void)initiateDownloadForId:(id)arg1 quality:(id)arg2 trackingInfo:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)syncDeactivateLinksResponseDirect:(id)arg1 didIncludeSPC:(_Bool)arg2;
- (_Bool)queueDeactivateLinkForWatchable:(id)arg1;
- (id)webVTTPlist;
- (void)updateWebVTTPlist:(id)arg1;
- (void)respondToNextTaskResuming:(CDUnknownBlockType)arg1;
- (void)respondToDownloadFinished:(CDUnknownBlockType)arg1;
- (void)removeAllDataForId:(id)arg1;
- (_Bool)hasId:(id)arg1;
- (_Bool)isSecureInvalidationReady;
- (id)getAllIds;
- (void)startQueue;
- (void)stopQueue;
- (_Bool)isQueueRunning;
- (_Bool)shouldRespondToEventsForBackgroundURLSessionIdentifier:(id)arg1;
- (_Bool)_wantsToInitiatedDownloadsWithV2;
- (void)initializeBackgroundTasks:(CDUnknownBlockType)arg1;
- (id)findPersistentBlobForPlaybackId:(id)arg1;
- (id)findOfflineDownloaderForPlaybackId:(id)arg1;
- (id)findOfflinePlaybackForPlaybackId:(id)arg1;
- (unsigned long long)spaceAvailableForDownloads;
- (_Bool)supportsAVAggregate;
- (id)deactivateLinksV2;
- (id)deactivateLinks;
- (id)getWatchableInfoForLinksKey:(id)arg1;
- (id)createDownloaderWithWatchableInfo:(id)arg1 andTask:(id)arg2;
- (id)initWithManagerV1:(id)arg1 managerV2:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

