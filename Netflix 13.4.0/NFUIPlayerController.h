//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NFUIPlayerFoundation/NFUIPlayerControllerMediatorDelegate-Protocol.h>
#import <NFUIPlayerFoundation/NFUIPlayerControllerProtocol-Protocol.h>

@class NFUIPlayerStateMachine, NSError, NSString;
@protocol NFPlaygraphPlayerDelegate, NFUIPlatformControllerProtocol><NFUIPlatformLoggerProtocol, NFUIPlayerControllerDelegate, NFUIPlayerControllerProtocolInternal;

@interface NFUIPlayerController : NSObject <NFUIPlayerControllerMediatorDelegate, NFUIPlayerControllerProtocol>
{
    _Bool _externalPlaybackActive;
    _Bool _allowsExternalPlayback;
    float _persistentRate;
    float _rate;
    float _volume;
    id <NFUIPlayerControllerDelegate> _delegate;
    long long _loopCount;
    NSObject<NFUIPlayerControllerProtocolInternal> *_playerController;
    NSError *_error;
    NFUIPlayerStateMachine *_stateMachine;
    CDStruct_1531ace6 _delegateRespondsTo;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NFUIPlayerStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain, nonatomic, setter=updateError:) NSError *error; // @synthesize error=_error;
@property(nonatomic) CDStruct_1531ace6 delegateRespondsTo; // @synthesize delegateRespondsTo=_delegateRespondsTo;
@property(retain, nonatomic) NSObject<NFUIPlayerControllerProtocolInternal> *playerController; // @synthesize playerController=_playerController;
@property(readonly, nonatomic) _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) float rate; // @synthesize rate=_rate;
@property(nonatomic) long long loopCount; // @synthesize loopCount=_loopCount;
@property(nonatomic) __weak id <NFUIPlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <NFPlaygraphPlayerDelegate> playgraphDelegate;
- (id)playlistDelegate;
- (id)playerViewProviderForPlayer:(id)arg1;
- (void)updateNextSegmentWeightsForSegmentId:(id)arg1 nextSegmentWeights:(id)arg2;
- (void)gotoSegmentId:(id)arg1 time:(double)arg2 userInitiated:(_Bool)arg3;
- (void)gotoSegmentId:(id)arg1 time:(double)arg2;
- (void)gotoNextSegmentFromCurrentSegmentId:(id)arg1 nextSegmentId:(id)arg2 userInitiated:(_Bool)arg3;
- (void)gotoNextSegmentFromCurrentSegmentId:(id)arg1 nextSegmentId:(id)arg2;
- (void)setNextSegmentAfterSegmentId:(id)arg1 nextSegmentId:(id)arg2 userInitiated:(_Bool)arg3;
- (void)setNextSegmentAfterSegmentId:(id)arg1 nextSegmentId:(id)arg2;
- (id)playgraphController;
- (void)notifyDelegateWillStop;
- (void)notifyDelegateWillPause;
- (void)notifyDelegateWillPlay;
- (void)pipDidStop;
- (void)pipDidStart;
- (void)percentSubtitleFontSize:(double)arg1;
- (void)positionSubtitleWithPercent:(double)arg1;
- (void)stop;
- (void)seek:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginScrubbing;
- (void)pause;
- (void)play;
- (void)cancelLoading;
- (void)initPlayerControllerForRequest:(id)arg1;
- (id)loadOperation:(id)arg1;
- (id)load:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)load:(id)arg1;
@property(nonatomic) float persistentRate; // @synthesize persistentRate=_persistentRate;
@property(readonly, nonatomic) unsigned long long state;
@property(readonly, nonatomic, getter=isReady) _Bool ready;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive; // @synthesize externalPlaybackActive=_externalPlaybackActive;
@property(readonly, nonatomic) float currentTimePercent;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) id <NFUIPlatformControllerProtocol><NFUIPlatformLoggerProtocol> platformController;
- (void)avPlayerInitialized:(id)arg1 withAspectDetails:(id)arg2;
- (void)updateVolume:(float)arg1;
- (void)updateRate:(float)arg1;
- (void)updateExternalPlaybackActive:(_Bool)arg1;
- (void)playerController:(id)arg1 platformControllerPlaybackBegan:(id)arg2;
- (void)playerController:(id)arg1 platformControllerReady:(id)arg2;
- (void)playerControllerReady:(id)arg1 playbackId:(id)arg2;
- (void)playerController:(id)arg1 choiceMapLoaded:(id)arg2;
- (double)playbackStreamLimit:(_Bool)arg1;
- (void)playerController:(id)arg1 subtitleOptionChanged:(id)arg2 forAvailableSubtitleOptions:(id)arg3;
- (void)playerController:(id)arg1 audioOptionChanged:(id)arg2;
- (void)playerController:(id)arg1 timeUpdate:(double)arg2;
- (void)playerController:(id)arg1 willLoadRequest:(id)arg2;
- (void)handleStateChange:(id)arg1 observer:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

