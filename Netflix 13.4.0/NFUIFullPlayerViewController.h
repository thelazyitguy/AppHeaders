//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "NFUIAdvisoryViewDataSource-Protocol.h"
#import "NFUIAdvisoryViewDelegate-Protocol.h"
#import "NFUIPauseExpirationDelegate-Protocol.h"
#import "NFUIPictureInPictureDelegate-Protocol.h"
#import "NFUIPlayerControlsDelegate-Protocol.h"
#import "NFUIPlayerInterrupterDelegate-Protocol.h"
#import "NFUIPlayerViewControllerDelegate-Protocol.h"
#import "NFUIPostPlayDelegate-Protocol.h"
#import "NFUIPostPlayOverlayDelegate-Protocol.h"
#import "NFUISubsDubsViewControllerDelegate-Protocol.h"

@class AVPlayer, NFUIExternalPlaybackOverlayView, NFUIExternalScreenController, NFUIFullPlayerViewModel, NFUIPauseExpirationController, NFUIPictureInPictureController, NFUIPlaybackAdvisoryController, NFUIPlaybackAdvisoryView, NFUIPlayerCSLogger, NFUIPlayerControlsRefreshViewController, NFUIPlayerInternal, NFUIPlayerInterrupterViewController, NFUIPlayerViewController, NFUISubsDubsViewController, NFUITimedContentController, NSLayoutConstraint, NSNumber, NSOperation, NSString, PlaybackRequest;
@protocol NFUIFullPlayerViewControllerDelegate, NFUIImageProvider, NFUIPlayerConfigProviderProtocol, NFUIPlayerControllerProtocol, NFUIPostPlayControllerProtocol, NFUIPostPlayOverlayControllerProtocol;

@interface NFUIFullPlayerViewController : UIViewController <NFUIPauseExpirationDelegate, NFUIPictureInPictureDelegate, NFUIPlayerInterrupterDelegate, NFUIAdvisoryViewDelegate, NFUIAdvisoryViewDataSource, NFUIPostPlayOverlayDelegate, NFUISubsDubsViewControllerDelegate, NFUIPlayerViewControllerDelegate, NFUIPlayerControlsDelegate, NFUIPostPlayDelegate>
{
    _Bool _reachedLogicalEnd;
    _Bool _reachedRuntimeEnd;
    _Bool _shouldShowControls;
    _Bool _controlsHidden;
    _Bool _shouldShowPostPlayOverlay;
    _Bool _isReportingOrientationIncorrectly;
    NFUIPlayerViewController *_playerViewController;
    id <NFUIFullPlayerViewControllerDelegate> _delegate;
    NFUIPlayerInternal *_managedPlayer;
    NFUIFullPlayerViewModel *_model;
    id <NFUIImageProvider> _imageProvider;
    id <NFUIPlayerConfigProviderProtocol> _playerConfigProvider;
    NFUISubsDubsViewController *_subsDubsViewController;
    UIViewController *_episodePickerViewController;
    UIViewController *_speedPickerViewController;
    NFUIPauseExpirationController *_pauseExpirationController;
    id <NFUIPostPlayControllerProtocol> _postPlayController;
    NFUIPictureInPictureController *_pipController;
    NFUIPlayerInterrupterViewController *_playerInterrupterViewController;
    NFUIPlayerControlsRefreshViewController *_playerControlsViewController;
    id <NFUIPostPlayOverlayControllerProtocol> _postPlayOverlayController;
    NFUIPlaybackAdvisoryController *_advisoryController;
    NFUIPlaybackAdvisoryView *_advisoryView;
    NSLayoutConstraint *_advisoryTopConstraint;
    double _savedBookmarkPosition;
    NFUIExternalPlaybackOverlayView *_externalPlaybackOverlayView;
    NSOperation *_externalPlaybackImageRequestTask;
    PlaybackRequest *_playbackRequest;
    NFUIExternalScreenController *_external30PinScreenController;
    double _videoLayerInset;
    AVPlayer *_storedPlayer;
    NFUIPlayerCSLogger *_csLogger;
    NSNumber *_closeCommandSessionId;
    NSNumber *_playbackControlsPresentationSessionId;
    NFUITimedContentController *_timedContentController;
}

- (void).cxx_destruct;
@property _Bool isReportingOrientationIncorrectly; // @synthesize isReportingOrientationIncorrectly=_isReportingOrientationIncorrectly;
@property(retain, nonatomic) NFUITimedContentController *timedContentController; // @synthesize timedContentController=_timedContentController;
@property(copy, nonatomic) NSNumber *playbackControlsPresentationSessionId; // @synthesize playbackControlsPresentationSessionId=_playbackControlsPresentationSessionId;
@property(copy, nonatomic) NSNumber *closeCommandSessionId; // @synthesize closeCommandSessionId=_closeCommandSessionId;
@property(retain, nonatomic) NFUIPlayerCSLogger *csLogger; // @synthesize csLogger=_csLogger;
@property(nonatomic) __weak AVPlayer *storedPlayer; // @synthesize storedPlayer=_storedPlayer;
@property(nonatomic) double videoLayerInset; // @synthesize videoLayerInset=_videoLayerInset;
@property(retain, nonatomic) NFUIExternalScreenController *external30PinScreenController; // @synthesize external30PinScreenController=_external30PinScreenController;
@property(retain, nonatomic) PlaybackRequest *playbackRequest; // @synthesize playbackRequest=_playbackRequest;
@property(retain, nonatomic) NSOperation *externalPlaybackImageRequestTask; // @synthesize externalPlaybackImageRequestTask=_externalPlaybackImageRequestTask;
@property(retain, nonatomic) NFUIExternalPlaybackOverlayView *externalPlaybackOverlayView; // @synthesize externalPlaybackOverlayView=_externalPlaybackOverlayView;
@property(nonatomic) _Bool shouldShowPostPlayOverlay; // @synthesize shouldShowPostPlayOverlay=_shouldShowPostPlayOverlay;
@property(nonatomic) _Bool controlsHidden; // @synthesize controlsHidden=_controlsHidden;
@property(nonatomic) _Bool shouldShowControls; // @synthesize shouldShowControls=_shouldShowControls;
@property(nonatomic) _Bool reachedRuntimeEnd; // @synthesize reachedRuntimeEnd=_reachedRuntimeEnd;
@property(nonatomic) _Bool reachedLogicalEnd; // @synthesize reachedLogicalEnd=_reachedLogicalEnd;
@property(nonatomic) double savedBookmarkPosition; // @synthesize savedBookmarkPosition=_savedBookmarkPosition;
@property(retain, nonatomic) NSLayoutConstraint *advisoryTopConstraint; // @synthesize advisoryTopConstraint=_advisoryTopConstraint;
@property(nonatomic) __weak NFUIPlaybackAdvisoryView *advisoryView; // @synthesize advisoryView=_advisoryView;
@property(retain, nonatomic) NFUIPlaybackAdvisoryController *advisoryController; // @synthesize advisoryController=_advisoryController;
@property(retain, nonatomic) id <NFUIPostPlayOverlayControllerProtocol> postPlayOverlayController; // @synthesize postPlayOverlayController=_postPlayOverlayController;
@property(retain, nonatomic) NFUIPlayerControlsRefreshViewController *playerControlsViewController; // @synthesize playerControlsViewController=_playerControlsViewController;
@property(retain, nonatomic) NFUIPlayerInterrupterViewController *playerInterrupterViewController; // @synthesize playerInterrupterViewController=_playerInterrupterViewController;
@property(retain, nonatomic) NFUIPictureInPictureController *pipController; // @synthesize pipController=_pipController;
@property(retain, nonatomic) id <NFUIPostPlayControllerProtocol> postPlayController; // @synthesize postPlayController=_postPlayController;
@property(retain, nonatomic) NFUIPauseExpirationController *pauseExpirationController; // @synthesize pauseExpirationController=_pauseExpirationController;
@property(retain, nonatomic) UIViewController *speedPickerViewController; // @synthesize speedPickerViewController=_speedPickerViewController;
@property(retain, nonatomic) UIViewController *episodePickerViewController; // @synthesize episodePickerViewController=_episodePickerViewController;
@property(retain, nonatomic) NFUISubsDubsViewController *subsDubsViewController; // @synthesize subsDubsViewController=_subsDubsViewController;
@property(retain, nonatomic) id <NFUIPlayerConfigProviderProtocol> playerConfigProvider; // @synthesize playerConfigProvider=_playerConfigProvider;
@property(retain, nonatomic) id <NFUIImageProvider> imageProvider; // @synthesize imageProvider=_imageProvider;
@property(retain, nonatomic) NFUIFullPlayerViewModel *model; // @synthesize model=_model;
@property(retain, nonatomic) NFUIPlayerInternal *managedPlayer; // @synthesize managedPlayer=_managedPlayer;
@property(nonatomic) __weak id <NFUIFullPlayerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NFUIPlayerViewController *playerViewController; // @synthesize playerViewController=_playerViewController;
- (_Bool)supportsRemoteControlInteraction;
- (void)resetAdvisory;
- (void)resetViewModel;
- (void)configurePlayerControlsWithPosition:(double)arg1 runtime:(double)arg2;
- (void)viewSafeAreaInsetsDidChange;
- (void)handleActiveSkipMarker:(id)arg1;
- (void)updatedAccessibilityToggle;
- (void)hideSkipContentButton;
- (void)processMarkers:(id)arg1;
- (void)checkForContentMakersAtTime:(double)arg1;
- (void)configureTimedContentController;
- (_Bool)shouldContinueAudioOnLockScreenIfNotOnWiFi;
- (void)keyboardForward:(id)arg1;
- (void)keyboardRewind:(id)arg1;
- (void)keyboardPlayPause:(id)arg1;
- (id)keyCommands;
- (void)handleDidEnterBackgroundNotification:(id)arg1;
- (void)handleApplicationWillTerminate;
- (void)didReceiveMemoryWarning;
- (void)endRenderSession;
- (void)startRenderSession;
- (double)proposedInsetForViewFrame:(struct CGRect)arg1 andAspectDict:(id)arg2;
- (_Bool)isReportingFrameIncorrectly;
- (void)adjustGeometryForPlayerView:(id)arg1 withAspectDetails:(id)arg2;
- (void)handleWillResignActiveNotification:(id)arg1;
- (void)handleBecomeActiveNotification:(id)arg1;
- (void)didSelectMdxTarget:(id)arg1;
- (void)configureAdvisoryView;
- (void)hideAdvisoryWithCompletion:(CDUnknownBlockType)arg1;
- (void)showAdvisoryWithCompletion:(CDUnknownBlockType)arg1 delay:(double)arg2;
- (id)dataSaverAdvisory;
- (void)recordExpiryImpressionForVideoId:(id)arg1;
- (void)viewWithAdvisoryData:(id)arg1;
- (void)endPlaybackControlsPresentationSessionIfNeeded;
- (void)didHideControls;
- (void)willHideControls;
- (void)willShowControls;
- (void)restorePlayerView;
- (void)externalScreenOn30PinStateChanged:(_Bool)arg1;
- (_Bool)isExternalPlaybackActive;
- (void)resetPlayerInterrupter;
- (void)playerInterrupterViewControllerShouldDisplay:(id)arg1;
- (void)playerInterrupterViewController:(id)arg1 didDismissWithOption:(long long)arg2;
- (id)mutablePlayerControlsModel;
- (void)toggleGravityScaleForLayer:(id)arg1;
- (void)toggleFrameScaleForLayer:(id)arg1;
- (void)toggleScaleToFill;
- (void)dismissSelf:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateExternalPlaybackOverlayImage;
- (void)stopPlaybackDismissing:(_Bool)arg1;
- (void)prepareForReuse;
- (void)removeViewController:(id)arg1;
- (void)addViewController:(id)arg1 toBounds:(struct CGRect)arg2;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)dismissPlayer;
- (void)dismissPlayerWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateForPIPState:(long long)arg1;
- (void)logSkipRecapImpression;
- (void)skipPreplay;
- (void)skipContent;
- (void)skipIntro;
- (void)skipInEpisodeRecap;
- (void)playNextEpisode;
- (_Bool)isContinueAudioOnLockScreenActive;
- (_Bool)isPictureInPictureActive;
- (void)postPlayController:(id)arg1 viewDidDisappear:(_Bool)arg2 withAction:(id)arg3;
- (void)postPlayController:(id)arg1 viewWillAppear:(_Bool)arg2;
- (void)initPostPlayExperience;
- (void)setUpPostplayController:(id)arg1;
- (void)postPlayOverlayController:(id)arg1 viewDidDisappear:(_Bool)arg2 withAction:(id)arg3;
- (void)postPlayOverlayController:(id)arg1 viewWillAppear:(_Bool)arg2;
- (void)initPostPlayOverlayExperience;
- (void)handleModalPanelDimissalWithPlayback:(_Bool)arg1;
- (void)presentModalPanel:(id)arg1;
- (void)toggleLockControls;
- (void)presentSpeedPicker;
- (void)presentEpisodePicker;
- (void)presentSubsDubs;
- (void)controlAction:(id)arg1;
- (void)playerViewController:(id)arg1 videoDidAppear:(_Bool)arg2;
- (id)playerViewProviderForPlayer:(id)arg1;
- (void)playerController:(id)arg1 platformControllerPlaybackBegan:(id)arg2;
- (void)playerController:(id)arg1 platformControllerReady:(id)arg2;
- (_Bool)isPiPActive;
- (double)playbackStreamLimit:(_Bool)arg1;
- (void)playerController:(id)arg1 externalPlaybackActive:(_Bool)arg2;
- (void)playerController:(id)arg1 subtitleOptionChanged:(id)arg2 forAvailableSubtitleOptions:(id)arg3;
- (void)playerController:(id)arg1 audioOptionChanged:(id)arg2;
- (void)playerController:(id)arg1 error:(id)arg2;
- (void)playerController:(id)arg1 stateChange:(unsigned long long)arg2 previous:(unsigned long long)arg3;
- (void)showControls;
- (void)checkForBookmarkSkipAtTime:(double)arg1;
- (void)playerController:(id)arg1 timeUpdate:(double)arg2;
- (void)updateContentMarkersForCurrentTime:(double)arg1 playerController:(id)arg2;
- (void)updatePlayerAdvisoryForCurrentTime:(double)arg1 playerController:(id)arg2;
- (void)updateBookmarkForCurrentTime:(double)arg1 playerController:(id)arg2;
- (void)updatePlayerControlsForCurrentTime:(double)arg1 playerController:(id)arg2;
- (void)updatePrePostplayWithCurrentTime:(double)arg1 playerController:(id)arg2;
- (void)configurePauseExpirationController;
- (_Bool)isPictureInPictureEnabled;
- (void)configurePiP;
- (void)configureRemoteControlsModel;
- (void)playerControllerReady:(id)arg1;
- (void)configurePiPAndPauseExpirationIfReady;
- (void)playerController:(id)arg1 willLoadRequest:(id)arg2;
- (void)handlePauseExpiration;
- (void)startNextPlayBackWithRequest:(id)arg1 andFocusId:(id)arg2;
- (void)configureWithModel:(id)arg1;
@property(readonly, nonatomic) __weak id <NFUIPlayerControllerProtocol> playerController;
- (void)orientationChanged;
- (_Bool)shouldForcePortraitForAutomation;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersHomeIndicatorAutoHidden;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)commonInitWithPlayerViewController:(id)arg1;
- (id)createPlayerConfigProvider;
- (id)initWithPlayer:(id)arg1;
- (id)initWithPlayerViewController:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)createPlayerViewController;
- (void)executeTestFunctionality;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

