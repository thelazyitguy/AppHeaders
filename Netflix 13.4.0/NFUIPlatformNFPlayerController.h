//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NFUIPlayerFoundation/NFPlayerDelegate-Protocol.h>
#import <NFUIPlayerFoundation/NFUIPlatformControllerProtocol-Protocol.h>
#import <NFUIPlayerFoundation/NFUIPlatformLoggerProtocol-Protocol.h>
#import <NFUIPlayerFoundation/NFUIPlayerControllerProtocolInternal-Protocol.h>

@class AVPlayer, AVPlayerItem, NFLXOperation, NFUIPlaybackRequest, NSOperationQueue, NSString;
@protocol NFPlayer, NFPlaygraphPlayerDelegate, NFUIPlatformControllerProtocol><NFUIPlatformLoggerProtocol, NFUIPlayerControllerMediatorDelegate;

@interface NFUIPlatformNFPlayerController : NSObject <NFUIPlayerControllerProtocolInternal, NFPlayerDelegate, NFUIPlatformControllerProtocol, NFUIPlatformLoggerProtocol>
{
    _Bool _allowsExternalPlayback;
    float persistentRate;
    id <NFPlaygraphPlayerDelegate> playgraphDelegate;
    NFUIPlaybackRequest *_playbackRequest;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    id <NFUIPlayerControllerMediatorDelegate> _delegate;
    long long _loopCount;
    NSOperationQueue *_loadOperationQueue;
    NFLXOperation *_loadOperation;
    long long _numberOfLoops;
    id <NFPlayer> _nfPlayer;
    double _seekInitialPosition;
}

- (void).cxx_destruct;
@property(nonatomic) double seekInitialPosition; // @synthesize seekInitialPosition=_seekInitialPosition;
@property(retain, nonatomic) id <NFPlayer> nfPlayer; // @synthesize nfPlayer=_nfPlayer;
@property(nonatomic) long long numberOfLoops; // @synthesize numberOfLoops=_numberOfLoops;
@property(nonatomic) __weak NFLXOperation *loadOperation; // @synthesize loadOperation=_loadOperation;
@property(retain, nonatomic) NSOperationQueue *loadOperationQueue; // @synthesize loadOperationQueue=_loadOperationQueue;
@property(nonatomic) long long loopCount; // @synthesize loopCount=_loopCount;
@property(readonly, nonatomic) _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(nonatomic) __weak id <NFUIPlayerControllerMediatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) NFUIPlaybackRequest *playbackRequest; // @synthesize playbackRequest=_playbackRequest;
@property(nonatomic) __weak id <NFPlaygraphPlayerDelegate> playgraphDelegate; // @synthesize playgraphDelegate;
@property(nonatomic) float persistentRate; // @synthesize persistentRate;
- (void)logPIPActive:(_Bool)arg1;
- (void)logAirPlayActive:(_Bool)arg1;
- (void)logUserInteraction;
- (void)logPause:(_Bool)arg1;
- (void)logSeekFrom:(double)arg1 to:(double)arg2;
- (void)logBeginSeek;
- (void)logPlaybackEndedWithError;
- (void)pipDidStop;
- (void)pipDidStart;
- (void)presentAVPlayer;
- (void)setPlayerAuxiliaryDisplayProvider:(id)arg1;
- (void)enableStickyForSelectedAudioSubtitle;
- (void)selectSubtitleOption:(id)arg1;
- (void)selectAudioOption:(id)arg1;
- (id)availableSubtitleOptions;
- (id)availableAudioOptions;
- (id)selectedSubtitleOption;
- (id)selectedAudioOption;
- (id)aspectDetails;
- (void)setUiLabel:(id)arg1;
- (id)xid;
- (void)limitVideoThroughputByNominalBps:(double)arg1;
- (void)closePlayback;
- (void)initPlaybackWithDelegate:(id)arg1 request:(id)arg2;
- (void)stop;
- (void)seek:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginScrubbing;
- (void)cancelLoading;
- (id)loadOperation:(id)arg1;
- (id)load:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)load:(id)arg1;
- (id)sharedAVPlayerForPlayer:(id)arg1;
- (void)player:(id)arg1 didChangeSelectedSubtitleOption:(id)arg2 forAvailableSubtitleOptions:(id)arg3;
- (void)player:(id)arg1 didChangeSelectedAudioOption:(id)arg2;
- (_Bool)playerShouldHandleAudioSubtitleOptions:(id)arg1;
- (void)player:(id)arg1 didRecoverFromStallAtPlaybackTime:(double)arg2;
- (void)_unStalled;
- (void)_stalled;
- (void)player:(id)arg1 didStallAtPlaybackTime:(double)arg2 stallReason:(long long)arg3;
- (void)player:(id)arg1 didChangePlayerExternalPlaybackActive:(_Bool)arg2;
- (void)player:(id)arg1 didChangeVolume:(float)arg2;
- (double)playbackStreamLimitForPlayer:(id)arg1 onCellularNetwork:(_Bool)arg2;
- (void)player:(id)arg1 didChangeRateFrom:(float)arg2 to:(float)arg3;
- (void)player:(id)arg1 didUpdatePlaybackPts:(double)arg2;
- (void)player:(id)arg1 readyToPlayPlaybackId:(id)arg2;
- (void)playerReadyToPlay:(id)arg1;
- (id)playerViewProviderForPlayer:(id)arg1;
- (void)player:(id)arg1 didEndItemWithError:(id)arg2;
- (void)player:(id)arg1 didOpenMovieWithChoiceMap:(id)arg2 withExpiration:(id)arg3 andError:(id)arg4;
- (void)player:(id)arg1 didOpenMovieWithError:(id)arg2;
- (void)updateUIPlayContextForRequest:(id)arg1;
- (id)initiatePlatformOfflinePlayback:(id)arg1;
- (id)initiatePlatformPlayback:(id)arg1;
- (id)initiatePlatformVideoURLPlayback:(id)arg1;
- (void)loadingOperation:(id)arg1 initiatePlayback:(id)arg2;
- (id)paramsForRequest:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) id <NFUIPlatformControllerProtocol><NFUIPlatformLoggerProtocol> platformController;
- (void)percentSubtitleFontSize:(double)arg1;
- (void)positionSubtitleWithPercent:(double)arg1;
- (void)pause;
- (void)play;
@property(nonatomic) float volume;
@property(nonatomic) float rate;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) float currentTimePercent;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) unsigned long long state;
@property(readonly, nonatomic, getter=isReady) _Bool ready;
- (void)updateMediatorWithError:(id)arg1;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

