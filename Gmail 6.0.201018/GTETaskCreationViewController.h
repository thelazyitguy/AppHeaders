//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MDCCollectionViewController.h"

#import "GTEAssigneePickerDelegate-Protocol.h"
#import "GTEBottomDrawerContent-Protocol.h"
#import "GTEDateTimeRecurrencePickerViewControllerDelegate-Protocol.h"
#import "GTETaskCreationChipsStackViewCellDelegate-Protocol.h"
#import "GTETaskCreationTextViewCellDelegate-Protocol.h"
#import "GTETaskCreationToolbarCellDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"

@class GTEAssignee, GTEDateTime, GTERecurrenceScheduling, GTETaskCreationChipsStackViewCell, GTETaskCreationTextViewCell, GTETaskCreationToolbarCell, GTETaskList, GTETaskSource, NSArray, NSObject, NSString, UIButton;
@protocol GTEAssigneePickerRoomFactoryProvider><GTEDataModelKeyProvider, GTEChipConfiguratorProvider><GTEIDGeneratorProvider><GTEThemerProvider><GTETimeServiceProvider><GTERecurrenceInterpreterProvider><GTENavigationServiceProvider, GTETaskCreationViewControllerDelegate, GTETasksKitFeatureFlagsProvider><GTELoggersProvider;

@interface GTETaskCreationViewController : MDCCollectionViewController <UICollectionViewDataSource, UICollectionViewDelegate, GTETaskCreationToolbarCellDelegate, GTETaskCreationTextViewCellDelegate, GTETaskCreationChipsStackViewCellDelegate, GTEDateTimeRecurrencePickerViewControllerDelegate, GTEAssigneePickerDelegate, GTEBottomDrawerContent>
{
    NSObject<GTEChipConfiguratorProvider><GTEIDGeneratorProvider><GTEThemerProvider><GTETimeServiceProvider><GTERecurrenceInterpreterProvider><GTENavigationServiceProvider> *_appContext;
    NSObject<GTETasksKitFeatureFlagsProvider><GTELoggersProvider> *_userContext;
    NSObject<GTEAssigneePickerRoomFactoryProvider><GTEDataModelKeyProvider> *_dataContext;
    GTETaskList *_taskList;
    GTETaskSource *_taskSource;
    double _keyboardHeight;
    NSArray *_dataSource;
    NSString *_taskTitleText;
    NSString *_taskNotesText;
    GTEDateTime *_taskDateTime;
    GTERecurrenceScheduling *_taskRecurrenceScheduling;
    GTEAssignee *_taskAssignee;
    GTETaskCreationTextViewCell *_sizingTitleCell;
    GTETaskCreationTextViewCell *_sizingNotesCell;
    GTETaskCreationChipsStackViewCell *_sizingChipsCell;
    GTETaskCreationToolbarCell *_sizingToolbarCell;
    id <GTETaskCreationViewControllerDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <GTETaskCreationViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)displayDiscardConfirmationDialogIfNeeded;
- (void)createTask;
- (_Bool)canCreateTask;
- (void)presentAssigneePicker;
- (_Bool)allowRecurrence;
- (void)keyboardChanged:(id)arg1;
- (void)dateTimeRecurrencePickerDidSelectDateTime:(id)arg1 recurrenceScheduling:(id)arg2;
- (void)presentDateTimeViewController;
- (id)indexPathForItem:(id)arg1 inDataSource:(id)arg2;
- (id)indexPathsForItems:(id)arg1 inDataSource:(id)arg2;
- (void)reloadCellOfType:(long long)arg1;
- (void)updateDataSource:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeFromDataSource:(long long)arg1;
- (void)addToDataSource:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)adjustInsets;
- (void)adjustPreferredContentSize;
- (struct CGSize)preferredContentSizeCappedToScreenHeight:(_Bool *)arg1;
- (void)prepareTextViewCellforCell:(id)arg1 andIsTitleTextView:(_Bool)arg2;
- (id)getCellOfType:(long long)arg1;
- (void)scrollToKeepCaretVisibleForTextCell:(id)arg1;
- (void)scrollToKeepCaretVisible;
- (_Bool)accessibilityPerformEscape;
- (void)drawerDidClose;
- (_Bool)drawerDidDragDownAndShouldDimiss;
- (_Bool)drawerDidTapBackgroundAndShouldDismiss;
@property(readonly, nonatomic) long long drawerDraggingPolicy;
@property(readonly, nonatomic) _Bool drawerInitiallyExpandToFullHeight;
@property(readonly, nonatomic) _Bool drawerHeaderHideButtonWhenNotFullscreen;
@property(readonly, nonatomic) _Bool drawerHeaderMakeTitleSmallAndLeftAligned;
@property(readonly, nonatomic) UIButton *drawerHeaderButton;
@property(readonly, copy, nonatomic) NSString *drawerHeaderTitle;
- (void)assigneePickerDidDismissWithoutChanges:(id)arg1;
- (void)assigneePickerWillDismissWithUnassign:(id)arg1;
- (void)assigneePicker:(id)arg1 willDismissWithPickedAssignee:(id)arg2;
- (void)dateTimeRecurrencePickerWasDismissed:(id)arg1;
- (void)dateTimeRecurrencePicker:(id)arg1 didSelectDateTime:(id)arg2 recurrenceScheduling:(id)arg3;
- (void)creationToolbarCellDidTapBackground:(id)arg1;
- (void)creationToolbarCellDidTapAssign:(id)arg1;
- (void)creationToolbarCellDidTapAddDateTime:(id)arg1;
- (void)creationToolbarCellDidTapAddNotes:(id)arg1;
- (void)creationToolbarCellDidTapSave:(id)arg1;
- (void)creationAssigneeChipDidTapClearButton:(id)arg1;
- (void)creationAssigneeChipDidTapChip:(id)arg1;
- (void)creationDateTimeChipDidTapClearButton:(id)arg1;
- (void)creationDateTimeChipDidTapChip:(id)arg1;
- (void)creationTextViewCellDidEndEditing:(id)arg1;
- (void)creationTextViewCellWillBeginEditing:(id)arg1;
- (void)creationTextViewCellTextDidChange:(id)arg1;
- (_Bool)isTitleTextViewCell:(id)arg1;
- (void)creationTextViewCellDidTapDoneKey:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithAppContext:(id)arg1 userContext:(id)arg2 dataContext:(id)arg3 title:(id)arg4 taskList:(id)arg5 taskSource:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

