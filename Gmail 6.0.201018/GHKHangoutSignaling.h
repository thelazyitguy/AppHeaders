//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GHKHangoutResolverEventHandler-Protocol.h"
#import "GHKHarmonyConferenceEventHandler-Protocol.h"
#import "GHKHarmonyCurrentSpeakerMonitorEventHandler-Protocol.h"
#import "GHKHarmonyMediaSessionEventHandler-Protocol.h"

@class GHKHangoutApiaryClient, GHKHangoutCallInfo, GHKHangoutMedia, GHKHarmonyRequestListener, GHKImpressionReporter, GHKJoinLatencyMarkReporter, GHKLogIDProvider, GHKNetworkStateManager, NSMutableDictionary, NSMutableSet, NSString;
@protocol GHKHangoutCollectionPrivate, GHKHangoutSignalingDelegate;

@interface GHKHangoutSignaling : NSObject <GHKHarmonyConferenceEventHandler, GHKHangoutResolverEventHandler, GHKHarmonyMediaSessionEventHandler, GHKHarmonyCurrentSpeakerMonitorEventHandler>
{
    GHKHangoutMedia *_media;
    GHKHangoutApiaryClient *_apiaryClient;
    GHKLogIDProvider *_logIDProvider;
    GHKNetworkStateManager *_networkManager;
    GHKImpressionReporter *_impressionReporter;
    GHKJoinLatencyMarkReporter *_markReporter;
    CDUnknownBlockType _resolveCompletionHandler;
    CDUnknownBlockType _meetingJoinCompletionHandler;
    GHKHangoutCallInfo *_callInfo;
    _Bool _isHarmonyInitialized;
    NSString *_resolvedHangoutID;
    _Bool _thorMode;
    struct unique_ptr<harmony::PlatformHelperInterface, std::__1::default_delete<harmony::PlatformHelperInterface>> _harmonyPlatformHelper;
    struct unique_ptr<harmony::Conference, std::__1::default_delete<harmony::Conference>> _harmonyConference;
    struct unique_ptr<harmony::HangoutResolver, std::__1::default_delete<harmony::HangoutResolver>> _hangoutResolver;
    // Error parsing type: {VideoCallOptions="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadata="ptr_"^v}"_has_bits_"{HasBits<4>="has_bits_"[4I]}"_cached_size_"{CachedSize="size_"{atomic<int>="__a_"{__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >="__a_value"Ai}}}"aec_dump_filename_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"rtc_event_log_filename_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"media_router_shard_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"audio_adaptation_field_trials_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"webrtc_field_trials_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"aec3_options_"^{MessageLite}"audio_network_adaptor_config_"^{MessageLite}"downlink_video_pause_backend_config_"^{MessageLite}"nicer_config_"^{MessageLite}"down_stream_media_bandwidth_"^{MessageLite}"video_quality_configuration_"^{MessageLite}"receive_stream_adapter_config_"^{MessageLite}"call_start_stats_warmup_frames_"i"participant_fast_poll_period_millis_"i"session_fast_poll_period_millis_"i"min_video_bitrate_bps_"i"enable_qos_"B"suspend_below_min_bitrate_"B"enable_level_control_"B"enable_screencast_software_fallback_"B"aec_dump_max_size_bytes_"i"rtc_event_log_max_size_bytes_"i"enable_send_side_bandwidth_estimation_"B"average_stateful_neteq_stats_"B"use_virtual_audio_ssrcs_"B"enable_cpu_adaptation_"B"screenshare_min_bitrate_kbps_"i"adaptive_layering_mode_"i"is_pstn_only_client_"B"use_meeting_identifier_for_session_add_"B"allow_disabling_video_"B"allow_h264_"B"max_audio_bitrate_kbps_"i"pre_amplifier_fixed_gain_factor_"f"stats_update_period_seconds_"i"enable_server_side_speaker_switching_"B"optimize_video_stream_registration_"B"enable_versioned_collection_sync_"B"enable_batch_collection_sync_"B"allow_captions_"B"passive_listeners_"B"elevated_audio_priority_"B"elevated_video_priority_"B"reduced_video_priority_"B"use_dpi_aware_view_request_"B"enable_new_getstats_"B"report_call_start_in_prepare_"B"enable_hydrophone_"B"enable_render_volume_control_"B"enable_echo_detector_v2_"B"ios_force_software_aec_hack_"B"start_up_stream_bandwidth_kbps_"i"allow_h265x_"B"allow_vp9_"B"send_vp9_"B"allow_av1_"B"merge_get_stats_polling_"B"stats_batch_uploads_"B"use_one_platform_mesi_url_"B"use_mas_versioned_sync_"B"enable_audio_adaptation_"B"skip_handling_remote_mute_"B"use_hangout_message_collection_"B"use_rtp_header_audio_levels_"B"enable_apmg3_"B"disable_32_khz_capping_on_arm_"B"enable_aec3_"B"enable_aec3_mobile_"B"stats_generate_period_seconds_"i"enable_media_stream_rpcs_over_datachannel_"B"enable_media_stream_rpcs_over_datachannel_no_timeout_failing_"B"enable_media_stream_search_rpcs_over_datachannel_"B"disable_hardware_coding_"B"cloud_audio_processor_denoiser_mode_"i"max_outgoing_video_size_"i"use_audio_levels_from_adm_observer_"B"stop_sending_muted_audio_"B"allow_mediapipe_"B"allow_background_blur_"B"render_volume_control_gain_db_"f"use_separate_network_thread_"B"enable_breakout_rooms_"B"enable_hand_raise_"B"enable_invite_"B"enable_questions_"B"enable_polls_"B"enable_audio_minimize_resampling_"B"enable_loopback_media_"B"report_startup_entry_as_experimental_"B"poll_search_delay_millis_"i"enable_audio_"B"enable_aec_"B"continue_uploading_queued_stats_rpcs_after_disconnect_"B"max_view_request_size_"i"knocking_timeout_seconds_"i"hydrophone_activation_threshold_"f"audio_monitor_poll_period_millis_"i}, name: _harmonyOptions
    unique_ptr_ce947e15 _mediaSession;
    struct unique_ptr<GHKHarmonyMediaSessionEventListener, std::__1::default_delete<GHKHarmonyMediaSessionEventListener>> _mediaSessionListener;
    struct unique_ptr<harmony::CurrentSpeakerMonitor, std::__1::default_delete<harmony::CurrentSpeakerMonitor>> _currentSpeakerMonitor;
    struct unique_ptr<GHKHarmonyCurrentSpeakerMonitorEventListener, std::__1::default_delete<GHKHarmonyCurrentSpeakerMonitorEventListener>> _currentSpeakerMonitorListener;
    struct unique_ptr<GHKHarmonyConferenceEventListener, std::__1::default_delete<GHKHarmonyConferenceEventListener>> _harmonyConferenceListener;
    struct unique_ptr<GHKHangoutResolverEventListener, std::__1::default_delete<GHKHangoutResolverEventListener>> _hangoutResolverListener;
    GHKHarmonyRequestListener *_harmonyRequestListener;
    NSMutableSet *_bandwidthImpressionsReported;
    _Bool _wasLeaveRequested;
    _Bool _isLeavePending;
    _Bool _leaveSuccess;
    _Bool _shouldVideoBeFlowing;
    _Bool _shouldAudioBeFlowing;
    _Bool _hasReportedStart;
    _Bool _reportCallStartInPrepare;
    _Bool _wasEverConnected;
    int _voiceMediaInfoUpdatesSinceLog;
    int _videoMediaInfoUpdatesSinceLog;
    int _connectionInfoUpdatesSinceLog;
    _Bool _audioMuted;
    _Bool _videoMuted;
    NSString *_localParticipantID;
    NSMutableDictionary *_participants;
    id <GHKHangoutSignalingDelegate> _delegate;
    id <GHKHangoutCollectionPrivate> _hangoutsCollection;
    id <GHKHangoutCollectionPrivate> _participantsCollection;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) id <GHKHangoutCollectionPrivate> participantsCollection; // @synthesize participantsCollection=_participantsCollection;
@property(retain, nonatomic) id <GHKHangoutCollectionPrivate> hangoutsCollection; // @synthesize hangoutsCollection=_hangoutsCollection;
@property(nonatomic) __weak id <GHKHangoutSignalingDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMutableDictionary *participants; // @synthesize participants=_participants;
@property(retain, nonatomic) NSString *localParticipantID; // @synthesize localParticipantID=_localParticipantID;
- (int)startupEventCodeForParticipantAddErrorCode:(int)arg1 fallbackCode:(int)arg2;
- (void)reportBandwidthImpressions:(int)arg1;
- (id)createStatsPath;
- (_Bool)maybeTearDown;
- (void)handleScreencastStateUpdatedEvent:(id)arg1;
- (void)handleNetworkStateChangedEvent:(id)arg1;
-     // Error parsing type: ^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}24@0:8r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}16, name: harmonyParticipantForParticipantID:
- (void)signalLocalMuteForMediaType:(int)arg1 muted:(_Bool)arg2;
-     // Error parsing type: {MesiClientInfo={ClientClientVersion=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}iqi{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}i}{ClientClientIdentifier=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{RtcClient=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}iiiiii}}16@0:8, name: mesiClientInfo
- (void)resolveHangoutIDWithInvitees:(id)arg1 audioOnly:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
-     // Error parsing type: v24@0:8^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}16, name: didModifyHarmonyConference:
- (void)resetHarmony;
- (void)resetConferenceAndMeeting;
- (void)resetMediaSession;
- (void)reportCallJoined;
- (void)reportCallStart;
- (void)onHangoutMessageReceived:(id)arg1;
-     // Error parsing type: v40@0:8@16@24^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}32, name: onClientDataReceived:sender:conference:
-     // Error parsing type: v32@0:8^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}24, name: onParticipantRemoved:conference:
- (void)onAudioMuteRequestedByRemoteParticipant:(id)arg1;
-     // Error parsing type: v32@0:8^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}24, name: onParticipantModified:conference:
-     // Error parsing type: v32@0:8^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}24, name: onParticipantAdded:conference:
-     // Error parsing type: v24@0:8^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}16, name: onConferenceModified:
-     // Error parsing type: v28@0:8i16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}20, name: onError:conference:
- (void)onCloudDenoiserEnabledStateUpdate:(int)arg1;
- (void)onCaptionsLanguageUpdate:(int)arg1 sourceLanguage:(int)arg2 captionsEnabled:(_Bool)arg3;
- (void)onCaptionsEnabledUpdate:(_Bool)arg1;
-     // Error parsing type: v24@0:8r^{CaptionsEvent=^^?{InternalMetadata=^v}(EventUnion=^{Caption}^{CaptionNotification}){CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}[1I]}16, name: onCaptionsEventReceived:
-     // Error parsing type: v24@0:8r^{PushNotification=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{Any}^{MessageLite}}16, name: onMeetingsPushReceived:
- (void)onMeetingJoinComplete:(int)arg1;
- (void)joinMeetingWithDeviceID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)onCurrentSpeakerChanged:(const scoped_refptr_6b572d65 *)arg1;
- (void)onIsCroppableChanged:(const scoped_refptr_3cbe36af *)arg1;
- (void)onMuteStateChanged:(const scoped_refptr_d9678c0a *)arg1;
- (void)didChangeLocalAudioLevels:(const vector_5801902f *)arg1 remoteAudioLevels:(const flat_hash_set_3f5ac4c4 *)arg2;
- (void)onIncomingVideoRequestChanged:(const struct VideoRequest *)arg1;
- (void)onRemoteAudioSourcesChanged:(const SourceChangeHint_2b442c8b *)arg1;
- (void)onRemoteVideoSourcesChanged:(const SourceChangeHint_700813ee *)arg1;
- (void)onMediaStateChanged:(int)arg1 reason:(int)arg2;
- (void)onMediaSessionIDAvailable:(id)arg1;
- (void)reportEndCause:(int)arg1;
-     // Error parsing type: v32@0:8i16i20r^{StartInformation=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}Bi}24, name: reportStartupEventCode:startAction:startInformation:
- (_Bool)isVideoCroppableForParticipantID:(id)arg1;
- (_Bool)muteStateForParticipantID:(id)arg1 mediaType:(int)arg2;
- (void)onInitialRemoteSourceSyncComplete;
- (void)onFirstPacketReceived:(int)arg1;
-     // Error parsing type: v24@0:8r^{CallPerfLogEntry_DataPoint_Media=^^?{InternalMetadata=^v}{HasBits<4>=[4I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedField<unsigned int>=ii^v}{WeakRepeatedPtrField<CallPerfLogEntry_DataPoint_Media_CsrcInterval>=(?={RepeatedPtrField<CallPerfLogEntry_DataPoint_Media_CsrcInterval>=^{Arena}ii^{Rep}})}{WeakRepeatedPtrField<CallPerfLogEntry_DataPoint_Media_SentResolutions>=(?={RepeatedPtrField<CallPerfLogEntry_DataPoint_Media_SentResolutions>=^{Arena}ii^{Rep}})}{RepeatedField<int>=ii^v}{RepeatedField<int>=ii^v}{RepeatedField<int>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<int>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<int>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedField<float>=ii^v}{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{RepeatedPtrField<CallPerfLogEntry_DataPoint_Media_SsrcGroup>=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{RepeatedField<int>=ii^v}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{WeakRepeatedPtrField<CallPerfLogEntry_DataPoint_RemoteNodesInfo>=(?={RepeatedPtrField<CallPerfLogEntry_DataPoint_RemoteNodesInfo>=^{Arena}ii^{Rep}})}iiiiiiiiqqiiiiiBiiiiiiiiiiiiiqqqqiiqiiiiiiiiiiiiiififfiiiii^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}iiIiiiiiiiffBffiiiiiffiiffffiiiiqfiqqqqdqiiiiifiifiq}16, name: onBandwidthEstimateGenerated:
- (void)sendDtmfCode:(id)arg1 pstnParticipantID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)ejectRemoteParticipantWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)blockRemoteParticipantWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setCloudDenoiserEnabled:(_Bool)arg1;
- (void)enableCaptionsWithLanguage:(int)arg1 sourceLanguage:(int)arg2;
- (void)setCaptionsLanguage:(int)arg1 sourceLanguage:(int)arg2;
- (void)setCaptionsEnabled:(_Bool)arg1;
- (void)setHangoutCookie:(id)arg1;
- (void)endVideoRequestGroup;
- (void)beginVideoRequestGroup;
- (void)muteAudio:(_Bool)arg1;
- (void)muteIncomingAudioPlayout:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setAudioState:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)muteVideo:(_Bool)arg1;
- (void)leave;
- (void)muteRemoteParticipantWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)sendInvitesForInvitees:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)sendMessage:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)joinHangoutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)joinWithInitialAudioMute:(_Bool)arg1 initialVideoMute:(_Bool)arg2 localParticipantID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)createConferenceWithCallInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)onHangoutResolved:(_Bool)arg1 hangoutID:(id)arg2;
- (void)onKnockingStarted;
- (void)setupMediaSessionWithHangoutID:(id)arg1;
@property(readonly, nonatomic) _Bool isResolved;
- (void)dealloc;
- (id)initWithMedia:(id)arg1 apiaryClient:(id)arg2 delegate:(id)arg3 mediaSession:(unique_ptr_ce947e15)arg4 logIDProvider:(id)arg5 videoCallOptions:(id)arg6 impressionReporter:(id)arg7 markReporter:(id)arg8;
- (id)initWithMedia:(id)arg1 apiaryClient:(id)arg2 delegate:(id)arg3 logIDProvider:(id)arg4 videoCallOptions:(id)arg5 impressionReporter:(id)arg6 markReporter:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

