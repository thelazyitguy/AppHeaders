//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GSCLabel.h"

#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSAttributedString, NSString, NSTextCheckingResult, UIColor, UITapGestureRecognizer;

@interface GSCStyledLabel : GSCLabel <UIGestureRecognizerDelegate>
{
    NSAttributedString *_attributedString;
    double _lineHeight;
    double _paragraphSpacing;
    UIColor *_linkColor;
    UIColor *_highlightedLinkBackgroundColor;
    _Bool _areLinksUnderlined;
    NSTextCheckingResult *_activeLink;
    struct __CTFrame *_textFrame;
    UITapGestureRecognizer *_tapRecognizer;
    _Bool _areLinksClickable;
    long long _defaultFontSize;
}

+ (unsigned char)lineBreakModeFromLineBreakMode:(long long)arg1;
+ (unsigned char)alignmentFromTextAlignment:(long long)arg1;
- (void).cxx_destruct;
@property(nonatomic) long long defaultFontSize; // @synthesize defaultFontSize=_defaultFontSize;
@property(retain, nonatomic) NSTextCheckingResult *activeLink; // @synthesize activeLink=_activeLink;
@property(nonatomic) _Bool areLinksClickable; // @synthesize areLinksClickable=_areLinksClickable;
@property(nonatomic) _Bool areLinksUnderlined; // @synthesize areLinksUnderlined=_areLinksUnderlined;
@property(retain, nonatomic) UIColor *highlightedLinkBackgroundColor; // @synthesize highlightedLinkBackgroundColor=_highlightedLinkBackgroundColor;
@property(retain, nonatomic) UIColor *linkColor; // @synthesize linkColor=_linkColor;
@property(nonatomic) double paragraphSpacing; // @synthesize paragraphSpacing=_paragraphSpacing;
@property(nonatomic) double lineHeight; // @synthesize lineHeight=_lineHeight;
- (void)enumerateLinesUsingBlock:(CDUnknownBlockType)arg1;
- (struct CGRect)boundsForRun:(struct __CTRun *)arg1 inLine:(struct __CTLine *)arg2 withOrigin:(struct CGPoint)arg3;
- (struct CGRect)rectForRange:(struct _NSRange)arg1 inLine:(struct __CTLine *)arg2 lineOrigin:(struct CGPoint)arg3;
- (id)rectsForLink:(id)arg1;
- (_Bool)isPoint:(struct CGPoint)arg1 nearLink:(id)arg2;
- (id)linkAtCharacterIndex:(unsigned long long)arg1;
- (struct CGRect)boundsForLine:(struct __CTLine *)arg1 origin:(struct CGPoint)arg2;
- (unsigned long long)characterIndexAtPoint:(struct CGPoint)arg1;
- (id)linkAtPoint:(struct CGPoint)arg1;
- (id)mutableAttributedStringFromText:(id)arg1;
- (id)currentTextColor;
- (struct CGAffineTransform)transformForCoreText;
- (id)fontForAttributes:(id)arg1 fontDidChange:(_Bool)arg2;
- (id)convertedAttributedString:(id)arg1 fontDidChange:(_Bool)arg2;
- (id)mutableAttributedStringWithStyles;
- (void)drawActiveLinkHighlightForRect:(struct CGRect)arg1;
- (void)drawAttributedString:(id)arg1 inRect:(struct CGRect)arg2;
- (struct CGSize)sizeThatFitsUnlimited:(struct CGSize)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 limitedToNumberOfLines:(long long)arg2 numberOfDisplayedLines:(unsigned long long *)arg3;
- (void)drawLine:(struct __CTLine *)arg1 atOrigin:(struct CGPoint)arg2 context:(struct CGContext *)arg3;
- (long long)numberOfDisplayedLines;
- (void)applyParagraphStyle;
- (void)attributedTextDidChange;
- (void)handleTap:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawTextInRect:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlightedTextColor:(id)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setLineBreakMode:(long long)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (id)text;
- (void)setText:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (id)attributedText;
@property(copy, nonatomic) NSAttributedString *attributedString;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 numberOfDisplayedLines:(unsigned long long *)arg2;
- (void)configure;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

