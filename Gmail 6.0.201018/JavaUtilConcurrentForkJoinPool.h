//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JavaUtilConcurrentAbstractExecutorService.h"

@class JavaUtilConcurrentForkJoinPool_AuxState, NSString;
@protocol JavaLangThread_UncaughtExceptionHandler, JavaUtilConcurrentForkJoinPool_ForkJoinWorkerThreadFactory;

@interface JavaUtilConcurrentForkJoinPool : JavaUtilConcurrentAbstractExecutorService
{
    // Error parsing type: Aq, name: ctl_
    // Error parsing type: Ai, name: runState_
    int config_;
    JavaUtilConcurrentForkJoinPool_AuxState *auxState_;
    unsigned long long workQueues_;
    NSString *workerNamePrefix_;
    id <JavaUtilConcurrentForkJoinPool_ForkJoinWorkerThreadFactory> factory_;
    id <JavaLangThread_UncaughtExceptionHandler> ueh_;
}

+ (void)initialize;
+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)makeCommonPool;
+ (void)managedBlockWithJavaUtilConcurrentForkJoinPool_ManagedBlocker:(id)arg1;
+ (void)quiesceCommonPool;
+ (int)getCommonPoolParallelism;
+ (id)commonPool;
+ (id)checkFactoryWithJavaUtilConcurrentForkJoinPool_ForkJoinWorkerThreadFactory:(id)arg1;
+ (int)checkParallelismWithInt:(int)arg1;
+ (id)commonSubmitterQueue;
+ (int)getSurplusQueuedTaskCount;
+ (int)nextPoolId;
- (void)dealloc;
- (void)__javaClone:(id)arg1;
- (id)newTaskForWithJavaUtilConcurrentCallable:(id)arg1;
- (id)newTaskForWithJavaLangRunnable:(id)arg1 withId:(id)arg2;
- (_Bool)awaitQuiescenceWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2;
- (_Bool)awaitTerminationWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2;
- (_Bool)isShutdown;
- (_Bool)isTerminating;
- (_Bool)isTerminated;
- (id)shutdownNow;
- (void)shutdown;
- (id)description;
- (int)drainTasksToWithJavaUtilCollection:(id)arg1;
- (id)pollSubmission;
- (_Bool)hasQueuedSubmissions;
- (int)getQueuedSubmissionCount;
- (long long)getQueuedTaskCount;
- (long long)getStealCount;
- (_Bool)isQuiescent;
- (int)getActiveThreadCount;
- (int)getRunningThreadCount;
- (_Bool)getAsyncMode;
- (int)getPoolSize;
- (int)getParallelism;
- (id)getUncaughtExceptionHandler;
- (id)getFactory;
- (id)invokeAllWithJavaUtilCollection:(id)arg1;
- (id)submitWithJavaLangRunnable:(id)arg1;
- (id)submitWithJavaLangRunnable:(id)arg1 withId:(id)arg2;
- (id)submitWithJavaUtilConcurrentCallable:(id)arg1;
- (id)submitWithJavaUtilConcurrentForkJoinTask:(id)arg1;
- (void)executeWithJavaLangRunnable:(id)arg1;
- (void)executeWithJavaUtilConcurrentForkJoinTask:(id)arg1;
- (id)invokeWithJavaUtilConcurrentForkJoinTask:(id)arg1;
- (id)initWithInt:(int)arg1 withJavaUtilConcurrentForkJoinPool_ForkJoinWorkerThreadFactory:(id)arg2 withJavaLangThread_UncaughtExceptionHandler:(id)arg3 withInt:(int)arg4 withNSString:(id)arg5;
- (id)initWithInt:(int)arg1 withJavaUtilConcurrentForkJoinPool_ForkJoinWorkerThreadFactory:(id)arg2 withJavaLangThread_UncaughtExceptionHandler:(id)arg3 withBoolean:(_Bool)arg4;
- (id)initWithInt:(int)arg1;
- (id)init;
- (int)externalHelpCompleteWithJavaUtilConcurrentCountedCompleter:(id)arg1 withInt:(int)arg2;
- (_Bool)tryExternalUnpushWithJavaUtilConcurrentForkJoinTask:(id)arg1;
- (id)externalSubmitWithJavaUtilConcurrentForkJoinTask:(id)arg1;
- (void)externalPushWithJavaUtilConcurrentForkJoinTask:(id)arg1;
- (void)tryCreateExternalQueueWithInt:(int)arg1;
- (int)tryTerminateWithBoolean:(_Bool)arg1 withBoolean:(_Bool)arg2;
- (id)nextTaskForWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1;
- (void)helpQuiescePoolWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1;
- (id)findNonEmptyStealQueue;
- (int)awaitJoinWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withJavaUtilConcurrentForkJoinTask:(id)arg2 withLong:(long long)arg3;
- (_Bool)tryCompensateWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1;
- (void)helpStealerWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withJavaUtilConcurrentForkJoinTask:(id)arg2;
- (int)helpCompleteWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withJavaUtilConcurrentCountedCompleter:(id)arg2 withInt:(int)arg3;
- (int)scanWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4;
- (void)runWorkerWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1;
- (_Bool)tryDropSpareWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1;
- (int)timedAwaitWorkWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withLong:(long long)arg2;
- (int)awaitWorkWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1;
- (void)inactivateWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withInt:(int)arg2;
- (void)tryReactivateWithJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg1 withJavaUtilConcurrentForkJoinPool_WorkQueueArray:(id)arg2 withInt:(int)arg3;
- (_Bool)tryReleaseWithLong:(long long)arg1 withJavaUtilConcurrentForkJoinPool_WorkQueue:(id)arg2 withLong:(long long)arg3;
- (void)signalWork;
- (void)deregisterWorkerWithJavaUtilConcurrentForkJoinWorkerThread:(id)arg1 withJavaLangThrowable:(id)arg2;
- (id)registerWorkerWithJavaUtilConcurrentForkJoinWorkerThread:(id)arg1;
- (void)tryAddWorkerWithLong:(long long)arg1;
- (_Bool)createWorkerWithBoolean:(_Bool)arg1;
- (void)tryInitializeWithBoolean:(_Bool)arg1;

@end

