//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class JavaUtilConcurrentAtomicAtomicReference;

@interface JavaUtilConcurrentPhaser : NSObject
{
    // Error parsing type: Aq, name: state_
    JavaUtilConcurrentPhaser *parent_;
    JavaUtilConcurrentPhaser *root_;
    JavaUtilConcurrentAtomicAtomicReference *evenQ_;
    JavaUtilConcurrentAtomicAtomicReference *oddQ_;
}

+ (void)initialize;
+ (const struct J2ObjcClassInfo *)__metadata;
+ (void)ensureLoadedWithIOSClass:(id)arg1;
+ (int)arrivedOfWithLong:(long long)arg1;
+ (int)phaseOfWithLong:(long long)arg1;
+ (int)partiesOfWithLong:(long long)arg1;
+ (int)unarrivedOfWithLong:(long long)arg1;
- (void)dealloc;
- (int)internalAwaitAdvanceWithInt:(int)arg1 withJavaUtilConcurrentPhaser_QNode:(id)arg2;
- (int)abortWaitWithInt:(int)arg1;
- (void)releaseWaitersWithInt:(int)arg1;
- (id)stateToStringWithLong:(long long)arg1;
- (id)description;
- (_Bool)onAdvanceWithInt:(int)arg1 withInt:(int)arg2;
- (_Bool)isTerminated;
- (id)getRoot;
- (id)getParent;
- (int)getUnarrivedParties;
- (int)getArrivedParties;
- (int)getRegisteredParties;
- (int)getPhase;
- (void)forceTermination;
- (int)awaitAdvanceInterruptiblyWithInt:(int)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnit:(id)arg3;
- (int)awaitAdvanceInterruptiblyWithInt:(int)arg1;
- (int)awaitAdvanceWithInt:(int)arg1;
- (int)arriveAndAwaitAdvance;
- (int)arriveAndDeregister;
- (int)arrive;
- (int)bulkRegisterWithInt:(int)arg1;
- (int)register__;
- (id)initWithJavaUtilConcurrentPhaser:(id)arg1 withInt:(int)arg2;
- (id)initWithJavaUtilConcurrentPhaser:(id)arg1;
- (id)initWithInt:(int)arg1;
- (id)init;
- (long long)reconcileState;
- (int)doRegisterWithInt:(int)arg1;
- (int)doArriveWithInt:(int)arg1;
- (id)badRegisterWithLong:(long long)arg1;
- (id)badArriveWithLong:(long long)arg1;
- (id)queueForWithInt:(int)arg1;

@end

