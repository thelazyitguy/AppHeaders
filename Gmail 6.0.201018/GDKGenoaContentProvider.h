//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKContentProvider-Protocol.h"

@class GDKBackendInstance, GDKDownloadService, GDKVideoFetcher, NSArray, NSDate, NSString, NSURL;
@protocol GDKFile, GDKFileContentManaging, GDKFileFetcher, GDKSnackbarControlling, SSOIdentity;

@interface GDKGenoaContentProvider : NSObject <GDKContentProvider>
{
    _Bool _sennaPDFConversionEnabled;
    NSURL *_storageURL;
    id <GDKFileFetcher> _fileFetcher;
    id <GDKFileContentManaging> _fileContentManager;
    id <GDKSnackbarControlling> _snackbarController;
    GDKDownloadService *_downloadService;
    GDKVideoFetcher *_videoFetcher;
    GDKBackendInstance *_backendInstance;
    id <GDKFile> _currentOfflineDownload;
    NSArray *_offlineQueue;
    NSArray *_offlineFailures;
    NSDate *_timeOfLastProgressUpdate;
    NSURL *_tempLocalDirectory;
    NSURL *_tempDirectoryForUnlockedFiles;
    CDUnknownBlockType _itemDeletedObserverUnregisterBlock;
    id <SSOIdentity> _ssoIdentity;
}

+ (id)titleForFile:(id)arg1;
+ (unsigned long long)errorCodeForSennaError:(id)arg1 downloadRequest:(id)arg2;
+ (id)contentProviderErrorForDownloadError:(id)arg1 downloadRequest:(id)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <SSOIdentity> ssoIdentity; // @synthesize ssoIdentity=_ssoIdentity;
@property(readonly, nonatomic) CDUnknownBlockType itemDeletedObserverUnregisterBlock; // @synthesize itemDeletedObserverUnregisterBlock=_itemDeletedObserverUnregisterBlock;
@property(readonly, nonatomic) NSURL *tempDirectoryForUnlockedFiles; // @synthesize tempDirectoryForUnlockedFiles=_tempDirectoryForUnlockedFiles;
@property(readonly, nonatomic) NSURL *tempLocalDirectory; // @synthesize tempLocalDirectory=_tempLocalDirectory;
@property(retain, nonatomic) NSDate *timeOfLastProgressUpdate; // @synthesize timeOfLastProgressUpdate=_timeOfLastProgressUpdate;
@property(copy) NSArray *offlineFailures; // @synthesize offlineFailures=_offlineFailures;
@property(copy) NSArray *offlineQueue; // @synthesize offlineQueue=_offlineQueue;
@property(retain, nonatomic) id <GDKFile> currentOfflineDownload; // @synthesize currentOfflineDownload=_currentOfflineDownload;
@property(retain, nonatomic) GDKBackendInstance *backendInstance; // @synthesize backendInstance=_backendInstance;
@property(readonly, nonatomic) GDKVideoFetcher *videoFetcher; // @synthesize videoFetcher=_videoFetcher;
@property(readonly, nonatomic) GDKDownloadService *downloadService; // @synthesize downloadService=_downloadService;
@property(readonly, nonatomic) id <GDKSnackbarControlling> snackbarController; // @synthesize snackbarController=_snackbarController;
@property(readonly, nonatomic) id <GDKFileContentManaging> fileContentManager; // @synthesize fileContentManager=_fileContentManager;
@property(readonly, nonatomic) id <GDKFileFetcher> fileFetcher; // @synthesize fileFetcher=_fileFetcher;
@property(readonly, nonatomic) NSURL *storageURL; // @synthesize storageURL=_storageURL;
@property(nonatomic) _Bool sennaPDFConversionEnabled; // @synthesize sennaPDFConversionEnabled=_sennaPDFConversionEnabled;
- (void)invokeBlock:(CDUnknownBlockType)arg1 onDownloadFailureWithError:(id)arg2 downloadRequest:(id)arg3 forFile:(id)arg4;
- (CDUnknownBlockType)downloadProgressBlockForFile:(id)arg1 withFollowupBlock:(CDUnknownBlockType)arg2;
- (void)postNotificationName:(id)arg1 file:(id)arg2;
- (void)showPasswordProtectedSnackbarMessageForFile:(id)arg1;
- (void)showOutOfSpaceErrorSnackbarMessageForFile:(id)arg1;
- (void)showAvailableOfflineSnackbarMessageForFile:(id)arg1;
- (_Bool)removeOfflinedContentForItemID:(id)arg1;
- (void)removeOfflinedContentForRemovedFiles;
- (_Bool)isOfflineContentUpToDate:(id)arg1;
- (id)reachableLocalURLForFile:(id)arg1;
- (id)directoryURLForFileIdentifier:(id)arg1;
- (id)directoryURLForFile:(id)arg1;
- (id)localURLForFile:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (void)offlineStatusMonitorRequestedRemovalOfOldContent:(id)arg1;
- (void)offlineStatusMonitor:(id)arg1 filesInAvailableState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 fileEnteredCachedState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 filesInCachedState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 fileExitedDownloadingState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 filesInFailedState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 fileExitedPendingState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 fileEnteredPendingState:(id)arg2;
- (void)offlineStatusMonitor:(id)arg1 filesInPendingState:(id)arg2;
- (_Bool)isLocalDataValidForFile:(id)arg1;
- (void)moveOfflineFailuresBackIntoQueue;
- (void)updateOfflineDownloadProgressForFile:(id)arg1 withProgress:(float)arg2;
- (void)startNextOfflineDownload;
- (void)didCacheContentForViewingFile:(id)arg1 error:(id)arg2;
- (void)cacheContentForViewingFile:(id)arg1;
- (void)contentForViewingFile:(id)arg1 downloadRequest:(id)arg2 enableStreaming:(_Bool)arg3 downloadProgressBlock:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)removeFilesFromTemporaryCache;
- (void)cancelFetchForFile:(id)arg1;
- (void)removeOfflinedContentForFile:(id)arg1;
- (void)downloadContentForFile:(id)arg1 downloadRequest:(id)arg2 downloadProgressBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)contentForFile:(id)arg1 downloadRequest:(id)arg2 downloadProgressBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)contentForExportingFile:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)contentForPrintingFile:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)contentForViewingFile:(id)arg1 downloadRequest:(id)arg2 downloadProgressBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)contentForViewingFile:(id)arg1 downloadProgressBlock:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithStorageURL:(id)arg1 actionObserverRegistrar:(id)arg2 fileFetcher:(id)arg3 fileMutator:(id)arg4 snackbarController:(id)arg5 downloadService:(id)arg6 videoFetcher:(id)arg7 ssoIdentity:(id)arg8 backendInstance:(id)arg9;
- (id)initWithStorageURL:(id)arg1 actionObserverRegistrar:(id)arg2 fileFetcher:(id)arg3 fileMutator:(id)arg4 snackbarController:(id)arg5 downloadService:(id)arg6 videoFetcher:(id)arg7 ssoIdentity:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

