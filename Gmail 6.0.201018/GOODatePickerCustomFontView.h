//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIPickerView.h>

#import "GOODatePicking-Protocol.h"
#import "UIPickerViewDataSource-Protocol.h"
#import "UIPickerViewDelegate-Protocol.h"

@class NSCalendar, NSDate, NSDateFormatter, NSLocale, NSString, NSTimeZone, UIControl, UIDatePicker, UIFont;

@interface GOODatePickerCustomFontView : UIPickerView <GOODatePicking, UIPickerViewDataSource, UIPickerViewDelegate>
{
    NSDateFormatter *_dateFormatter;
    UIFont *_pickerFont;
    _Bool _has24HourClock;
    long long _selectedRows[4];
    NSString *_todayString;
    NSDate *_roundedToday;
    long long _monthIndex;
    long long _dayIndex;
    UIDatePicker *_datePicker;
    NSDateFormatter *_yearFormatter;
    NSDateFormatter *_dayOfMonthFormatter;
    long long _style;
    NSCalendar *_calendar;
    NSDate *_date;
    long long _datePickerMode;
    NSLocale *_locale;
    NSDate *_maximumDate;
    NSDate *_minimumDate;
    long long _minuteInterval;
    NSTimeZone *_timeZone;
    UIControl *_control;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UIControl *control; // @synthesize control=_control;
@property(retain, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(nonatomic) long long minuteInterval; // @synthesize minuteInterval=_minuteInterval;
@property(retain, nonatomic) NSDate *minimumDate; // @synthesize minimumDate=_minimumDate;
@property(retain, nonatomic) NSDate *maximumDate; // @synthesize maximumDate=_maximumDate;
@property(retain, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property(nonatomic) long long datePickerMode; // @synthesize datePickerMode=_datePickerMode;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
- (long long)positionForTimeComponent:(long long)arg1 datePickerMode:(long long)arg2;
- (long long)timeComponentForPosition:(long long)arg1 datePickerMode:(long long)arg2;
- (void)reloadCalendar;
- (void)loadRoundedToday;
- (void)loadTodayString;
- (void)selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3;
- (void)resetSelectedRows;
- (void)updateAMPMStateForRow:(long long)arg1 inHourComponent:(long long)arg2;
- (_Bool)isHourComponent:(long long)arg1;
- (long long)textAlignmentForComponent:(long long)arg1;
- (double)widthForComponent:(long long)arg1;
- (id)dateStringForIndex:(long long)arg1;
- (id)dateStringForDayOfMonth:(long long)arg1;
- (id)yearStringForYear:(long long)arg1;
- (id)monthNameAtIndex:(long long)arg1;
- (long long)numberOfDaysInCurrentMonth;
- (_Bool)isValidDateRange;
- (void)updatePickerViewStateAnimated:(_Bool)arg1;
- (id)titleForRow:(long long)arg1 forModeDateAndTimeInComponent:(long long)arg2;
- (long long)numberOfRowsForModeDateAndTimeInComponent:(long long)arg1;
- (id)titleForRow:(long long)arg1 forModeDateInComponent:(long long)arg2;
- (long long)numberOfRowsForModeDateInComponent:(long long)arg1;
- (id)titleForComponent:(long long)arg1 row:(long long)arg2;
- (id)titleForRow:(long long)arg1 forModeTimeInComponent:(long long)arg2;
- (long long)numberOfRowsForModeTimeInComponent:(long long)arg1;
- (id)titleForRow:(long long)arg1 inComponent:(long long)arg2;
- (long long)componentIndexForYear;
- (long long)componentIndexForDay;
- (long long)componentIndexForMonth;
- (void)calculateDateOrdering;
- (void)setComponent:(long long)arg1 row:(long long)arg2 componentPosition:(long long)arg3 inDateComponents:(id)arg4;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)setDate:(id)arg1 animated:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

