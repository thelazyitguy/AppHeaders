//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GRPCInterceptorInterface-Protocol.h"
#import "GRPCResponseHandler-Protocol.h"

@class GRPCInterceptor, NSArray, NSString;
@protocol GRPCInterceptorInterface, GRPCResponseHandler, OS_dispatch_queue;

@interface GRPCInterceptorManager : NSObject <GRPCInterceptorInterface, GRPCResponseHandler>
{
    id <GRPCInterceptorInterface> _nextInterceptor;
    id <GRPCResponseHandler> _previousInterceptor;
    GRPCInterceptor *_thisInterceptor;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSArray *_factories;
    char *_transportID;
    _Bool _shutDown;
}

- (void).cxx_destruct;
- (void)didWriteData;
- (void)didCloseWithTrailingMetadata:(id)arg1 error:(id)arg2;
- (void)didReceiveData:(id)arg1;
- (void)didReceiveInitialMetadata:(id)arg1;
- (void)receiveNextMessages:(unsigned long long)arg1;
- (void)cancel;
- (void)finish;
- (void)writeData:(id)arg1;
- (void)startWithRequestOptions:(id)arg1 callOptions:(id)arg2;
@property(readonly) NSObject<OS_dispatch_queue> *dispatchQueue;
- (void)forwardPreviousInterceptorDidWriteData;
- (void)forwardPreviousInterceptorCloseWithTrailingMetadata:(id)arg1 error:(id)arg2;
- (void)forwardPreviousInterceptorWithData:(id)arg1;
- (void)forwardPreviousInterceptorWithInitialMetadata:(id)arg1;
- (void)receiveNextInterceptorMessages:(unsigned long long)arg1;
- (void)cancelNextInterceptor;
- (void)finishNextInterceptor;
- (void)writeNextInterceptorWithData:(id)arg1;
- (void)startNextInterceptorWithRequest:(id)arg1 callOptions:(id)arg2;
- (void)createNextInterceptor;
- (void)shutDown;
- (id)initWithFactories:(id)arg1 previousInterceptor:(id)arg2 transportID:(char *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

