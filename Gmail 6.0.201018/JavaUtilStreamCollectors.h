//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface JavaUtilStreamCollectors : NSObject
{
}

+ (void)initialize;
+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)summarizingDoubleWithJavaUtilFunctionToDoubleFunction:(id)arg1;
+ (id)summarizingLongWithJavaUtilFunctionToLongFunction:(id)arg1;
+ (id)summarizingIntWithJavaUtilFunctionToIntFunction:(id)arg1;
+ (id)toConcurrentMapWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilFunctionBinaryOperator:(id)arg3 withJavaUtilFunctionSupplier:(id)arg4;
+ (id)toConcurrentMapWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilFunctionBinaryOperator:(id)arg3;
+ (id)toConcurrentMapWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
+ (id)toMapWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilFunctionBinaryOperator:(id)arg3 withJavaUtilFunctionSupplier:(id)arg4;
+ (id)toMapWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilFunctionBinaryOperator:(id)arg3;
+ (id)toMapWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
+ (id)partitioningByWithJavaUtilFunctionPredicate:(id)arg1 withJavaUtilStreamCollector:(id)arg2;
+ (id)partitioningByWithJavaUtilFunctionPredicate:(id)arg1;
+ (id)groupingByConcurrentWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionSupplier:(id)arg2 withJavaUtilStreamCollector:(id)arg3;
+ (id)groupingByConcurrentWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilStreamCollector:(id)arg2;
+ (id)groupingByConcurrentWithJavaUtilFunctionFunction:(id)arg1;
+ (id)groupingByWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilFunctionSupplier:(id)arg2 withJavaUtilStreamCollector:(id)arg3;
+ (id)groupingByWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilStreamCollector:(id)arg2;
+ (id)groupingByWithJavaUtilFunctionFunction:(id)arg1;
+ (id)reducingWithId:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilFunctionBinaryOperator:(id)arg3;
+ (id)reducingWithJavaUtilFunctionBinaryOperator:(id)arg1;
+ (id)boxSupplierWithId:(id)arg1;
+ (id)reducingWithId:(id)arg1 withJavaUtilFunctionBinaryOperator:(id)arg2;
+ (id)averagingDoubleWithJavaUtilFunctionToDoubleFunction:(id)arg1;
+ (id)averagingLongWithJavaUtilFunctionToLongFunction:(id)arg1;
+ (id)averagingIntWithJavaUtilFunctionToIntFunction:(id)arg1;
+ (double)computeFinalSumWithDoubleArray:(id)arg1;
+ (id)sumWithCompensationWithDoubleArray:(id)arg1 withDouble:(double)arg2;
+ (id)summingDoubleWithJavaUtilFunctionToDoubleFunction:(id)arg1;
+ (id)summingLongWithJavaUtilFunctionToLongFunction:(id)arg1;
+ (id)summingIntWithJavaUtilFunctionToIntFunction:(id)arg1;
+ (id)maxByWithJavaUtilComparator:(id)arg1;
+ (id)minByWithJavaUtilComparator:(id)arg1;
+ (id)counting;
+ (id)collectingAndThenWithJavaUtilStreamCollector:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
+ (id)mappingWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilStreamCollector:(id)arg2;
+ (id)mapMergerWithJavaUtilFunctionBinaryOperator:(id)arg1;
+ (id)joiningWithJavaLangCharSequence:(id)arg1 withJavaLangCharSequence:(id)arg2 withJavaLangCharSequence:(id)arg3;
+ (id)joiningWithJavaLangCharSequence:(id)arg1;
+ (id)joining;
+ (id)toSet;
+ (id)toList;
+ (id)toCollectionWithJavaUtilFunctionSupplier:(id)arg1;
+ (id)castingIdentity;
+ (id)throwingMerger;
- (id)init;

@end

