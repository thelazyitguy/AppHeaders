//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKCelloAccessing-Protocol.h"
#import "GDKCelloObserverRegistering-Protocol.h"
#import "GDKFileFetcher-Protocol.h"
#import "GDKFileQuerent-Protocol.h"
#import "GDKFilesLogReporting-Protocol.h"
#import "GDKItemActionObserverRegistrar-Protocol.h"
#import "GDKPersistenceChecking-Protocol.h"
#import "GDKQueryPrefetching-Protocol.h"
#import "GDKRootIDFetcher-Protocol.h"

@class NSString;
@protocol GDKCelloAccessing><GDKCelloObserverRegistering><GDKCelloShuttingDown><GDKFilesLogReporting, GDKCelloPrefetching, GDKChangelogPolling, GDKFileFetcher, GDKFileMutating, GDKFileQuerent, GDKItemActionObserverRegistrar, GDKPersistenceChecking, GDKRootIDFetcher, OS_dispatch_queue;

@interface GDKFileManager : NSObject <GDKFileFetcher, GDKFileQuerent, GDKFilesLogReporting, GDKItemActionObserverRegistrar, GDKPersistenceChecking, GDKQueryPrefetching, GDKRootIDFetcher, GDKCelloAccessing, GDKCelloObserverRegistering>
{
    id <GDKCelloAccessing><GDKCelloObserverRegistering><GDKCelloShuttingDown><GDKFilesLogReporting> _cello;
    id <GDKChangelogPolling> _changelogPoller;
    id <GDKFileFetcher> _fileFetcher;
    id <GDKFileMutating> _fileMutator;
    id <GDKFileQuerent> _fileQuerent;
    id <GDKItemActionObserverRegistrar> _itemActionObserverRegistrar;
    id <GDKPersistenceChecking> _persistenceChecker;
    id <GDKRootIDFetcher> _rootIDFetcher;
    id <GDKCelloPrefetching> _prefetcher;
}

+ (id)extractCelloOptionsFromParams:(id)arg1;
+ (id)fileManagerWithParams:(id)arg1 fetcherService:(id)arg2 onInitialized:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <GDKCelloPrefetching> prefetcher; // @synthesize prefetcher=_prefetcher;
@property(readonly, nonatomic) id <GDKRootIDFetcher> rootIDFetcher; // @synthesize rootIDFetcher=_rootIDFetcher;
@property(readonly, nonatomic) id <GDKPersistenceChecking> persistenceChecker; // @synthesize persistenceChecker=_persistenceChecker;
@property(readonly, nonatomic) id <GDKItemActionObserverRegistrar> itemActionObserverRegistrar; // @synthesize itemActionObserverRegistrar=_itemActionObserverRegistrar;
@property(readonly, nonatomic) id <GDKFileQuerent> fileQuerent; // @synthesize fileQuerent=_fileQuerent;
@property(readonly, nonatomic) id <GDKFileMutating> fileMutator; // @synthesize fileMutator=_fileMutator;
@property(readonly, nonatomic) id <GDKFileFetcher> fileFetcher; // @synthesize fileFetcher=_fileFetcher;
@property(readonly, nonatomic) id <GDKChangelogPolling> changelogPoller; // @synthesize changelogPoller=_changelogPoller;
@property(retain, nonatomic) id <GDKCelloAccessing><GDKCelloObserverRegistering><GDKCelloShuttingDown><GDKFilesLogReporting> cello; // @synthesize cello=_cello;
- (id)getTraceLog;
- (void)addQueries:(id)arg1;
- (void)unregisterActivityObserver:(long long)arg1;
- (void)registerActivityObserver:(function_76b3fb54)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unregisterChangeNotifyObserver:(long long)arg1;
- (void)registerChangeNotifyObserver:(function_4535251d)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)executeWithCppObject:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *celloPlatformQueue;
- (void)getRootIDWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *rootID;
- (_Bool)isFileIdentifierPersisted:(id)arg1;
- (CDUnknownBlockType)registerItemDeletedForeverObserver:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)registerLocalFolderCreationObserver:(CDUnknownBlockType)arg1 handleResourceKeys:(_Bool)arg2;
- (CDUnknownBlockType)registerShortcutRevertedObserver:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)registerMoveRevertedObserver:(CDUnknownBlockType)arg1;
- (void)queryFiles:(id)arg1 queryParams:(id)arg2 onResults:(CDUnknownBlockType)arg3;
- (void)queryFiles:(id)arg1 onResults:(CDUnknownBlockType)arg2;
- (void)deleteFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)untrashFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)removeReadOnlyLockFromFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)addReadOnlyLockToFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)restoreFile:(id)arg1 toFolderId:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)removeFile:(id)arg1 fromFolderId:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)copyFileWithID:(id)arg1 newTitle:(id)arg2 moveToFolder:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)moveFile:(id)arg1 fromFolder:(id)arg2 toFolder:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)addFile:(id)arg1 toFolder:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 localMIMEType:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 offlineDownloadProgress:(long long)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 offlineStatus:(unsigned long long)arg2 offlineFilename:(id)arg3 offlineMimeType:(id)arg4 offlineLastModifiedDate:(id)arg5 onCompletion:(CDUnknownBlockType)arg6;
- (void)updateFile:(id)arg1 offlineStatus:(unsigned long long)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 markedForOfflineBySystem:(_Bool)arg2 offlineAutoSyncSignal:(long long)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)updateFile:(id)arg1 markedForOfflineByUser:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 filesAppFavoriteRank:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 filesAppTagData:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 hasLocalThumbnail:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateLastViewedForFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)updateFolder:(id)arg1 colorPaletteIndex:(long long)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 starred:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 title:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)createFileLocallyWithIDResourceKeyPair:(id)arg1 inFolder:(id)arg2 withTitle:(id)arg3 mimeType:(id)arg4 downloadURL:(id)arg5 onCompletion:(CDUnknownBlockType)arg6;
- (void)createFolderWithTitle:(id)arg1 inFolder:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)getFileByIDResourceKeyPair:(id)arg1 skipTombstones:(_Bool)arg2 forceServerRequest:(_Bool)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)getFileByIDResourceKeyPair:(id)arg1 forceServerRequest:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)getFileByIDResourceKeyPair:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)getFilesByIDResourceKeyPairs:(id)arg1 reportPermissionErrors:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)getFilesByIDResourceKeyPairs:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)resumePollForChanges;
- (void)pausePollForChanges;
- (void)pollForChangesWithCompletion:(CDUnknownBlockType)arg1;
- (void)pollForChangesWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginPollingWithIntervalMS:(int)arg1;
- (void)shutdownWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithCello:(id)arg1 prefetcher:(id)arg2 pollingIntervalMS:(int)arg3 shouldIncludeSharedDrives:(_Bool)arg4 enableQueryByIDsForAllFileFetchOperations:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

