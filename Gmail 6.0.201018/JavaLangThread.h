//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "JavaLangRunnable-Protocol.h"

@class JavaLangClassLoader, JavaLangThreadGroup, JavaLangThreadLocal_ThreadLocalMap, NSString;
@protocol JavaLangRunnable, JavaUtilList, SunNioChInterruptible;

@interface JavaLangThread : NSObject <JavaLangRunnable>
{
    _Bool interrupted_;
    JavaLangThreadLocal_ThreadLocalMap *threadLocals_;
    JavaLangThreadLocal_ThreadLocalMap *inheritableThreadLocals_;
    // Error parsing type: Ai, name: state_
    id blocker_;
    long long threadLocalRandomSeed_;
    int threadLocalRandomProbe_;
    int threadLocalRandomSecondarySeed_;
    id nativeThread_;
    id <JavaLangRunnable> target_;
    long long threadId_;
    NSString *name_;
    long long stackSize_;
    int priority_;
    unsigned long long uncaughtExceptionHandler_;
    _Bool isDaemon_;
    JavaLangClassLoader *contextClassLoader_;
    id <SunNioChInterruptible> IOBlocker_;
    id IOBlockerLock_;
    JavaLangThreadGroup *threadGroup_;
    int parkState_;
    id parkBlocker_;
    id <JavaUtilList> interruptActions_;
}

+ (void)initialize;
+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)getAllStackTraces;
+ (void)setDefaultUncaughtExceptionHandlerWithJavaLangThread_UncaughtExceptionHandler:(id)arg1;
+ (id)getDefaultUncaughtExceptionHandler;
+ (_Bool)holdsLockWithId:(id)arg1;
+ (long long)getNextThreadId;
+ (void)yield;
+ (void)sleepWithLong:(long long)arg1 withInt:(int)arg2;
+ (void)sleepWithLong:(long long)arg1;
+ (_Bool)interrupted;
+ (int)enumerateWithJavaLangThreadArray:(id)arg1;
+ (void)dumpStack;
+ (int)activeCount;
+ (id)currentThread;
+ (id)createCurrentThreadWithId:(id)arg1;
+ (void)initializeThreadClass;
+ (id)createMainThreadWithId:(id)arg1;
+ (id)newNativeThread;
- (void).cxx_destruct;
- (void)dealloc;
- (void)__javaClone:(id)arg1;
- (void)resume;
- (void)suspend;
- (void)destroy;
- (void)stopWithJavaLangThrowable:(id)arg1;
- (void)stop;
- (void)popInterruptAction$WithJavaLangRunnable:(id)arg1;
- (void)pushInterruptAction$WithJavaLangRunnable:(id)arg1;
- (void)setUncaughtExceptionHandlerWithJavaLangThread_UncaughtExceptionHandler:(id)arg1;
- (id)getUncaughtExceptionHandler;
- (void)parkUntil$WithLong:(long long)arg1;
- (void)parkFor$WithLong:(long long)arg1;
- (void)unpark$;
@property(readonly, copy) NSString *description;
- (void)setContextClassLoaderWithJavaLangClassLoader:(id)arg1;
- (id)getContextClassLoader;
- (void)checkAccess;
- (_Bool)isAlive;
- (void)joinWithLong:(long long)arg1 withInt:(int)arg2;
- (void)joinWithLong:(long long)arg1;
- (void)join;
- (_Bool)isInterrupted;
- (void)interrupt;
- (void)blockedOnWithSunNioChInterruptible:(id)arg1;
- (int)countStackFrames;
- (id)getStackTrace;
- (id)getThreadGroup;
- (id)getState;
- (void)nativeSetPriorityWithInt:(int)arg1;
- (void)setPriorityWithInt:(int)arg1;
- (int)getPriority;
- (void)setNameWithNSString:(id)arg1;
- (id)getName;
- (long long)getId;
- (void)setDaemonWithBoolean:(_Bool)arg1;
- (_Bool)isDaemon;
- (void)rethrowWithJavaLangThrowable:(id)arg1;
- (void)run;
- (void)exit;
- (void)start0;
- (void)start;
- (id)initWithJavaLangThreadGroup:(id)arg1 withJavaLangRunnable:(id)arg2 withNSString:(id)arg3 withLong:(long long)arg4 withId:(id)arg5;
- (id)initWithJavaLangThreadGroup:(id)arg1 withNSString:(id)arg2;
- (id)initWithJavaLangThreadGroup:(id)arg1 withJavaLangRunnable:(id)arg2 withNSString:(id)arg3;
- (id)initWithJavaLangThreadGroup:(id)arg1 withJavaLangRunnable:(id)arg2 withNSString:(id)arg3 withLong:(long long)arg4;
- (id)initWithJavaLangThreadGroup:(id)arg1 withJavaLangRunnable:(id)arg2;
- (id)initWithNSString:(id)arg1;
- (id)initWithJavaLangRunnable:(id)arg1 withNSString:(id)arg2;
- (id)initWithJavaLangRunnable:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

