//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "EditorContentViewDelegate-Protocol.h"
#import "GBTNestedLayout-Protocol.h"
#import "GBTNestedScrollControllerDataSource-Protocol.h"
#import "HUBFontManagerCachedFontAndAttributesRefresher-Protocol.h"
#import "UIAccessibilityReadingContent-Protocol.h"
#import "UIDragInteractionDelegate-Protocol.h"
#import "UIDropInteractionDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UITextInput-Protocol.h"

@class EditorHandleView, EditorMagnifier, EditorPasteboardHTMLHandler, EditorScrollPosition, EditorTextRange, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSMutableString, NSString, NSTimer, UILabel, UITextChecker, UITextInputPasswordRules, UITextPosition, UITextRange;
@protocol EditorViewDelegate, GBTNestedLayoutDelegate, UITextInputDelegate, UITextInputTokenizer;

@interface EditorView : UIView <EditorContentViewDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate, UIGestureRecognizerDelegate, HUBFontManagerCachedFontAndAttributesRefresher, GBTNestedLayout, GBTNestedScrollControllerDataSource, UIAccessibilityReadingContent, UIScrollViewDelegate, UITextInput>
{
    NSMutableArray *_contentSubviews;
    _Bool _needsTextUpdate;
    NSMutableString *_cachedText;
    CDUnknownBlockType _contentViewTypeMapper;
    _Bool _contextMenuHidden;
    struct CGRect _contextMenuTarget;
    UIView *_cursor;
    _Bool _cursorBlinkState;
    _Bool _cursorMovedBackwards;
    _Bool _cursorNotificationDisabled;
    NSTimer *_cursorTimer;
    struct CGRect _lastCursorFrame;
    _Bool _cursorVisibleBeforeFrameChange;
    _Bool _cursorShouldScrollHorizontally;
    _Bool _dragging;
    double _footerHeight;
    EditorHandleView *_handleLeft;
    EditorHandleView *_handleRight;
    double _headerHeight;
    struct CGSize _currentContentSize;
    EditorMagnifier *_magnifier;
    UILabel *_placeholderLabel;
    EditorTextRange *_rangeAtDragStart;
    _Bool _rangeDraggedAtLeft;
    NSMutableArray *_selectionRects;
    NSMutableArray *_spellCheckRects;
    NSMutableArray *_markRects;
    UITextChecker *_textChecker;
    NSMutableArray *_pasteboardHandlers;
    EditorPasteboardHTMLHandler *_pasteboardHTMLHandler;
    NSMutableDictionary *_contentViewOffsets;
    NSMutableArray *_scrollables;
    EditorScrollPosition *_lockedScrollPosition;
    struct CGPoint _currentLogicalScrollOffset;
    NSMutableSet *_viewsToIgnoreReflow;
    _Bool _resizeForFrameChange;
    NSMutableDictionary *_viewsWithLogicalSpacePositions;
    UITextRange *_selectedTextRange;
    _Bool _alwaysPlaceTextViewAtStart;
    id <GBTNestedLayoutDelegate> layoutDelegate;
    id <UITextInputDelegate> inputDelegate;
    id <UITextInputTokenizer> _tokenizer;
    id <EditorViewDelegate> _delegate;
    UIView *_footerView;
    UIView *_headerView;
    double _horizontalMargin;
    double _verticalMargin;
    UITextRange *_markedTextRange;
    EditorTextRange *_spellCheckRange;
    struct UIEdgeInsets _footerViewInsets;
    struct UIEdgeInsets _headerViewInsets;
}

+ (id)defaultTextAttributes;
+ (_Bool)isSpellCheckSelector:(SEL)arg1;
+ (void)refreshCachedFontAndAttributes;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) EditorTextRange *spellCheckRange; // @synthesize spellCheckRange=_spellCheckRange;
@property(retain, nonatomic) UITextRange *markedTextRange; // @synthesize markedTextRange=_markedTextRange;
@property(nonatomic) double verticalMargin; // @synthesize verticalMargin=_verticalMargin;
@property(nonatomic) double horizontalMargin; // @synthesize horizontalMargin=_horizontalMargin;
@property(nonatomic) struct UIEdgeInsets headerViewInsets; // @synthesize headerViewInsets=_headerViewInsets;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) struct UIEdgeInsets footerViewInsets; // @synthesize footerViewInsets=_footerViewInsets;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(nonatomic) __weak id <EditorViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool alwaysPlaceTextViewAtStart; // @synthesize alwaysPlaceTextViewAtStart=_alwaysPlaceTextViewAtStart;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate; // @synthesize inputDelegate;
@property(nonatomic) __weak id <GBTNestedLayoutDelegate> layoutDelegate; // @synthesize layoutDelegate;
- (struct CGPoint)tappablePointInRect:(struct CGRect)arg1;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (_Bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (struct CGPoint)convertViewSpacePointToLogicalSpace:(struct CGPoint)arg1;
- (struct CGPoint)convertLogicalSpacePointToViewSpaceForDisplay:(struct CGPoint)arg1;
- (struct CGPoint)convertLogicalSpacePointToViewSpace:(struct CGPoint)arg1;
- (struct CGPoint)convertViewSpacePointToContentViewSpace:(struct CGPoint)arg1 forContentView:(id)arg2;
- (struct CGPoint)convertContentViewSpacePointToViewSpace:(struct CGPoint)arg1 forContentView:(id)arg2;
- (struct CGPoint)convertLogicalSpacePointToContentViewSpace:(struct CGPoint)arg1 forContentView:(id)arg2;
- (struct CGPoint)convertContentViewSpacePointToLogicalSpace:(struct CGPoint)arg1 forContentView:(id)arg2;
- (struct CGRect)convertViewSpaceRectToLogicalSpace:(struct CGRect)arg1;
- (struct CGRect)convertLogicalSpaceRectToViewSpace:(struct CGRect)arg1;
- (struct CGRect)convertContentViewSpaceRectToViewSpace:(struct CGRect)arg1 forContentView:(id)arg2;
- (struct CGRect)convertLogicalSpaceRectToContentViewSpace:(struct CGRect)arg1 forContentView:(id)arg2;
- (struct CGRect)convertContentViewSpaceRectToLogicalSpace:(struct CGRect)arg1 forContentView:(id)arg2;
- (void)updateSpellCheckRects;
- (_Bool)isPositionOnSpellingMistake:(id)arg1;
- (void)spellCheckReplace:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)showSpellingCorrectionsForPosition:(id)arg1;
- (id)expandRangeToWordBoundaries:(id)arg1 adjustForPunctuation:(_Bool)arg2;
- (void)removeAttributes:(id)arg1 forRange:(id)arg2;
- (void)addAttributes:(id)arg1 forRange:(id)arg2;
- (void)removeSpellCheckInRange:(struct _NSRange)arg1;
- (void)updateSpellCheckInRange:(struct _NSRange)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)clearMenuViewAndTarget;
- (void)saveLogicalSpaceMenuTarget:(struct CGRect)arg1;
- (_Bool)contextMenuVisible;
- (void)reshowHiddenMenu:(id)arg1;
- (void)hideContextMenuAndKeepSettings:(_Bool)arg1;
- (void)showContextMenu;
- (void)clearAndShowContextMenu;
- (void)replaceRange:(id)arg1 withContent:(id)arg2 adjustSelection:(_Bool)arg3;
- (id)characterRangeAtViewSpacePoint:(struct CGPoint)arg1;
- (id)selectionLogicalSpaceRectsForRange:(id)arg1;
- (id)selectionViewSpaceRectsForRange:(id)arg1;
- (id)closestPositionToViewSpacePoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToLogicalSpacePoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToLogicalSpacePoint:(struct CGPoint)arg1;
- (id)closestPositionToViewSpacePoint:(struct CGPoint)arg1;
- (struct CGRect)caretViewSpaceRectForPosition:(id)arg1;
- (struct CGRect)caretLogicalSpaceRectForPosition:(id)arg1;
- (struct CGRect)firstLogicalSpaceRectForRange:(id)arg1;
- (struct CGRect)firstViewSpaceRectForRange:(id)arg1;
- (void)updateViewsWithLogicalSpacePositions;
- (void)removeLogicalSpaceViewToScroll:(id)arg1;
- (void)storeLogicalSpaceViewToScroll:(id)arg1 allowsHorizontalScroll:(_Bool)arg2;
- (_Bool)caretIsOffscreen:(id)arg1;
- (struct CGPoint)offsetForContentView:(id)arg1;
- (void)updatePlaceholderLabelVisibility;
- (void)performBlock:(CDUnknownBlockType)arg1 forRange:(id)arg2;
- (void)updateHighlightRectsWithRange:(id)arg1 rectStore:(id)arg2 backgroundColor:(id)arg3 showHandles:(_Bool)arg4;
- (void)updateSelectionRects;
- (struct _NSRange)convertRangeToTextSpace:(id)arg1;
- (void)updateCachedText;
- (void)notifyDelegateOfTextDidChange;
- (void)toggleCursor;
- (void)updateCursor;
- (id)transformedAndPrunedContent:(id)arg1;
- (id)transformContentIfNeeded:(id)arg1;
- (Class)contentViewClassForContent:(id)arg1;
- (id)contentViewForContent:(id)arg1;
- (void)mergeSubviews;
- (long long)insertContent:(id)arg1 atPosition:(id)arg2;
- (void)deleteContentInRange:(id)arg1;
- (id)contentInRange:(id)arg1;
- (id)viewAtViewSpacePoint:(struct CGPoint)arg1;
- (id)viewAtLogicalSpacePoint:(struct CGPoint)arg1;
- (id)clipRange:(id)arg1 toView:(id)arg2;
- (long long)convertLineNumber:(long long)arg1 fromView:(id)arg2;
- (long long)convertLineNumber:(long long)arg1 toView:(id)arg2;
- (id)viewAtLineNumber:(long long)arg1;
- (id)convertRange:(id)arg1 fromView:(id)arg2;
- (id)convertRange:(id)arg1 toView:(id)arg2;
- (id)rangeForContentView:(id)arg1;
- (id)convertTextPosition:(id)arg1 fromView:(id)arg2;
- (id)convertTextPosition:(id)arg1 toView:(id)arg2;
- (id)viewAtPosition:(id)arg1;
- (id)selectedText;
- (void)removeContentView:(id)arg1;
- (void)didDoubleTap:(id)arg1;
- (void)didLongPress:(id)arg1;
- (void)didDragHandle:(id)arg1;
- (void)didTap:(id)arg1;
- (void)createSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (id)textInRange:(id)arg1;
- (long long)characterOffsetOfPosition:(id)arg1 withinRange:(id)arg2;
- (id)positionWithinRange:(id)arg1 atCharacterOffset:(long long)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)paste:(id)arg1;
- (_Bool)canPaste;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
@property(readonly, nonatomic) _Bool hasText;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (id)insertContent:(id)arg1;
- (struct CGPoint)scrollOffsetForScrollable:(id)arg1 withParent:(id)arg2;
- (struct CGPoint)scrollOffsetForScrollPosition:(id)arg1;
- (id)scrollPositionForScrollOffset:(struct CGPoint)arg1;
- (void)scrollContainer:(struct CGPoint)arg1 forScrollOffset:(struct CGPoint)arg2;
- (struct CGSize)scrollableContentSize;
- (struct CGRect)containerFrame;
- (id)scrollableViewsWithParent:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)accessibilityPageContent;
- (struct CGRect)accessibilityFrameForLineNumber:(long long)arg1;
- (id)accessibilityContentForLineNumber:(long long)arg1;
- (long long)accessibilityLineNumberForPoint:(struct CGPoint)arg1;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityValue;
- (_Bool)isAccessibilityElement;
- (void)contentViewLoadedContent:(id)arg1;
- (void)contentViewAttachedToDraft:(id)arg1;
- (void)contentViewRemoved:(id)arg1;
- (void)contentView:(id)arg1 willShowMenuWithTarget:(struct CGRect)arg2;
@property(readonly, nonatomic) EditorTextRange *wholeDocumentRange;
@property(readonly, nonatomic) double topOfContentViews;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer; // @synthesize tokenizer=_tokenizer;
@property(readonly, nonatomic) UIView *textInputView;
@property(copy, nonatomic) NSString *text;
@property(copy, nonatomic) NSString *placeholder;
@property(copy) UITextRange *selectedTextRange;
- (id)maybeReplaceExistingView:(id)arg1 withNewView:(id)arg2;
@property(readonly, nonatomic) long long contentLength;
@property(retain, nonatomic) NSArray *content;
- (void)setFrame:(struct CGRect)arg1;
- (void)scrollToTop;
- (void)scrollToOffsetInHeader:(double)arg1;
- (void)scrollToTextPosition:(id)arg1;
- (void)scrollToCursor;
- (void)forceHeaderSizeUpdateAnimated:(_Bool)arg1;
- (void)forceFooterSizeUpdateAnimated:(_Bool)arg1;
- (void)appendContent:(id)arg1;
- (void)setContentViewTypeMapper:(CDUnknownBlockType)arg1;
- (_Bool)contentViewIsFocused;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long selectionAffinity;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType;

@end

