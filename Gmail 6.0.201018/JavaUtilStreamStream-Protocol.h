//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JavaObject-Protocol.h"
#import "JavaUtilStreamBaseStream-Protocol.h"

@class IOSObjectArray, JavaUtilOptional;
@protocol JavaLangRunnable, JavaUtilComparator, JavaUtilFunctionBiConsumer, JavaUtilFunctionBiFunction, JavaUtilFunctionBinaryOperator, JavaUtilFunctionConsumer, JavaUtilFunctionFunction, JavaUtilFunctionIntFunction, JavaUtilFunctionPredicate, JavaUtilFunctionSupplier, JavaUtilFunctionToDoubleFunction, JavaUtilFunctionToIntFunction, JavaUtilFunctionToLongFunction, JavaUtilStreamCollector, JavaUtilStreamDoubleStream, JavaUtilStreamIntStream, JavaUtilStreamLongStream, JavaUtilStreamStream;

@protocol JavaUtilStreamStream <JavaUtilStreamBaseStream, JavaObject>
- (id <JavaUtilStreamStream>)onCloseWithJavaLangRunnable:(id <JavaLangRunnable>)arg1;
- (id <JavaUtilStreamStream>)sequential;
- (id <JavaUtilStreamStream>)parallel;
- (id <JavaUtilStreamStream>)unordered;
- (JavaUtilOptional *)findAny;
- (JavaUtilOptional *)findFirst;
- (_Bool)noneMatchWithJavaUtilFunctionPredicate:(id <JavaUtilFunctionPredicate>)arg1;
- (_Bool)allMatchWithJavaUtilFunctionPredicate:(id <JavaUtilFunctionPredicate>)arg1;
- (_Bool)anyMatchWithJavaUtilFunctionPredicate:(id <JavaUtilFunctionPredicate>)arg1;
- (long long)count;
- (JavaUtilOptional *)maxWithJavaUtilComparator:(id <JavaUtilComparator>)arg1;
- (JavaUtilOptional *)minWithJavaUtilComparator:(id <JavaUtilComparator>)arg1;
- (id)collectWithJavaUtilStreamCollector:(id <JavaUtilStreamCollector>)arg1;
- (id)collectWithJavaUtilFunctionSupplier:(id <JavaUtilFunctionSupplier>)arg1 withJavaUtilFunctionBiConsumer:(id <JavaUtilFunctionBiConsumer>)arg2 withJavaUtilFunctionBiConsumer:(id <JavaUtilFunctionBiConsumer>)arg3;
- (id)reduceWithId:(id)arg1 withJavaUtilFunctionBiFunction:(id <JavaUtilFunctionBiFunction>)arg2 withJavaUtilFunctionBinaryOperator:(id <JavaUtilFunctionBinaryOperator>)arg3;
- (JavaUtilOptional *)reduceWithJavaUtilFunctionBinaryOperator:(id <JavaUtilFunctionBinaryOperator>)arg1;
- (id)reduceWithId:(id)arg1 withJavaUtilFunctionBinaryOperator:(id <JavaUtilFunctionBinaryOperator>)arg2;
- (IOSObjectArray *)toArrayWithJavaUtilFunctionIntFunction:(id <JavaUtilFunctionIntFunction>)arg1;
- (IOSObjectArray *)toArray;
- (void)forEachOrderedWithJavaUtilFunctionConsumer:(id <JavaUtilFunctionConsumer>)arg1;
- (void)forEachWithJavaUtilFunctionConsumer:(id <JavaUtilFunctionConsumer>)arg1;
- (id <JavaUtilStreamStream>)skipWithLong:(long long)arg1;
- (id <JavaUtilStreamStream>)limitWithLong:(long long)arg1;
- (id <JavaUtilStreamStream>)peekWithJavaUtilFunctionConsumer:(id <JavaUtilFunctionConsumer>)arg1;
- (id <JavaUtilStreamStream>)sortedWithJavaUtilComparator:(id <JavaUtilComparator>)arg1;
- (id <JavaUtilStreamStream>)sorted;
- (id <JavaUtilStreamStream>)distinct;
- (id <JavaUtilStreamDoubleStream>)flatMapToDoubleWithJavaUtilFunctionFunction:(id <JavaUtilFunctionFunction>)arg1;
- (id <JavaUtilStreamLongStream>)flatMapToLongWithJavaUtilFunctionFunction:(id <JavaUtilFunctionFunction>)arg1;
- (id <JavaUtilStreamIntStream>)flatMapToIntWithJavaUtilFunctionFunction:(id <JavaUtilFunctionFunction>)arg1;
- (id <JavaUtilStreamStream>)flatMapWithJavaUtilFunctionFunction:(id <JavaUtilFunctionFunction>)arg1;
- (id <JavaUtilStreamDoubleStream>)mapToDoubleWithJavaUtilFunctionToDoubleFunction:(id <JavaUtilFunctionToDoubleFunction>)arg1;
- (id <JavaUtilStreamLongStream>)mapToLongWithJavaUtilFunctionToLongFunction:(id <JavaUtilFunctionToLongFunction>)arg1;
- (id <JavaUtilStreamIntStream>)mapToIntWithJavaUtilFunctionToIntFunction:(id <JavaUtilFunctionToIntFunction>)arg1;
- (id <JavaUtilStreamStream>)mapWithJavaUtilFunctionFunction:(id <JavaUtilFunctionFunction>)arg1;
- (id <JavaUtilStreamStream>)filterWithJavaUtilFunctionPredicate:(id <JavaUtilFunctionPredicate>)arg1;
@end

