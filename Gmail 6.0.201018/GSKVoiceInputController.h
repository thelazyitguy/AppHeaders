//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GSKSpeechRecognizerDelegate-Protocol.h"
#import "GSKVoiceInputViewControllerDelegate-Protocol.h"

@class GIPAudioController, GSKLanguage, GSKVoiceInputViewController, GSKVoiceSearchLanguageSelectorViewController, NSString, UIView;
@protocol GSKRecognizerClient, GSKVoiceInputControllerDelegate, GSKVoiceSearchAnalytics;

@interface GSKVoiceInputController : NSObject <GSKVoiceInputViewControllerDelegate, GSKSpeechRecognizerDelegate>
{
    _Bool _showTextToSpeechSetting;
    _Bool _textToSpeechEnabled;
    _Bool _useDarkTheme;
    _Bool _isSettingUpCapture;
    _Bool _resumeCaptureAfterDismissalOfLanguagePicker;
    _Bool _hasWorkingMicrophone;
    id <GSKVoiceInputControllerDelegate> _delegate;
    id <GSKRecognizerClient> _speechRecognizer;
    id <GSKVoiceSearchAnalytics> _analyticsLogger;
    NSString *_recordedFilePath;
    GIPAudioController *_audioController;
    GSKVoiceInputViewController *_voiceInputViewController;
    UIView *_parentView;
    UIView *_parentButtonView;
    GSKVoiceSearchLanguageSelectorViewController *_languageSelectorController;
    NSString *_recognitionResult;
    NSString *_entireCurrentResult;
    GSKLanguage *_lastRecognizedLanguage;
}

- (void).cxx_destruct;
@property(copy, nonatomic) GSKLanguage *lastRecognizedLanguage; // @synthesize lastRecognizedLanguage=_lastRecognizedLanguage;
@property(copy, nonatomic) NSString *entireCurrentResult; // @synthesize entireCurrentResult=_entireCurrentResult;
@property(copy, nonatomic) NSString *recognitionResult; // @synthesize recognitionResult=_recognitionResult;
@property(nonatomic) _Bool hasWorkingMicrophone; // @synthesize hasWorkingMicrophone=_hasWorkingMicrophone;
@property(nonatomic) _Bool resumeCaptureAfterDismissalOfLanguagePicker; // @synthesize resumeCaptureAfterDismissalOfLanguagePicker=_resumeCaptureAfterDismissalOfLanguagePicker;
@property(retain, nonatomic) GSKVoiceSearchLanguageSelectorViewController *languageSelectorController; // @synthesize languageSelectorController=_languageSelectorController;
@property(retain, nonatomic) UIView *parentButtonView; // @synthesize parentButtonView=_parentButtonView;
@property(retain, nonatomic) UIView *parentView; // @synthesize parentView=_parentView;
@property(nonatomic) _Bool isSettingUpCapture; // @synthesize isSettingUpCapture=_isSettingUpCapture;
@property(retain, nonatomic) GSKVoiceInputViewController *voiceInputViewController; // @synthesize voiceInputViewController=_voiceInputViewController;
@property(retain, nonatomic) GIPAudioController *audioController; // @synthesize audioController=_audioController;
@property(nonatomic) _Bool useDarkTheme; // @synthesize useDarkTheme=_useDarkTheme;
@property(nonatomic) _Bool textToSpeechEnabled; // @synthesize textToSpeechEnabled=_textToSpeechEnabled;
@property(nonatomic) _Bool showTextToSpeechSetting; // @synthesize showTextToSpeechSetting=_showTextToSpeechSetting;
@property(copy, nonatomic) NSString *recordedFilePath; // @synthesize recordedFilePath=_recordedFilePath;
@property(retain, nonatomic) id <GSKVoiceSearchAnalytics> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(retain, nonatomic) id <GSKRecognizerClient> speechRecognizer; // @synthesize speechRecognizer=_speechRecognizer;
@property(nonatomic) __weak id <GSKVoiceInputControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)updateVoiceInputControllerLanguageName;
- (void)dismissLanguagePickerAnimated:(_Bool)arg1;
- (void)dismissLanguagePicker;
- (id)recognizedLanguage;
- (void)finishedPlayingSound:(id)arg1 successfully:(_Bool)arg2;
- (void)audioPlaybackDidComplete:(id)arg1;
- (void)audioInterruptionDidStart:(id)arg1;
- (void)interruptVoiceSearch;
- (void)playSoundAtPath:(id)arg1 identifier:(id)arg2;
- (void)playSound:(id)arg1;
- (void)dismissLanguagePickerWithoutResumingAudioCapture;
- (void)stopCaptureAndShowLanguagePicker;
- (void)recognizer:(id)arg1 didReceiveLangIdResponse:(id)arg2;
- (void)showRecognitionError:(id)arg1;
- (void)recognitionDidFail:(id)arg1 withError:(id)arg2;
- (void)delayedDidComplete;
- (void)recognitionTimedOutOrFailed:(id)arg1 withError:(id)arg2 afterInterval:(double)arg3;
- (void)recognizer:(id)arg1 didReceiveResponse:(id)arg2;
- (void)recognitionWasCanceled:(id)arg1;
- (void)captureDidFailToStart:(id)arg1;
- (void)captureDidFinish:(id)arg1;
- (void)captureDidStart:(id)arg1;
- (void)captureDidRecordData:(id)arg1;
- (id)voiceSearchLocale;
- (double)currentAudioLevel;
- (void)tryAgainButtonPressedForController:(id)arg1;
- (void)languagePickerButtonPressedForController:(id)arg1;
- (void)voiceCancelTriggeredForController:(id)arg1;
- (void)cancelButtonPressedForController:(id)arg1;
- (void)voiceButtonPressedForController:(id)arg1;
- (void)resumeCapture;
- (void)pauseCapture;
- (void)voiceSearchTryAgain;
- (void)tryVoiceSearchAgainLoggingRetry:(_Bool)arg1 forceAnimation:(_Bool)arg2;
- (void)logFailureRetryIfNecessary;
- (_Bool)voiceInputControllerIsVisible;
- (void)cancelVoiceSearch;
- (_Bool)isVoiceLanguageRightToLeft;
- (void)showCannotRecordAlert;
- (int)voiceInputState;
- (void)endVoiceSearchWithSuccess:(_Bool)arg1;
- (void)exitAnimationCompletedForController:(id)arg1;
- (void)completeRecognitionWithResult:(id)arg1 language:(id)arg2;
- (void)completeRecognitionWithResult:(id)arg1;
- (void)finishCapture;
- (void)startVoiceSearchForRetry:(_Bool)arg1;
- (void)animateAndPlayChimesIsRetry:(_Bool)arg1;
- (void)playChimeAndShowRings;
- (void)buttonTouchRemovalCompletedForController:(id)arg1;
- (void)removeVoiceSearchTouch;
- (void)showVoiceSearchTouchAtIconLocation:(id)arg1;
- (void)showVoiceInputIfNecessary;
- (void)startCaptureIfNecessary;
- (id)speechSessionConfig;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
@property(nonatomic) _Bool languagePickerButtonHidden;
- (void)showMicPermissionsHelp;
- (void)registerForNotifications;
- (void)showCannotRecordAlertInView:(id)arg1 fromButtonView:(id)arg2 displayMode:(int)arg3;
- (void)showCannotRecordAlertInView:(id)arg1;
- (void)showInView:(id)arg1 fromButtonView:(id)arg2 displayMode:(int)arg3;
- (void)showInView:(id)arg1;
- (void)prepareToAppear;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

