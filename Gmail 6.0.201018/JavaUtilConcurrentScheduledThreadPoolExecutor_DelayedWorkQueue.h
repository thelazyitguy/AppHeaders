//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JavaUtilAbstractQueue.h"

#import "JavaUtilConcurrentBlockingQueue-Protocol.h"

@class IOSObjectArray, JavaLangThread, JavaUtilConcurrentLocksReentrantLock, NSString;
@protocol JavaUtilConcurrentLocksCondition;

@interface JavaUtilConcurrentScheduledThreadPoolExecutor_DelayedWorkQueue : JavaUtilAbstractQueue <JavaUtilConcurrentBlockingQueue>
{
    IOSObjectArray *queue_;
    JavaUtilConcurrentLocksReentrantLock *lock_;
    int size_;
    JavaLangThread *leader_;
    id <JavaUtilConcurrentLocksCondition> available_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
- (void)dealloc;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_58648341 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)iterator;
- (id)toArrayWithNSObjectArray:(id)arg1;
- (id)toArray;
- (int)drainToWithJavaUtilCollection:(id)arg1 withInt:(int)arg2;
- (int)drainToWithJavaUtilCollection:(id)arg1;
- (id)peekExpired;
- (void)clear;
- (id)pollWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2;
- (id)take;
- (id)poll;
- (id)finishPollWithJavaUtilConcurrentRunnableScheduledFuture:(id)arg1;
- (_Bool)offerWithId:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnit:(id)arg3;
- (_Bool)addWithId:(id)arg1;
- (void)putWithId:(id)arg1;
- (_Bool)offerWithId:(id)arg1;
- (id)peek;
- (int)remainingCapacity;
- (_Bool)isEmpty;
- (int)size;
- (_Bool)removeWithId:(id)arg1;
- (_Bool)containsWithId:(id)arg1;
- (int)indexOfWithId:(id)arg1;
- (void)grow;
- (void)siftDownWithInt:(int)arg1 withJavaUtilConcurrentRunnableScheduledFuture:(id)arg2;
- (void)siftUpWithInt:(int)arg1 withJavaUtilConcurrentRunnableScheduledFuture:(id)arg2;
- (void)setIndexWithJavaUtilConcurrentRunnableScheduledFuture:(id)arg1 withInt:(int)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

