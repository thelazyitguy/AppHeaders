//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DYNSharedLayerFormatService-Protocol.h"
#import "DYNSharedLayerGroupInfoService-Protocol.h"
#import "DYNSharedLayerMessageService-Protocol.h"
#import "DYNSharedLayerObserverManagerProvider-Protocol.h"
#import "DYNSharedLayerTopicService-Protocol.h"

@class GPCPromise, JAddOnsFormAction, NSArray, NSDictionary, NSSet, NSString;
@protocol DYNAccountUser, DYNAccountUserCapabilities, DYNAnalyticsLogEventFactory, DYNAnnotationMetadata, DYNAutocompleteQuery, DYNBlockedRoomSummaryListSubscription, DYNBlockedRoomSummaryListSubscriptionDelegate, DYNClearcutLogger, DYNClientMessageEvent, DYNConnectivityInfo, DYNConversationSuggestion, DYNConversationSuggestionsSubscription, DYNConversationSuggestionsSubscriptionDelegate, DYNDayOfWeekFactory, DYNDomainAndGroupHistoryData, DYNDriveAclUtil, DYNFilesUpdateSubscription, DYNGroupAttributesHelper, DYNGroupAttributesInfoHelper, DYNGroupId, DYNGroupSubscription, DYNGroupSubscriptionDelegate, DYNGroupTasksIntegrationPayloadSubscription, DYNMemberId, DYNMessage, DYNMessageDeliverySubscription, DYNMessageDeliverySubscriptionDelegate, DYNMessageId, DYNMessageIdGenerationUtil, DYNNotificationSettingFactory, DYNObservableDelegate, DYNOrganizationInfo, DYNPopulousApplicabilityInternalResponse, DYNReaction, DYNReadReceiptsSubscription, DYNReadReceiptsSubscriptionDelegate, DYNRoomInvitesListSubscription, DYNRoomInvitesListSubscriptionDelegate, DYNSApiSharedComponent, DYNScottyUrlFactory, DYNSearchMessagesResultSubscription, DYNSearchMessagesResultSubscriptionDelegate, DYNServer, DYNSmartReplyMetrics, DYNSpaceId, DYNSpamInvitesListSubscription, DYNSpamInvitesListSubscriptionDelegate, DYNTimeOfDayIntervalFactory, DYNTopicId, DYNTypingStateSubscriptionHandler, DYNUploadEventLogger, DYNUser, DYNUserId, DYNUserStatusSubscription, DYNWorldFilterResultsSubscription, DYNWorldFilterResultsSubscriptionDelegate, DYNXNotificationSetting;

@protocol DYNSharedLayerService <DYNSharedLayerFormatService, DYNSharedLayerGroupInfoService, DYNSharedLayerMessageService, DYNSharedLayerObserverManagerProvider, DYNSharedLayerTopicService>
@property(nonatomic) __weak id <DYNObservableDelegate> worldObserverDelegate;
@property(readonly, nonatomic) id <DYNAccountUser> accountUser;
@property(nonatomic, getter=isFailedMessageHidingEnabled) _Bool failedMessageHidingEnabled;
@property(nonatomic, getter=isEnhancedInviteEmailsEnabled) _Bool enhancedInviteEmailsEnabled;
@property(nonatomic, getter=isPrioritizeWebChannelConnectionEnabled) _Bool prioritizeWebChannelConnectionEnabled;
@property(nonatomic, getter=isKeepWorldSyncEngineAliveOnBackgroundEnabled) _Bool keepWorldSyncEngineAliveOnBackgroundEnabled;
@property(nonatomic, getter=isAccountSwitchingEnabled) _Bool accountSwitchingEnabled;
@property(nonatomic, getter=isOfflineBannerReasonsEnabled) _Bool offlineBannerReasonsEnabled;
@property(nonatomic) _Bool isShakeFeedbackEnabled;
@property(readonly, nonatomic) NSString *localUserDirectory;
- (NSArray *)currentSettings;
- (NSString *)deviceID;
- (id <DYNTimeOfDayIntervalFactory>)timeOfDayIntervalFactory;
- (id <DYNDayOfWeekFactory>)dayOfWeekFactory;
- (id <DYNNotificationSettingFactory>)notificationSettingFactory;
- (id <DYNAnalyticsLogEventFactory>)logEventFactory;
- (void)unsubscribeTopicWithID:(id <DYNTopicId>)arg1;
- (void)unsubscribeStreamWithID:(id <DYNGroupId>)arg1;
- (NSArray *)updatedAnnotationsForTrimmingMessage:(NSString *)arg1;
- (void)restoreMessageAnnotations:(NSArray *)arg1 mentionedUsers:(NSArray *)arg2;
- (void)restoreMentionAnnotations:(NSArray *)arg1;
- (NSArray *)getFilteredMembersFromMembers:(NSArray *)arg1 excludingMemberIDs:(NSArray *)arg2;
- (NSArray *)getFilteredMembersFromAutocompleteUsers:(NSArray *)arg1 excludingMembers:(NSArray *)arg2 excludingSelf:(_Bool)arg3;
- (NSArray *)getNonGroupUsersFromAutocompleteUsers:(NSArray *)arg1 groupUsers:(NSArray *)arg2;
- (NSString *)insertSlashCommandWithText:(NSString *)arg1 slashCommandName:(NSString *)arg2 botUserId:(NSString *)arg3 argumentsHint:(NSString *)arg4 slashCommandId:(NSString *)arg5 slashCommandType:(unsigned int)arg6 forUser:(id <DYNUser>)arg7 triggersDialog:(_Bool)arg8;
- (NSString *)insertMentionWithText:(NSString *)arg1 user:(id <DYNUser>)arg2 isGroupUser:(_Bool)arg3 isExternalUserRelativeToGroup:(_Bool)arg4;
- (_Bool)canEnableAutocompletion;
- (NSArray *)getMentionedUsers;
- (NSArray *)getMentionAnnotations;
- (id <DYNAutocompleteQuery>)getAutocompleteQueryResultFromText:(NSString *)arg1 caretOffset:(int)arg2;
- (NSString *)getAutocompleteQueryFromText:(NSString *)arg1 caretOffset:(int)arg2;
- (void)setAutocompleteCaretPosition:(int)arg1 newTextLength:(int)arg2 oldTextLength:(int)arg3;
- (void)resetAutocompleteParser;
- (void)getMembersWithIDs:(NSArray *)arg1;
- (double)typingStateThrottlingInterval;
- (void)sendTypingEventToTopicWithId:(id <DYNTopicId>)arg1;
- (void)sendTypingEventToDMWithId:(id <DYNGroupId>)arg1;
- (void)stopTypingStateSubscription;
- (void)startTypingStateSubscriptionWithGroupIds:(NSSet *)arg1 handler:(id <DYNTypingStateSubscriptionHandler>)arg2;
- (id <DYNPopulousApplicabilityInternalResponse>)populousApplicabilityWithContextGroupId:(id <DYNGroupId>)arg1 contextGroupGuestAccessEnabled:(_Bool)arg2 isAccountUserGuestInContextGroup:(_Bool)arg3 contextGroupOrganizationInfo:(id <DYNOrganizationInfo>)arg4;
- (id <DYNPopulousApplicabilityInternalResponse>)populousApplicabilityWithAccountUserCapabilities:(id <DYNAccountUserCapabilities>)arg1 newGroupType:(unsigned int)arg2 newGroupGuestAccessEnabled:(_Bool)arg3;
- (id <DYNPopulousApplicabilityInternalResponse>)populousApplicabilityWithAccountUserCapabilities:(id <DYNAccountUserCapabilities>)arg1;
- (id <DYNSApiSharedComponent>)sharedComponentForConfiguration;
- (id <DYNSearchMessagesResultSubscription>)searchMessagesResultSubscriptionWithDelegate:(id <DYNSearchMessagesResultSubscriptionDelegate>)arg1 basePageSize:(int)arg2;
- (id <DYNRoomInvitesListSubscription>)roomInvitesSubscriptionWithDelegate:(id <DYNRoomInvitesListSubscriptionDelegate>)arg1;
- (id <DYNBlockedRoomSummaryListSubscription>)blockedRoomsSubscriptionWithDelegate:(id <DYNBlockedRoomSummaryListSubscriptionDelegate>)arg1;
- (id <DYNSpamInvitesListSubscription>)spamInvitesListSubscriptionWithDelegate:(id <DYNSpamInvitesListSubscriptionDelegate>)arg1;
- (GPCPromise *)validateConversationSuggestion:(id <DYNConversationSuggestion>)arg1;
- (id <DYNConversationSuggestionsSubscription>)conversationSuggestionsSubscriptionWithDelegate:(id <DYNConversationSuggestionsSubscriptionDelegate>)arg1;
- (id <DYNFilesUpdateSubscription>)filesUpdateSubscriptionWithDelegate:(id <DYNObservableDelegate>)arg1 forSpace:(id <DYNSpaceId>)arg2;
- (id <DYNMessageDeliverySubscription>)messageDeliverySubscriptionWithDelegate:(id <DYNMessageDeliverySubscriptionDelegate>)arg1;
- (id <DYNReadReceiptsSubscription>)readReceiptsSubscriptionWithDelegate:(id <DYNReadReceiptsSubscriptionDelegate>)arg1;
- (id <DYNGroupTasksIntegrationPayloadSubscription>)groupTasksIntegrationPayloadSubscription:(id <DYNObservableDelegate>)arg1;
- (id <DYNGroupSubscription>)groupSubscriptionWithDelegate:(id <DYNGroupSubscriptionDelegate>)arg1;
- (id <DYNWorldFilterResultsSubscription>)newWorldFilterResultsSubscriptionWithDelegate:(id <DYNWorldFilterResultsSubscriptionDelegate>)arg1;
- (void)updateWorldConfigWithFrequency:(int)arg1;
- (void)startWorldSubscription;
- (void)throwAndLogExceptionForDebugging;
- (GPCPromise *)fetchReactorsForReaction:(id <DYNReaction>)arg1 toMessageId:(id <DYNMessageId>)arg2;
- (GPCPromise *)updateReactionWithMessageId:(id <DYNMessageId>)arg1 emojiString:(NSString *)arg2 reacted:(_Bool)arg3;
- (GPCPromise *)unsubscribeFromPresenceUpdatesWithSubscription:(id <DYNUserStatusSubscription>)arg1;
- (GPCPromise *)updatePresenceSubscription:(id <DYNUserStatusSubscription>)arg1 withUserIDs:(NSSet *)arg2;
- (GPCPromise *)activateUserStatusSubscription:(id <DYNUserStatusSubscription>)arg1;
- (GPCPromise *)subscribeToPresenceUpdatesWithUserIDs:(NSSet *)arg1;
- (GPCPromise *)fetchDriveActionsWithDriveIDs:(NSArray *)arg1;
- (GPCPromise *)addToDriveWithAttachmentToken:(NSString *)arg1 spaceID:(id <DYNSpaceId>)arg2;
- (GPCPromise *)tapButtonInCMLCardWithMessageID:(id <DYNMessageId>)arg1 formAction:(JAddOnsFormAction *)arg2;
- (GPCPromise *)logNotificationEvent:(id <DYNClientMessageEvent>)arg1;
- (GPCPromise *)getMessageFlightLogsForMessage:(id <DYNMessage>)arg1;
- (GPCPromise *)userAcknowledgedWorkingHoursEducationBanner;
- (GPCPromise *)shouldShowWorkingHoursEducation;
- (GPCPromise *)roomNotificationsPromoDidAppear;
- (GPCPromise *)shouldShowRoomNotificationsPromo;
- (GPCPromise *)shouldReadFromRoomNotificationSettings;
- (GPCPromise *)setWorkingHoursEnabled:(_Bool)arg1 workingHoursMap:(NSDictionary *)arg2 timezoneIdentifier:(NSString *)arg3;
- (GPCPromise *)getWorkingHoursWithTimezoneIdentifier:(NSString *)arg1 onColdOpen:(_Bool)arg2;
- (_Bool)isConsumerAccount;
- (_Bool)isDasherAccount;
- (GPCPromise *)getAccountOwnerStatus;
- (GPCPromise *)disableSetAsAway;
- (GPCPromise *)enableSetAsAway;
- (GPCPromise *)setDoNotDisturbDuration:(unsigned long long)arg1 presenceState:(int)arg2;
- (GPCPromise *)turnOffDoNotDisturb;
- (GPCPromise *)setAccountCustomStatus:(NSString *)arg1 emojiString:(NSString *)arg2 expiryOption:(unsigned int)arg3;
- (GPCPromise *)setAccountCustomStatus:(NSString *)arg1 emojiString:(NSString *)arg2 expiryTimestampMicros:(unsigned long long)arg3;
- (GPCPromise *)clearAccountCustomStatus;
- (GPCPromise *)updateGroup:(id <DYNGroupId>)arg1 isOffTheRecord:(_Bool)arg2;
- (GPCPromise<DYNDomainAndGroupHistoryData> *)getDomainAndGroupHistoryState:(id <DYNGroupId>)arg1;
- (GPCPromise *)createVideoCall;
- (void)recordUserInteraction;
- (GPCPromise *)setApplicationActive:(_Bool)arg1;
- (GPCPromise *)markGroupReadWithID:(id <DYNGroupId>)arg1 timestamp:(long long)arg2 isGroupFullyReadByUser:(_Bool)arg3;
- (GPCPromise *)optimisticallyMarkGroupReadWithID:(id <DYNGroupId>)arg1 timestamp:(long long)arg2;
- (GPCPromise *)getMessagesFromNetworkWithTopicId:(id <DYNTopicId>)arg1 fromTimeMicros:(long long)arg2 numMessages:(int)arg3 isAfter:(_Bool)arg4;
- (GPCPromise *)expandCollapsedMessagesWithTopicId:(id <DYNTopicId>)arg1 afterTime:(long long)arg2 beforeTime:(long long)arg3 collapsedMessagesCount:(int)arg4;
- (GPCPromise *)createBotDirectMessageWithBotName:(NSString *)arg1 botID:(NSString *)arg2 isFlat:(_Bool)arg3;
- (GPCPromise *)cancelFormWithMessageID:(id <DYNMessageId>)arg1 withBotID:(NSString *)arg2;
- (GPCPromise *)submitFormWithMessageID:(id <DYNMessageId>)arg1 withBotID:(NSString *)arg2 withAction:(JAddOnsFormAction *)arg3 withFormInputs:(NSArray *)arg4;
- (GPCPromise *)getAutocompleteSlashCommandsWithQuery:(NSString *)arg1 groupId:(id <DYNGroupId>)arg2 maxResults:(int)arg3 withinGroupOnly:(_Bool)arg4 botUseCases:(NSArray *)arg5 includeDialog:(_Bool)arg6;
- (GPCPromise *)getInvokeDialogWithMessageId:(id <DYNMessageId>)arg1 withBotId:(NSString *)arg2;
- (GPCPromise *)getAutocompleteBotUsersWithQuery:(NSString *)arg1 canAddToDm:(_Bool)arg2 canAddToRoom:(_Bool)arg3;
- (GPCPromise *)findIDForDirectMessageWithUsers:(NSArray *)arg1;
- (GPCPromise *)createDirectMessageWithName:(NSString *)arg1 memberIdentifiers:(NSArray *)arg2 message:(NSString *)arg3 annotations:(NSArray *)arg4 offTheRecord:(_Bool)arg5;
- (GPCPromise *)generateDirectMessageNameWithUsers:(NSArray *)arg1;
- (GPCPromise *)searchForTopicsInGroupID:(id <DYNGroupId>)arg1 withUserIDs:(NSArray *)arg2 searchContentTypes:(NSArray *)arg3 query:(NSString *)arg4 topicsPageSize:(int)arg5 messagesPageSize:(int)arg6 continuationToken:(NSString *)arg7;
- (GPCPromise *)starGroupWithGroupID:(id <DYNGroupId>)arg1 starred:(_Bool)arg2;
- (GPCPromise *)deleteDraftReplyWithTopicId:(id <DYNTopicId>)arg1;
- (GPCPromise *)getDraftReplyWithTopicId:(id <DYNTopicId>)arg1;
- (GPCPromise *)getChannelAssistWithGroupId:(id <DYNGroupId>)arg1 languageCode:(NSString *)arg2 timeZone:(NSString *)arg3;
- (GPCPromise *)updateDraftReplyWithTopicId:(id <DYNTopicId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 mentionedUsers:(NSArray *)arg4;
- (GPCPromise *)deleteDraftTopicWithGroupId:(id <DYNGroupId>)arg1;
- (GPCPromise *)getDraftTopicWithGroupId:(id <DYNGroupId>)arg1;
- (GPCPromise *)updateDraftTopicWithGroupId:(id <DYNGroupId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 mentionedUsers:(NSArray *)arg4 isOffTheRecord:(_Bool)arg5;
- (GPCPromise *)updateDraftTopicWithDmId:(id <DYNGroupId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 isOffTheRecord:(_Bool)arg4;
- (id <DYNUserId>)allMembersUserId;
- (GPCPromise *)getGlobalDasherDomainPolicies;
- (GPCPromise *)syncUserSettings;
- (void)notifyNotificationAccessGrantedStatus:(_Bool)arg1 deviceNotificationSettingState:(unsigned int)arg2;
- (GPCPromise *)updateNotificationSetting:(id <DYNXNotificationSetting>)arg1;
- (GPCPromise *)getNotificationSetting;
- (GPCPromise *)updateGlobalNotificationSetting:(unsigned int)arg1;
- (GPCPromise *)getGlobalNotificationSetting;
- (GPCPromise *)updateTopicMuteStateWithId:(id <DYNTopicId>)arg1 muted:(_Bool)arg2;
- (GPCPromise *)clearRoomatarForSpaceWithID:(id <DYNSpaceId>)arg1 groupName:(NSString *)arg2;
- (GPCPromise *)updateSpaceWithID:(id <DYNSpaceId>)arg1 roomatarEmojiString:(NSString *)arg2;
- (GPCPromise *)updateSpaceWithID:(id <DYNSpaceId>)arg1 groupName:(NSString *)arg2;
- (GPCPromise *)getGroupMemberIDsForInvitedSpaceWithSpaceID:(id <DYNSpaceId>)arg1;
- (GPCPromise *)getGroupMembersWithGroupID:(id <DYNGroupId>)arg1;
- (GPCPromise *)getJoinedAndInvitedGroupMembersWithGroupID:(id <DYNGroupId>)arg1;
- (GPCPromise *)getGroupUsersWithGroupID:(id <DYNGroupId>)arg1;
- (GPCPromise *)createSpaceWithSpaceName:(NSString *)arg1 withGuestAccessEnabled:(_Bool)arg2 spaceType:(unsigned int)arg3 sendNotificationEmail:(_Bool)arg4 roomatarEmojiString:(NSString *)arg5;
- (GPCPromise *)createSpaceWithSpaceName:(NSString *)arg1 withGuestAccessEnabled:(_Bool)arg2 isFlatRoom:(_Bool)arg3 roomatarEmojiString:(NSString *)arg4;
- (GPCPromise *)markTopicReadWithTopicId:(id <DYNTopicId>)arg1 timestamp:(long long)arg2;
- (GPCPromise *)getLatestMessagesInTopicWithID:(id <DYNTopicId>)arg1;
- (GPCPromise *)getLocalTopicWithMessagesWithTopicId:(id <DYNTopicId>)arg1 fromTime:(long long)arg2 subscribeToTopic:(_Bool)arg3;
- (GPCPromise *)getTopicMessagesWithTopicId:(id <DYNTopicId>)arg1 fromTimeMicros:(long long)arg2 numMessages:(int)arg3 isAfter:(_Bool)arg4;
- (GPCPromise *)filterJoinedAndInvitedGroupUsersWithGroupId:(id <DYNGroupId>)arg1 query:(NSString *)arg2 includeAllMention:(_Bool)arg3 excludeOwner:(_Bool)arg4;
- (GPCPromise *)filterGroupUsersWithGroupId:(id <DYNGroupId>)arg1 query:(NSString *)arg2 includeAllMention:(_Bool)arg3 excludeOwner:(_Bool)arg4;
- (GPCPromise *)getMessagePreviewAnnotations:(NSString *)arg1 withCurrentAnnotations:(NSArray *)arg2 groupID:(id <DYNGroupId>)arg3 userEmails:(NSArray *)arg4;
- (GPCPromise *)acceptInviteForDmId:(id <DYNGroupId>)arg1;
- (GPCPromise *)blockRoom:(id <DYNSpaceId>)arg1 blocked:(_Bool)arg2 shouldReport:(_Bool)arg3;
- (GPCPromise *)blockUser:(id <DYNUserId>)arg1 blocked:(_Bool)arg2 shouldReport:(_Bool)arg3;
- (GPCPromise *)processNotifications:(NSArray *)arg1 withPayload:(NSDictionary *)arg2;
- (GPCPromise *)clearMarkAsUnreadTimeForGroupWithID:(id <DYNGroupId>)arg1 isInsideMessagesView:(_Bool)arg2;
- (GPCPromise *)setMarkAsUnreadTime:(long long)arg1 forGroupWithID:(id <DYNGroupId>)arg2 isInsideMessagesView:(_Bool)arg3;
- (GPCPromise *)markGroupAsReadWithID:(id <DYNGroupId>)arg1 toMessage:(id <DYNMessage>)arg2 lastMessage:(_Bool)arg3;
- (GPCPromise *)postMessageInFlatGroupWithUnknownRetentionStateWithMessageID:(id <DYNMessageId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 smartReplyMetrics:(id <DYNSmartReplyMetrics>)arg4;
- (GPCPromise *)postMessageInFlatGroupWithMessageID:(id <DYNMessageId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 retentionState:(unsigned int)arg4 smartReplyMetrics:(id <DYNSmartReplyMetrics>)arg5;
- (GPCPromise *)postMessageInGroupWithID:(id <DYNGroupId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 offTheRecord:(_Bool)arg4 smartReplyMetrics:(id <DYNSmartReplyMetrics>)arg5;
- (GPCPromise *)saveBlockedMessageInFlatGroupWithUnknownRetentionStateWithMessageID:(id <DYNMessageId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3;
- (GPCPromise *)saveBlockedMessageInFlatGroupWithMessageID:(id <DYNMessageId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 retentionState:(unsigned int)arg4;
- (GPCPromise *)saveBlockedMessageInFlatGroupWithUnknownRetentionStateWithID:(id <DYNGroupId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3;
- (GPCPromise *)saveBlockedMessageInGroupWithID:(id <DYNGroupId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 retentionState:(unsigned int)arg4;
- (GPCPromise *)saveBlockedMessageInGroupWithID:(id <DYNGroupId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3 offTheRecord:(_Bool)arg4;
- (GPCPromise *)paginateDownDMWithID:(id <DYNGroupId>)arg1 lastMessage:(id <DYNMessage>)arg2 maxNumberOfMessages:(unsigned long long)arg3;
- (GPCPromise *)paginateUpDMWithID:(id <DYNGroupId>)arg1 firstMessage:(id <DYNMessage>)arg2 maxNumberOfMessages:(unsigned long long)arg3;
- (GPCPromise *)fetchInitialMessagesAroundTime:(long long)arg1 inGroupWithID:(id <DYNGroupId>)arg2 maxNumberOfPreviousMessages:(int)arg3 maxNumberOfNextMessages:(int)arg4;
- (GPCPromise *)fetchInitialMessagesAroundMessageWithID:(id <DYNMessageId>)arg1 inGroupWithID:(id <DYNGroupId>)arg2 maxNumberOfMessages:(unsigned long long)arg3;
- (GPCPromise *)getInvitedFlatSpacePreviewForGroupID:(id <DYNGroupId>)arg1;
- (GPCPromise *)fetchSpamDirectMessagesWithGroupID:(id <DYNGroupId>)arg1;
- (GPCPromise *)fetchInitialMessagesForDirectMessageWithID:(id <DYNGroupId>)arg1 maxNumberOfMessages:(unsigned long long)arg2;
- (GPCPromise *)updateGroupRetentionSettingsWithMessageID:(id <DYNMessageId>)arg1 retentionState:(unsigned int)arg2;
- (GPCPromise *)updateGroupNotificationSettingsWithGroupID:(id <DYNGroupId>)arg1 groupNotificationSetting:(unsigned int)arg2;
- (GPCPromise *)updateGroupNotificationSettingsWithGroupID:(id <DYNGroupId>)arg1 muteState:(_Bool)arg2;
- (GPCPromise *)getUnviewedInvitedRoomsCount;
- (GPCPromise *)getInvitedMemberIDsWithSpaceID:(id <DYNSpaceId>)arg1;
- (GPCPromise *)markAllInvitedSpacesAsViewed;
- (GPCPromise *)deleteConversationWithID:(id <DYNGroupId>)arg1;
- (GPCPromise *)unhideDMWithID:(id <DYNGroupId>)arg1;
- (GPCPromise *)hideDMWithID:(id <DYNGroupId>)arg1;
- (GPCPromise *)leaveSpaceWithID:(id <DYNSpaceId>)arg1;
- (GPCPromise *)joinSpaceWithID:(id <DYNSpaceId>)arg1;
- (GPCPromise *)removeFromGroupWithID:(id <DYNGroupId>)arg1 memberID:(id <DYNMemberId>)arg2;
- (GPCPromise *)addToGroupWithID:(id <DYNGroupId>)arg1 memberIdentifiers:(NSArray *)arg2 withEmailInvite:(_Bool)arg3;
- (GPCPromise *)filterInvitedRooms:(NSArray *)arg1 withQuery:(NSString *)arg2;
- (GPCPromise *)getInvitedRooms;
- (GPCPromise *)deleteLocalAnnotationMetadataLocalID:(NSString *)arg1;
- (GPCPromise *)getLocalAnnotationMetadataLocalID:(NSString *)arg1;
- (GPCPromise *)updateLocalAnnotationWithID:(NSString *)arg1 annotationMetadata:(id <DYNAnnotationMetadata>)arg2;
- (GPCPromise *)editMessageWithMessageID:(id <DYNMessageId>)arg1 text:(NSString *)arg2 annotations:(NSArray *)arg3;
- (GPCPromise *)deleteMessage:(id <DYNMessage>)arg1;
- (GPCPromise *)forwardToInbox:(id <DYNMessage>)arg1;
- (GPCPromise *)resendMessageInFlatGroupWithMessageId:(id <DYNMessageId>)arg1 retentionState:(unsigned int)arg2;
- (GPCPromise *)resendMessageWithMessageId:(id <DYNMessageId>)arg1;
- (GPCPromise *)deleteFailedMessageWithMessageId:(id <DYNMessageId>)arg1;
- (GPCPromise *)restoreFailedMessageInDmWithMessageId:(id <DYNMessageId>)arg1 retentionState:(unsigned int)arg2;
- (GPCPromise *)restoreFailedMessageWithMessageId:(id <DYNMessageId>)arg1;
- (GPCPromise *)failBlockedMessageWithMessageId:(id <DYNMessageId>)arg1;
- (GPCPromise *)postBlockedMessageWithMessageId:(id <DYNMessageId>)arg1;
- (GPCPromise *)updateBlockedMessageAnnotationsWithMessageId:(id <DYNMessageId>)arg1 annotations:(NSArray *)arg2;
- (GPCPromise *)saveBlockedMessageWithTopicID:(id <DYNTopicId>)arg1 message:(NSString *)arg2 annotations:(NSArray *)arg3;
- (GPCPromise *)postMessageWithTopicId:(id <DYNTopicId>)arg1 message:(NSString *)arg2 userAnnotations:(NSArray *)arg3 smartReplyMetrics:(id <DYNSmartReplyMetrics>)arg4;
- (GPCPromise *)createTopicWithMessageId:(id <DYNMessageId>)arg1 text:(NSString *)arg2 annotations:(NSArray *)arg3 retentionState:(unsigned int)arg4;
- (GPCPromise *)createTopicWithGroupId:(id <DYNGroupId>)arg1 text:(NSString *)arg2 annotations:(NSArray *)arg3 offTheRecord:(_Bool)arg4;
- (_Bool)hasCaughtUpToMessage:(id <DYNMessage>)arg1;
- (GPCPromise *)waitForCatchUp:(id <DYNGroupId>)arg1;
- (GPCPromise *)waitForWorldSync;
- (GPCPromise *)filterWorldWithQuery:(NSString *)arg1;
- (void)acknowledgeConnectivityRecovery;
- (NSString *)offlineBannerReason;
- (_Bool)isConnectedOrConnecting;
- (void)setDeviceNetworkConnected:(id <DYNConnectivityInfo>)arg1;
- (void)setApplicationInitialized:(id <DYNConnectivityInfo>)arg1;
- (void)resetToFishfoodFlags;
- (void)resetToDogfoodFlags;
- (void)setSpacesCapabilityLevel:(int)arg1;
- (void)setServerType:(unsigned int)arg1;
- (void)setDirectMessagesCapabilityLevel:(int)arg1;
- (id <DYNServer>)getServer;
- (id <DYNGroupAttributesInfoHelper>)groupAttributesInfoHelper;
- (id <DYNGroupAttributesHelper>)groupAttributesHelper;
- (long long)serverTimeMillis;
- (id <DYNMessageIdGenerationUtil>)messageIdGenerationUtil;
- (id <DYNScottyUrlFactory>)scottyURLFactory;
- (id <DYNDriveAclUtil>)driveACLUtil;
- (id <DYNUploadEventLogger>)uploadEventLogger;
- (id <DYNClearcutLogger>)clearcutEventLogger;
- (void)APPStateBackgroundSession;
- (void)APPStateBackground;
- (void)didOpenAppFromNotification;
- (void)APPStateForeground;
- (void)connectWebChannel;
- (void)disconnectWebChannel;
- (GPCPromise *)stop;
- (GPCPromise *)wipeUser;
- (GPCPromise *)initializeUserWithBackgroundMode:(_Bool)arg1;
@end

