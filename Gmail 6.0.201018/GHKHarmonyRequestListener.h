//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface GHKHarmonyRequestListener : NSObject
{
    struct vector<sigslot::has_slots<sigslot::single_threaded>*, std::__1::allocator<sigslot::has_slots<sigslot::single_threaded>*>> _pendingRequestHandlers;
    _Bool _invalidated;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addHandler:(has_slots_7fb69788 *)arg1;
- (void)disconnect;
- (void)invalidate;
- (void)requestDidComplete:(has_slots_7fb69788 *)arg1;
- (void)listenForRemoteAudioMuteRequest:(struct RemoteAudioMuteRequest *)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)listenForBlockRequest:(struct BlockRequest *)arg1 completionHandler:(CDUnknownBlockType)arg2;
-     // Error parsing type: v40@0:8^{JoinRequest=^^?{signal_with_thread_policy<sigslot::single_threaded, const harmony::JoinRequest *, bool>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{HangoutParticipantAddPrerequisite=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}BB}{E911UserLocationInfo=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{SyncMetadata_HangoutCookie=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}q}ii{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<long long>=(?=cq)B}}16@?24@?32, name: listenForConferenceJoinRequest:knockingHandler:completionHandler:
-     // Error parsing type: v32@0:8^{JoinRequest=^^?{signal_with_thread_policy<sigslot::single_threaded, const harmony::JoinRequest *, bool>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{HangoutParticipantAddPrerequisite=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}BB}{E911UserLocationInfo=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{SyncMetadata_HangoutCookie=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}q}ii{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<long long>=(?=cq)B}}16@?24, name: listenForConferenceJoinRequest:completionHandler:
- (void)listenForConferenceRequest:(struct Request *)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;

@end

