//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GKBArtDatabase, GKBEmojiUserDefaults, NSArray, NSMutableDictionary, NSString, UIFont, UITextChecker;
@protocol GKBArtDatabaseConfigurator;

@interface GKBEmojiDataManager : NSObject
{
    _Bool _areUnsupportedEmojisStored;
    UIFont *_referenceFont;
    NSMutableDictionary *_unsupportedEmojis;
    GKBEmojiUserDefaults *_userDefaults;
    NSMutableDictionary *_lastUsedEmojiVariations;
    NSString *_lastSearchQuery;
    NSArray *_lastSearchQueryResults;
    UITextChecker *_textChecker;
    GKBArtDatabase *_artDatabase;
    id <GKBArtDatabaseConfigurator> _artDatabaseConfig;
    struct CGSize _referenceEmojiSize;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <GKBArtDatabaseConfigurator> artDatabaseConfig; // @synthesize artDatabaseConfig=_artDatabaseConfig;
@property(retain, nonatomic) GKBArtDatabase *artDatabase; // @synthesize artDatabase=_artDatabase;
@property(retain, nonatomic) UITextChecker *textChecker; // @synthesize textChecker=_textChecker;
@property(retain, nonatomic) NSArray *lastSearchQueryResults; // @synthesize lastSearchQueryResults=_lastSearchQueryResults;
@property(retain, nonatomic) NSString *lastSearchQuery; // @synthesize lastSearchQuery=_lastSearchQuery;
@property(retain, nonatomic) NSMutableDictionary *lastUsedEmojiVariations; // @synthesize lastUsedEmojiVariations=_lastUsedEmojiVariations;
@property(retain, nonatomic) GKBEmojiUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(nonatomic) _Bool areUnsupportedEmojisStored; // @synthesize areUnsupportedEmojisStored=_areUnsupportedEmojisStored;
@property(retain, nonatomic) NSMutableDictionary *unsupportedEmojis; // @synthesize unsupportedEmojis=_unsupportedEmojis;
@property(readonly, nonatomic) UIFont *referenceFont; // @synthesize referenceFont=_referenceFont;
@property(readonly, nonatomic) struct CGSize referenceEmojiSize; // @synthesize referenceEmojiSize=_referenceEmojiSize;
- (void)removeSearchTerms:(id)arg1;
- (id)prefixedSearchTerms:(id)arg1 query:(id)arg2;
- (_Bool)queryHasCorrectSpelling:(id)arg1;
- (id)supportedEmojisFromResultSet:(id)arg1;
- (id)supportedEmojisFromEmojis:(id)arg1;
- (_Bool)deviceSupportsEmoji:(id)arg1 version:(id)arg2;
- (_Bool)deviceSupportsEmoji:(id)arg1;
- (long long)storedAllEmojiCount;
- (long long)allEmojiCount;
- (void)resetUnsupportedEmojisIfNeeded;
- (id)expandedSearchTerms:(id)arg1;
- (void)databaseContainsSearchTerm:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)initiateSearchForTermsWithInfo:(id)arg1;
- (void)initiateSearchWithInfo:(id)arg1;
- (_Bool)isQueryEqualToLastQuery:(id)arg1;
- (_Bool)useResultsForQueryIfEqualToLast:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)isEmojiString:(id)arg1;
- (_Bool)hasSearchTerms;
- (void)addRecentlyUsedEmoji:(id)arg1;
- (id)recentlyUsedEmojis;
- (void)emojiObjectForEmoji:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)hasRecentlyUsedEmojis;
- (void)initiateSearchForTerms:(id)arg1 isForSuggestions:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)initiateSearchForTerms:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)initiateSearch:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allEmojisWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)firstCategoryEmojisWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)emojisForCategory:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)emojiCategoryImageNamesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithConfig:(id)arg1;

@end

