//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "JavaUtilConcurrentCompletionStage-Protocol.h"
#import "JavaUtilConcurrentFuture-Protocol.h"

@class NSString;

@interface JavaUtilConcurrentCompletableFuture : NSObject <JavaUtilConcurrentFuture, JavaUtilConcurrentCompletionStage>
{
    unsigned long long result_;
    unsigned long long stack_;
}

+ (void)initialize;
+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)failedStageWithJavaLangThrowable:(id)arg1;
+ (id)failedFutureWithJavaLangThrowable:(id)arg1;
+ (id)completedStageWithId:(id)arg1;
+ (id)delayedExecutorWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2;
+ (id)delayedExecutorWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
+ (id)anyOfWithJavaUtilConcurrentCompletableFutureArray:(id)arg1;
+ (id)allOfWithJavaUtilConcurrentCompletableFutureArray:(id)arg1;
+ (id)completedFutureWithId:(id)arg1;
+ (id)runAsyncWithJavaLangRunnable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
+ (id)runAsyncWithJavaLangRunnable:(id)arg1;
+ (id)supplyAsyncWithJavaUtilFunctionSupplier:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
+ (id)supplyAsyncWithJavaUtilFunctionSupplier:(id)arg1;
+ (id)asyncRunStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaLangRunnable:(id)arg2;
+ (id)asyncSupplyStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilFunctionSupplier:(id)arg2;
+ (id)orTreeWithJavaUtilConcurrentCompletableFutureArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)andTreeWithJavaUtilConcurrentCompletableFutureArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)lazySetNextWithJavaUtilConcurrentCompletableFuture_Completion:(id)arg1 withJavaUtilConcurrentCompletableFuture_Completion:(id)arg2;
+ (id)screenExecutorWithJavaUtilConcurrentExecutor:(id)arg1;
+ (id)reportJoinWithId:(id)arg1;
+ (id)reportGetWithId:(id)arg1;
+ (id)encodeRelayWithId:(id)arg1;
+ (id)encodeThrowableWithJavaLangThrowable:(id)arg1 withId:(id)arg2;
+ (id)encodeThrowableWithJavaLangThrowable:(id)arg1;
- (void)dealloc;
- (void)__javaClone:(id)arg1;
- (id)completeOnTimeoutWithId:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnit:(id)arg3;
- (id)orTimeoutWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2;
- (id)completeAsyncWithJavaUtilFunctionSupplier:(id)arg1;
- (id)completeAsyncWithJavaUtilFunctionSupplier:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)minimalCompletionStage;
- (id)copy__;
- (id)defaultExecutor;
- (id)newIncompleteFuture;
@property(readonly, copy) NSString *description;
- (int)getNumberOfDependents;
- (void)obtrudeExceptionWithJavaLangThrowable:(id)arg1;
- (void)obtrudeValueWithId:(id)arg1;
- (_Bool)isCompletedExceptionally;
- (_Bool)isCancelled;
- (_Bool)cancelWithBoolean:(_Bool)arg1;
- (id)exceptionallyWithJavaUtilFunctionFunction:(id)arg1;
- (id)toCompletableFuture;
- (id)handleAsyncWithJavaUtilFunctionBiFunction:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)handleAsyncWithJavaUtilFunctionBiFunction:(id)arg1;
- (id)handleWithJavaUtilFunctionBiFunction:(id)arg1;
- (id)whenCompleteAsyncWithJavaUtilFunctionBiConsumer:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)whenCompleteAsyncWithJavaUtilFunctionBiConsumer:(id)arg1;
- (id)whenCompleteWithJavaUtilFunctionBiConsumer:(id)arg1;
- (id)thenComposeAsyncWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)thenComposeAsyncWithJavaUtilFunctionFunction:(id)arg1;
- (id)thenComposeWithJavaUtilFunctionFunction:(id)arg1;
- (id)runAfterEitherAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaLangRunnable:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
- (id)runAfterEitherAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaLangRunnable:(id)arg2;
- (id)runAfterEitherWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaLangRunnable:(id)arg2;
- (id)acceptEitherAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionConsumer:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
- (id)acceptEitherAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionConsumer:(id)arg2;
- (id)acceptEitherWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionConsumer:(id)arg2;
- (id)applyToEitherAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
- (id)applyToEitherAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
- (id)applyToEitherWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
- (id)runAfterBothAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaLangRunnable:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
- (id)runAfterBothAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaLangRunnable:(id)arg2;
- (id)runAfterBothWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaLangRunnable:(id)arg2;
- (id)thenAcceptBothAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionBiConsumer:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
- (id)thenAcceptBothAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionBiConsumer:(id)arg2;
- (id)thenAcceptBothWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionBiConsumer:(id)arg2;
- (id)thenCombineAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionBiFunction:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
- (id)thenCombineAsyncWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionBiFunction:(id)arg2;
- (id)thenCombineWithJavaUtilConcurrentCompletionStage:(id)arg1 withJavaUtilFunctionBiFunction:(id)arg2;
- (id)thenRunAsyncWithJavaLangRunnable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)thenRunAsyncWithJavaLangRunnable:(id)arg1;
- (id)thenRunWithJavaLangRunnable:(id)arg1;
- (id)thenAcceptAsyncWithJavaUtilFunctionConsumer:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)thenAcceptAsyncWithJavaUtilFunctionConsumer:(id)arg1;
- (id)thenAcceptWithJavaUtilFunctionConsumer:(id)arg1;
- (id)thenApplyAsyncWithJavaUtilFunctionFunction:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
- (id)thenApplyAsyncWithJavaUtilFunctionFunction:(id)arg1;
- (id)thenApplyWithJavaUtilFunctionFunction:(id)arg1;
- (_Bool)completeExceptionallyWithJavaLangThrowable:(id)arg1;
- (_Bool)completeWithId:(id)arg1;
- (id)getNowWithId:(id)arg1;
- (id)join;
- (id)getWithLong:(long long)arg1 withJavaUtilConcurrentTimeUnit:(id)arg2;
- (id)get;
- (_Bool)isDone;
- (id)initWithId:(id)arg1;
- (id)init;
- (id)timedGetWithLong:(long long)arg1;
- (id)waitingGetWithBoolean:(_Bool)arg1;
- (_Bool)orRelayWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2;
- (id)orRunStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilConcurrentCompletionStage:(id)arg2 withJavaLangRunnable:(id)arg3;
- (_Bool)orRunWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withJavaLangRunnable:(id)arg3 withJavaUtilConcurrentCompletableFuture_OrRun:(id)arg4;
- (id)orAcceptStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilConcurrentCompletionStage:(id)arg2 withJavaUtilFunctionConsumer:(id)arg3;
- (_Bool)orAcceptWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withJavaUtilFunctionConsumer:(id)arg3 withJavaUtilConcurrentCompletableFuture_OrAccept:(id)arg4;
- (id)orApplyStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilConcurrentCompletionStage:(id)arg2 withJavaUtilFunctionFunction:(id)arg3;
- (_Bool)orApplyWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withJavaUtilFunctionFunction:(id)arg3 withJavaUtilConcurrentCompletableFuture_OrApply:(id)arg4;
- (void)orpushWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture_BiCompletion:(id)arg2;
- (_Bool)biRelayWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2;
- (id)biRunStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilConcurrentCompletionStage:(id)arg2 withJavaLangRunnable:(id)arg3;
- (_Bool)biRunWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withJavaLangRunnable:(id)arg3 withJavaUtilConcurrentCompletableFuture_BiRun:(id)arg4;
- (id)biAcceptStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilConcurrentCompletionStage:(id)arg2 withJavaUtilFunctionBiConsumer:(id)arg3;
- (_Bool)biAcceptWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withJavaUtilFunctionBiConsumer:(id)arg3 withJavaUtilConcurrentCompletableFuture_BiAccept:(id)arg4;
- (id)biApplyStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilConcurrentCompletionStage:(id)arg2 withJavaUtilFunctionBiFunction:(id)arg3;
- (_Bool)biApplyWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withJavaUtilFunctionBiFunction:(id)arg3 withJavaUtilConcurrentCompletableFuture_BiApply:(id)arg4;
- (id)postFireWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture:(id)arg2 withInt:(int)arg3;
- (void)bipushWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilConcurrentCompletableFuture_BiCompletion:(id)arg2;
- (id)uniComposeStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
- (_Bool)uniComposeWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniCompose:(id)arg3;
- (id)uniAsMinimalStage;
- (id)uniCopyStage;
- (_Bool)uniRelayWithJavaUtilConcurrentCompletableFuture:(id)arg1;
- (id)uniExceptionallyStageWithJavaUtilFunctionFunction:(id)arg1;
- (_Bool)uniExceptionallyWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniExceptionally:(id)arg3;
- (id)uniHandleStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilFunctionBiFunction:(id)arg2;
- (_Bool)uniHandleWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilFunctionBiFunction:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniHandle:(id)arg3;
- (id)uniWhenCompleteStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilFunctionBiConsumer:(id)arg2;
- (_Bool)uniWhenCompleteWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilFunctionBiConsumer:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniWhenComplete:(id)arg3;
- (id)uniRunStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaLangRunnable:(id)arg2;
- (_Bool)uniRunWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaLangRunnable:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniRun:(id)arg3;
- (id)uniAcceptStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilFunctionConsumer:(id)arg2;
- (_Bool)uniAcceptWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilFunctionConsumer:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniAccept:(id)arg3;
- (id)uniApplyStageWithJavaUtilConcurrentExecutor:(id)arg1 withJavaUtilFunctionFunction:(id)arg2;
- (_Bool)uniApplyWithJavaUtilConcurrentCompletableFuture:(id)arg1 withJavaUtilFunctionFunction:(id)arg2 withJavaUtilConcurrentCompletableFuture_UniApply:(id)arg3;
- (id)postFireWithJavaUtilConcurrentCompletableFuture:(id)arg1 withInt:(int)arg2;
- (void)pushWithJavaUtilConcurrentCompletableFuture_UniCompletion:(id)arg1;
- (void)cleanStack;
- (void)postComplete;
- (_Bool)completeRelayWithId:(id)arg1;
- (id)encodeOutcomeWithId:(id)arg1 withJavaLangThrowable:(id)arg2;
- (_Bool)completeThrowableWithJavaLangThrowable:(id)arg1 withId:(id)arg2;
- (_Bool)completeThrowableWithJavaLangThrowable:(id)arg1;
- (_Bool)completeValueWithId:(id)arg1;
- (id)encodeValueWithId:(id)arg1;
- (_Bool)completeNull;
- (void)pushStackWithJavaUtilConcurrentCompletableFuture_Completion:(id)arg1;
- (_Bool)tryPushStackWithJavaUtilConcurrentCompletableFuture_Completion:(id)arg1;
- (_Bool)casStackWithJavaUtilConcurrentCompletableFuture_Completion:(id)arg1 withJavaUtilConcurrentCompletableFuture_Completion:(id)arg2;
- (_Bool)internalCompleteWithId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

