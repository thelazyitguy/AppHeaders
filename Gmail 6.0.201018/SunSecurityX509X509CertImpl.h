//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JavaSecurityCertX509Certificate.h"

#import "SunSecurityUtilDerEncoder-Protocol.h"

@class IOSByteArray, JavaUtilConcurrentConcurrentHashMap, NSString, SunSecurityX509AlgorithmId, SunSecurityX509X509CertInfo;
@protocol JavaSecurityPublicKey, JavaUtilCollection, JavaUtilList, JavaUtilSet;

@interface SunSecurityX509X509CertImpl : JavaSecurityCertX509Certificate <SunSecurityUtilDerEncoder>
{
    SunSecurityX509X509CertInfo *info_;
    SunSecurityX509AlgorithmId *algId_;
    IOSByteArray *signature_;
    _Bool readOnly_;
    IOSByteArray *signedCert_;
    id <JavaUtilCollection> subjectAlternativeNames_;
    id <JavaUtilCollection> issuerAlternativeNames_;
    id <JavaUtilList> extKeyUsage_;
    id <JavaUtilSet> authInfoAccess_;
    id <JavaSecurityPublicKey> verifiedPublicKey_;
    NSString *verifiedProvider_;
    _Bool verificationResult_;
    JavaUtilConcurrentConcurrentHashMap *fingerprints_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (void)byte2hexWithByte:(BOOL)arg1 withJavaLangStringBuffer:(id)arg2;
+ (_Bool)isSelfSignedWithJavaSecurityCertX509Certificate:(id)arg1 withNSString:(id)arg2;
+ (_Bool)isSelfIssuedWithJavaSecurityCertX509Certificate:(id)arg1;
+ (id)toImplWithJavaSecurityCertX509Certificate:(id)arg1;
+ (id)getEncodedInternalWithJavaSecurityCertCertificate:(id)arg1;
+ (id)getIssuerX500PrincipalWithJavaSecurityCertX509Certificate:(id)arg1;
+ (id)getSubjectX500PrincipalWithJavaSecurityCertX509Certificate:(id)arg1;
+ (id)getX500PrincipalWithJavaSecurityCertX509Certificate:(id)arg1 withBoolean:(_Bool)arg2;
+ (id)getIssuerAlternativeNamesWithJavaSecurityCertX509Certificate:(id)arg1;
+ (id)getSubjectAlternativeNamesWithJavaSecurityCertX509Certificate:(id)arg1;
+ (id)cloneAltNamesWithJavaUtilCollection:(id)arg1;
+ (id)makeAltNamesWithSunSecurityX509GeneralNames:(id)arg1;
+ (id)getExtendedKeyUsageWithJavaSecurityCertX509Certificate:(id)arg1;
+ (void)verifyWithJavaSecurityCertX509Certificate:(id)arg1 withJavaSecurityPublicKey:(id)arg2 withJavaSecurityProvider:(id)arg3;
- (void)dealloc;
- (id)getCertificateFingerPrintWithNSString:(id)arg1;
- (id)getFingerprintWithNSString:(id)arg1;
- (void)parseWithSunSecurityUtilDerValue:(id)arg1 withByteArray:(id)arg2;
- (void)parseWithSunSecurityUtilDerValue:(id)arg1;
- (id)getAuthorityInfoAccessExtension;
- (id)getIssuerAlternativeNames;
- (id)getSubjectAlternativeNames;
- (int)getBasicConstraints;
- (id)getExtendedKeyUsage;
- (id)getKeyUsage;
- (id)getExtensionValueWithNSString:(id)arg1;
- (id)getUnparseableExtensionWithSunSecurityUtilObjectIdentifier:(id)arg1;
- (id)getExtensionWithSunSecurityUtilObjectIdentifier:(id)arg1;
- (id)getNonCriticalExtensionOIDs;
- (id)getCriticalExtensionOIDs;
- (_Bool)hasUnsupportedCriticalExtension;
- (id)getCRLDistributionPointsExtension;
- (id)getSubjectKeyIdentifierExtension;
- (id)getSubjectAlternativeNameExtension;
- (id)getPrivateKeyUsageExtension;
- (id)getPolicyMappingsExtension;
- (id)getPolicyConstraintsExtension;
- (id)getNameConstraintsExtension;
- (id)getIssuerAlternativeNameExtension;
- (id)getExtendedKeyUsageExtension;
- (id)getCertificatePoliciesExtension;
- (id)getBasicConstraintsExtension;
- (id)getAuthorityKeyIdentifierExtension;
- (id)getSubjectKeyId;
- (id)getAuthKeyId;
- (id)getSubjectUniqueID;
- (id)getIssuerUniqueID;
- (id)getSigAlgParams;
- (id)getSigAlgOID;
- (id)getSigAlgName;
- (id)getSignature;
- (id)getTBSCertificate;
- (id)getNotAfter;
- (id)getNotBefore;
- (id)getIssuerX500Principal;
- (id)getIssuerDN;
- (id)getSubjectX500Principal;
- (id)getSubjectDN;
- (id)getSerialNumberObject;
- (id)getSerialNumber;
- (int)getVersion;
- (id)getPublicKey;
@property(readonly, copy) NSString *description;
- (id)getName;
- (id)getElements;
- (void)delete__WithNSString:(id)arg1;
- (void)setWithNSString:(id)arg1 withId:(id)arg2;
- (id)getWithNSString:(id)arg1;
- (void)checkValidityWithJavaUtilDate:(id)arg1;
- (void)checkValidity;
- (void)signWithJavaSecurityPrivateKey:(id)arg1 withNSString:(id)arg2 withNSString:(id)arg3;
- (void)signWithJavaSecurityPrivateKey:(id)arg1 withNSString:(id)arg2;
- (void)verifyWithJavaSecurityPublicKey:(id)arg1 withJavaSecurityProvider:(id)arg2;
- (void)verifyWithJavaSecurityPublicKey:(id)arg1 withNSString:(id)arg2;
- (void)verifyWithJavaSecurityPublicKey:(id)arg1;
- (id)getEncodedInternal;
- (id)getEncoded;
- (void)derEncodeWithJavaIoOutputStream:(id)arg1;
- (void)encodeWithJavaIoOutputStream:(id)arg1;
- (id)initWithSunSecurityUtilDerValue:(id)arg1 withByteArray:(id)arg2;
- (id)initWithSunSecurityUtilDerValue:(id)arg1;
- (id)initWithSunSecurityX509X509CertInfo:(id)arg1;
- (id)readRFC1421CertWithJavaIoInputStream:(id)arg1;
- (id)initWithJavaIoInputStream:(id)arg1;
- (id)initWithByteArray:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

