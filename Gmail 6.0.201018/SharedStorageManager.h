//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class BigtopSSOIdentity, NSArray, NSDictionary, NSMutableArray, NSString, NSUserDefaults;

@interface SharedStorageManager : NSObject
{
    NSUserDefaults *_userDefaults;
}

+ (void)setSharedStorageManager:(id)arg1;
+ (id)shareExtensionDirectoryURL;
+ (id)shareExtensionDirectoryPath;
+ (id)sharedStorageDirectoryURL;
+ (id)applicationGroupId;
+ (id)sharedStorage;
+ (id)notificationSettingKeyForEmail:(id)arg1;
+ (id)badgeCountKeyForEmail:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
- (id)dictionaryRepresentation;
- (id)stringArrayForKey:(id)arg1;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (long long)integerForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)setPasswordResetConsumerEnabled:(_Bool)arg1;
- (void)setSwipeActionsRightSwipeOptionTag:(unsigned long long)arg1;
- (unsigned long long)swipeActionsRightSwipeOptionTag;
- (void)setSwipeActionsLeftSwipeOptionTag:(unsigned long long)arg1;
- (unsigned long long)swipeActionsLeftSwipeOptionTag;
- (void)setSwipeActionsHasOpenedSettingsPage:(_Bool)arg1;
- (_Bool)swipeActionsHasOpenedSettingsPage;
- (void)setSwipeActionsHasDismissedOnboardingCard:(_Bool)arg1;
- (_Bool)swipeActionsHasDismissedOnboardingCard;
- (void)setSwipeActionsHasTriggeredOnboardingCard:(_Bool)arg1;
- (_Bool)swipeActionsHasTriggeredOnboardingCard;
- (void)setSwipeActionsMigrationState:(unsigned long long)arg1;
- (unsigned long long)swipeActionsMigrationState;
- (id)keyForEmail:(id)arg1;
- (id)keyForID:(id)arg1;
- (void)setAccountID:(id)arg1 forEmail:(id)arg2;
- (id)accountIDForEmail:(id)arg1;
- (id)emailForAccountID:(id)arg1;
- (void)clearURLsToSave;
- (void)clearPreviouslyCopiedURLs;
- (void)removeExperimentsWithoutPrefixes:(id)arg1;
- (void)removeExperimentsWithPrefix:(id)arg1;
@property(retain, nonatomic) NSDictionary *experimentSettingsMap;
- (id)integerArrayForKey:(id)arg1;
- (id)numberForExperimentKey:(id)arg1;
- (void)setIntegerArray:(id)arg1 forKey:(id)arg2;
- (void)setNumber:(id)arg1 forExperimentKey:(id)arg2;
- (void)setKeyboardShortcutsEnabled:(_Bool)arg1;
- (_Bool)isKeyboardShortcutsEnabled;
- (_Bool)hasSentFromShareExtension;
- (void)setHasSentFromShareExtension:(_Bool)arg1;
- (id)crashReportTimestamps;
- (void)setCrashReportTimestamps:(id)arg1;
@property(readonly, copy, nonatomic) NSString *lastAccountId;
- (void)setSignedInAccountIds:(id)arg1;
- (id)signedInAccountIds;
- (void)setAvatarUrlForAccountId:(id)arg1 url:(id)arg2;
- (id)avatarUrlForAccountId:(id)arg1;
- (void)setSendAsAddresses:(id)arg1 forAccountId:(id)arg2;
- (id)sendAsAddressesForAccountId:(id)arg1;
- (long long)migratedIntegerForKey:(id)arg1;
- (id)migratedObjectForKey:(id)arg1;
- (id)deserializePrefixedContactsForAccountId:(id)arg1 withPrefix:(id)arg2;
- (id)arrayToContact:(id)arg1;
- (id)contactToArray:(id)arg1;
- (id)sharedKeyForAccountId:(id)arg1 prefix:(id)arg2;
@property(copy, nonatomic) NSString *lastAccountEmail;
- (id)init;
- (void)removeAllCachedIdentitiesFromDefaults:(id)arg1;
- (id)bigtopIdentityFromPersistedIdentity:(id)arg1;
@property(retain, nonatomic) NSMutableArray *persistedSignedInUsers;
@property(retain, nonatomic) BigtopSSOIdentity *currentPersistedUser;
- (void)setNotificationSetting:(id)arg1 forEmail:(id)arg2;
- (id)notificationSettingForEmail:(id)arg1;
- (void)setBadgeCountPublishedLocally:(_Bool)arg1 forEmail:(id)arg2;
- (_Bool)isBadgeCountPublishedLocallyForEmail:(id)arg1;
- (void)removeNotificationSettingsNotFoundInActiveEmailAddresses:(id)arg1;
- (void)removeNotificationSettingsForEmail:(id)arg1;
- (void)setBadgeCount:(long long)arg1 forEmail:(id)arg2;
- (long long)badgeCountForEmail:(id)arg1;
@property(readonly, nonatomic) NSArray *emailsThatPublishBadgeCountsLocally;
@property(nonatomic) long long lastSeenNotificationBadgeCount;

@end

