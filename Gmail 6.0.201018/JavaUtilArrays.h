//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface JavaUtilArrays : NSObject
{
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)streamWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)streamWithDoubleArray:(id)arg1;
+ (id)streamWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)streamWithLongArray:(id)arg1;
+ (id)streamWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)streamWithIntArray:(id)arg1;
+ (id)streamWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)streamWithNSObjectArray:(id)arg1;
+ (id)spliteratorWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)spliteratorWithDoubleArray:(id)arg1;
+ (id)spliteratorWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)spliteratorWithLongArray:(id)arg1;
+ (id)spliteratorWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)spliteratorWithIntArray:(id)arg1;
+ (id)spliteratorWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)spliteratorWithNSObjectArray:(id)arg1;
+ (void)parallelSetAllWithDoubleArray:(id)arg1 withJavaUtilFunctionIntToDoubleFunction:(id)arg2;
+ (void)setAllWithDoubleArray:(id)arg1 withJavaUtilFunctionIntToDoubleFunction:(id)arg2;
+ (void)parallelSetAllWithLongArray:(id)arg1 withJavaUtilFunctionIntToLongFunction:(id)arg2;
+ (void)setAllWithLongArray:(id)arg1 withJavaUtilFunctionIntToLongFunction:(id)arg2;
+ (void)parallelSetAllWithIntArray:(id)arg1 withJavaUtilFunctionIntUnaryOperator:(id)arg2;
+ (void)setAllWithIntArray:(id)arg1 withJavaUtilFunctionIntUnaryOperator:(id)arg2;
+ (void)parallelSetAllWithNSObjectArray:(id)arg1 withJavaUtilFunctionIntFunction:(id)arg2;
+ (void)setAllWithNSObjectArray:(id)arg1 withJavaUtilFunctionIntFunction:(id)arg2;
+ (void)deepToStringWithNSObjectArray:(id)arg1 withJavaLangStringBuilder:(id)arg2 withJavaUtilSet:(id)arg3;
+ (id)deepToStringWithNSObjectArray:(id)arg1;
+ (id)toStringWithNSObjectArray:(id)arg1;
+ (id)toStringWithDoubleArray:(id)arg1;
+ (id)toStringWithFloatArray:(id)arg1;
+ (id)toStringWithBooleanArray:(id)arg1;
+ (id)toStringWithByteArray:(id)arg1;
+ (id)toStringWithCharArray:(id)arg1;
+ (id)toStringWithShortArray:(id)arg1;
+ (id)toStringWithIntArray:(id)arg1;
+ (id)toStringWithLongArray:(id)arg1;
+ (_Bool)deepEquals0WithId:(id)arg1 withId:(id)arg2;
+ (_Bool)deepEqualsWithNSObjectArray:(id)arg1 withNSObjectArray:(id)arg2;
+ (int)deepHashCodeWithNSObjectArray:(id)arg1;
+ (int)hashCodeWithNSObjectArray:(id)arg1;
+ (int)hashCodeWithDoubleArray:(id)arg1;
+ (int)hashCodeWithFloatArray:(id)arg1;
+ (int)hashCodeWithBooleanArray:(id)arg1;
+ (int)hashCodeWithByteArray:(id)arg1;
+ (int)hashCodeWithCharArray:(id)arg1;
+ (int)hashCodeWithShortArray:(id)arg1;
+ (int)hashCodeWithIntArray:(id)arg1;
+ (int)hashCodeWithLongArray:(id)arg1;
+ (id)asListWithNSObjectArray:(id)arg1;
+ (id)copyOfRangeWithBooleanArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithFloatArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithShortArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithByteArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfRangeWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withIOSClass:(id)arg4;
+ (id)copyOfRangeWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)copyOfWithBooleanArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithDoubleArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithFloatArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithCharArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithLongArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithIntArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithShortArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithByteArray:(id)arg1 withInt:(int)arg2;
+ (id)copyOfWithNSObjectArray:(id)arg1 withInt:(int)arg2 withIOSClass:(id)arg3;
+ (id)copyOfWithNSObjectArray:(id)arg1 withInt:(int)arg2;
+ (void)fillWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withId:(id)arg4;
+ (void)fillWithNSObjectArray:(id)arg1 withId:(id)arg2;
+ (void)fillWithFloatArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withFloat:(float)arg4;
+ (void)fillWithFloatArray:(id)arg1 withFloat:(float)arg2;
+ (void)fillWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withDouble:(double)arg4;
+ (void)fillWithDoubleArray:(id)arg1 withDouble:(double)arg2;
+ (void)fillWithBooleanArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withBoolean:(_Bool)arg4;
+ (void)fillWithBooleanArray:(id)arg1 withBoolean:(_Bool)arg2;
+ (void)fillWithByteArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withByte:(BOOL)arg4;
+ (void)fillWithByteArray:(id)arg1 withByte:(BOOL)arg2;
+ (void)fillWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withChar:(unsigned short)arg4;
+ (void)fillWithCharArray:(id)arg1 withChar:(unsigned short)arg2;
+ (void)fillWithShortArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withShort:(short)arg4;
+ (void)fillWithShortArray:(id)arg1 withShort:(short)arg2;
+ (void)fillWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (void)fillWithIntArray:(id)arg1 withInt:(int)arg2;
+ (void)fillWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withLong:(long long)arg4;
+ (void)fillWithLongArray:(id)arg1 withLong:(long long)arg2;
+ (_Bool)equalsWithNSObjectArray:(id)arg1 withNSObjectArray:(id)arg2;
+ (_Bool)equalsWithFloatArray:(id)arg1 withFloatArray:(id)arg2;
+ (_Bool)equalsWithDoubleArray:(id)arg1 withDoubleArray:(id)arg2;
+ (_Bool)equalsWithBooleanArray:(id)arg1 withBooleanArray:(id)arg2;
+ (_Bool)equalsWithByteArray:(id)arg1 withByteArray:(id)arg2;
+ (_Bool)equalsWithCharArray:(id)arg1 withCharArray:(id)arg2;
+ (_Bool)equalsWithShortArray:(id)arg1 withShortArray:(id)arg2;
+ (_Bool)equalsWithIntArray:(id)arg1 withIntArray:(id)arg2;
+ (_Bool)equalsWithLongArray:(id)arg1 withLongArray:(id)arg2;
+ (int)binarySearch0WithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withId:(id)arg4 withJavaUtilComparator:(id)arg5;
+ (int)binarySearchWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withId:(id)arg4 withJavaUtilComparator:(id)arg5;
+ (int)binarySearchWithNSObjectArray:(id)arg1 withId:(id)arg2 withJavaUtilComparator:(id)arg3;
+ (int)binarySearch0WithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withId:(id)arg4;
+ (int)binarySearchWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withId:(id)arg4;
+ (int)binarySearchWithNSObjectArray:(id)arg1 withId:(id)arg2;
+ (int)binarySearch0WithFloatArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withFloat:(float)arg4;
+ (int)binarySearchWithFloatArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withFloat:(float)arg4;
+ (int)binarySearchWithFloatArray:(id)arg1 withFloat:(float)arg2;
+ (int)binarySearch0WithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withDouble:(double)arg4;
+ (int)binarySearchWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withDouble:(double)arg4;
+ (int)binarySearchWithDoubleArray:(id)arg1 withDouble:(double)arg2;
+ (int)binarySearch0WithByteArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withByte:(BOOL)arg4;
+ (int)binarySearchWithByteArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withByte:(BOOL)arg4;
+ (int)binarySearchWithByteArray:(id)arg1 withByte:(BOOL)arg2;
+ (int)binarySearch0WithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withChar:(unsigned short)arg4;
+ (int)binarySearchWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withChar:(unsigned short)arg4;
+ (int)binarySearchWithCharArray:(id)arg1 withChar:(unsigned short)arg2;
+ (int)binarySearch0WithShortArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withShort:(short)arg4;
+ (int)binarySearchWithShortArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withShort:(short)arg4;
+ (int)binarySearchWithShortArray:(id)arg1 withShort:(short)arg2;
+ (int)binarySearch0WithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (int)binarySearchWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (int)binarySearchWithIntArray:(id)arg1 withInt:(int)arg2;
+ (int)binarySearch0WithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withLong:(long long)arg4;
+ (int)binarySearchWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withLong:(long long)arg4;
+ (int)binarySearchWithLongArray:(id)arg1 withLong:(long long)arg2;
+ (void)parallelPrefixWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withJavaUtilFunctionIntBinaryOperator:(id)arg4;
+ (void)parallelPrefixWithIntArray:(id)arg1 withJavaUtilFunctionIntBinaryOperator:(id)arg2;
+ (void)parallelPrefixWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withJavaUtilFunctionDoubleBinaryOperator:(id)arg4;
+ (void)parallelPrefixWithDoubleArray:(id)arg1 withJavaUtilFunctionDoubleBinaryOperator:(id)arg2;
+ (void)parallelPrefixWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withJavaUtilFunctionLongBinaryOperator:(id)arg4;
+ (void)parallelPrefixWithLongArray:(id)arg1 withJavaUtilFunctionLongBinaryOperator:(id)arg2;
+ (void)parallelPrefixWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withJavaUtilFunctionBinaryOperator:(id)arg4;
+ (void)parallelPrefixWithNSObjectArray:(id)arg1 withJavaUtilFunctionBinaryOperator:(id)arg2;
+ (void)sortWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withJavaUtilComparator:(id)arg4;
+ (void)sortWithNSObjectArray:(id)arg1 withJavaUtilComparator:(id)arg2;
+ (void)swapWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)mergeSortWithNSObjectArray:(id)arg1 withNSObjectArray:(id)arg2 withInt:(int)arg3 withInt:(int)arg4 withInt:(int)arg5;
+ (void)sortWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithNSObjectArray:(id)arg1;
+ (void)parallelSortWithNSObjectArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withJavaUtilComparator:(id)arg4;
+ (void)parallelSortWithNSObjectArray:(id)arg1 withJavaUtilComparator:(id)arg2;
+ (void)parallelSortWithJavaLangComparableArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithJavaLangComparableArray:(id)arg1;
+ (void)parallelSortWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithDoubleArray:(id)arg1;
+ (void)parallelSortWithFloatArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithFloatArray:(id)arg1;
+ (void)parallelSortWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithLongArray:(id)arg1;
+ (void)parallelSortWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithIntArray:(id)arg1;
+ (void)parallelSortWithShortArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithShortArray:(id)arg1;
+ (void)parallelSortWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithCharArray:(id)arg1;
+ (void)parallelSortWithByteArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)parallelSortWithByteArray:(id)arg1;
+ (void)sortWithDoubleArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithDoubleArray:(id)arg1;
+ (void)sortWithFloatArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithFloatArray:(id)arg1;
+ (void)sortWithByteArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithByteArray:(id)arg1;
+ (void)sortWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithCharArray:(id)arg1;
+ (void)sortWithShortArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithShortArray:(id)arg1;
+ (void)sortWithLongArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithLongArray:(id)arg1;
+ (void)sortWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)sortWithIntArray:(id)arg1;
+ (void)rangeCheckWithInt:(int)arg1 withInt:(int)arg2 withInt:(int)arg3;
- (id)init;

@end

