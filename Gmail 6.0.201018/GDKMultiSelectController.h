//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKActionPanelVCDelegate-Protocol.h"
#import "GDKDialogControllerDelegate-Protocol.h"
#import "GDKFilePileViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class GDKFilePileView, GDKFolderColorPalette, GDKMultiSelectScreenOverlay, GDKTheme, NSArray, NSMutableArray, NSString, UIPanGestureRecognizer, UIView, UIViewController;
@protocol GDKActionPanelItemProviding, GDKCapabilityChecking, GDKFileActionProvider, GDKFileFetcher, GDKFileListing, GDKFileResolving, GDKMultiSelectControllerDelegate, GDKSnackbarControlling, GDKViewControllerContaining;

@interface GDKMultiSelectController : NSObject <GDKActionPanelVCDelegate, GDKDialogControllerDelegate, UIGestureRecognizerDelegate, GDKFilePileViewDelegate>
{
    _Bool _active;
    _Bool _openInActionItemEnabled;
    _Bool _linkSharingToggleEnabled;
    _Bool _teamDrivesEnabled;
    _Bool _autoPurgingMessagingEnabled;
    int _buttonOptions;
    id <GDKMultiSelectControllerDelegate> _delegate;
    id <GDKFileListing> _fileList;
    UIViewController<GDKViewControllerContaining> *_containerVC;
    id <GDKFileActionProvider> _actionProvider;
    id <GDKFileFetcher> _fileFetcher;
    id <GDKSnackbarControlling> _snackbarController;
    NSString *_userID;
    CDUnknownBlockType _actionPanelItemProviderProducer;
    GDKFilePileView *_pileView;
    GDKMultiSelectScreenOverlay *_selectionOverlay;
    NSMutableArray *_selections;
    UIPanGestureRecognizer *_pilePanRecognizer;
    UIView *_gradientView;
    id <GDKFileResolving> _fileResolver;
    id <GDKActionPanelItemProviding> _actionPanelItemProvider;
    GDKFolderColorPalette *_folderColorPalette;
    GDKTheme *_theme;
    id <GDKCapabilityChecking> _capabilityChecker;
    struct CGRect _pileViewPanStartFrame;
}

+ (_Bool)isUnmoveableTeamDriveFile:(id)arg1;
+ (id)filePileStateWithFileResolver:(id)arg1 selectedFiles:(id)arg2 selectableFiles:(id)arg3;
+ (id)blankFilePileStateBuilder;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool autoPurgingMessagingEnabled; // @synthesize autoPurgingMessagingEnabled=_autoPurgingMessagingEnabled;
@property(readonly, nonatomic) id <GDKCapabilityChecking> capabilityChecker; // @synthesize capabilityChecker=_capabilityChecker;
@property(readonly, nonatomic) GDKTheme *theme; // @synthesize theme=_theme;
@property(readonly, nonatomic) _Bool teamDrivesEnabled; // @synthesize teamDrivesEnabled=_teamDrivesEnabled;
@property(readonly, nonatomic) GDKFolderColorPalette *folderColorPalette; // @synthesize folderColorPalette=_folderColorPalette;
@property(readonly, nonatomic) id <GDKActionPanelItemProviding> actionPanelItemProvider; // @synthesize actionPanelItemProvider=_actionPanelItemProvider;
@property(readonly, nonatomic) id <GDKFileResolving> fileResolver; // @synthesize fileResolver=_fileResolver;
@property(readonly, nonatomic) int buttonOptions; // @synthesize buttonOptions=_buttonOptions;
@property(retain, nonatomic) UIView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) UIPanGestureRecognizer *pilePanRecognizer; // @synthesize pilePanRecognizer=_pilePanRecognizer;
@property(retain, nonatomic) NSMutableArray *selections; // @synthesize selections=_selections;
@property(retain, nonatomic) GDKMultiSelectScreenOverlay *selectionOverlay; // @synthesize selectionOverlay=_selectionOverlay;
@property(retain, nonatomic) GDKFilePileView *pileView; // @synthesize pileView=_pileView;
@property(nonatomic) struct CGRect pileViewPanStartFrame; // @synthesize pileViewPanStartFrame=_pileViewPanStartFrame;
@property(readonly, nonatomic) CDUnknownBlockType actionPanelItemProviderProducer; // @synthesize actionPanelItemProviderProducer=_actionPanelItemProviderProducer;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, nonatomic) id <GDKSnackbarControlling> snackbarController; // @synthesize snackbarController=_snackbarController;
@property(retain, nonatomic) id <GDKFileFetcher> fileFetcher; // @synthesize fileFetcher=_fileFetcher;
@property(retain, nonatomic) id <GDKFileActionProvider> actionProvider; // @synthesize actionProvider=_actionProvider;
@property(nonatomic) __weak UIViewController<GDKViewControllerContaining> *containerVC; // @synthesize containerVC=_containerVC;
@property(nonatomic) __weak id <GDKFileListing> fileList; // @synthesize fileList=_fileList;
@property(nonatomic) _Bool linkSharingToggleEnabled; // @synthesize linkSharingToggleEnabled=_linkSharingToggleEnabled;
@property(nonatomic) _Bool openInActionItemEnabled; // @synthesize openInActionItemEnabled=_openInActionItemEnabled;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(nonatomic) __weak id <GDKMultiSelectControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)actionPanelVC:(id)arg1 didSelectActionPanelItem:(id)arg2;
- (void)dialogControllerDidCancel:(id)arg1;
- (id)topContainedViewController;
- (id)topViewController;
- (void)notify:(id)arg1;
- (void)notify:(id)arg1 itemCount:(id)arg2 actionType:(long long)arg3;
- (double)navigationHeaderHeight;
- (id)actionsPresenterVC;
- (_Bool)canMovePile;
- (void)presentActionPanelForFilePileView:(id)arg1;
- (_Bool)isDragSessionActive:(id)arg1;
- (void)filePileViewTrashWasPressed:(id)arg1;
- (void)filePileViewMoveWasPressed:(id)arg1;
- (void)filePileViewClearSelectionWasPressed:(id)arg1;
- (void)filePileViewSelectAllWasPressed:(id)arg1;
- (struct CGRect)gradientViewFrame;
- (void)displayGradientOnView:(id)arg1;
- (struct CGRect)pileViewHiddenFrame;
- (struct CGRect)pileViewRestingFrame;
- (void)willTransitionToSize:(struct CGSize)arg1;
- (void)animatePileViewToRestingFrame;
- (void)updatePileView;
- (void)handlePanGesture:(id)arg1;
- (_Bool)canHandlePotentialDropToItem:(id)arg1 atIndexPath:(id)arg2;
- (void)handleDrag:(id)arg1 folder:(id)arg2;
- (void)handleDragDidMove;
- (void)handleDragDidEnd;
- (void)handleDragWillBegin;
- (void)showMessageForDragStartIfNecessary;
- (void)moveCurrentSelectionToFolder:(id)arg1;
- (void)dropPileViewAtPoint:(struct CGPoint)arg1 translation:(struct CGPoint)arg2 velocity:(struct CGPoint)arg3;
- (_Bool)dismissIfNecessaryAtPileViewTranslation:(struct CGPoint)arg1 withVelocity:(struct CGPoint)arg2;
- (_Bool)isPileViewWithinCancelThreshold:(struct CGPoint)arg1;
- (_Bool)canDropSelectionsIntoFolder:(id)arg1 atTranslation:(struct CGPoint)arg2;
- (_Bool)canDropSelectionsIntoItem:(id)arg1;
- (void)displaySelectionOverlayWithTitle:(id)arg1;
- (_Bool)addSelectionIfUnique:(id)arg1;
- (id)selectionsWithParent:(id)arg1;
- (id)selectionsMatchingFile:(id)arg1 inFolder:(id)arg2;
- (void)dismissAnimated:(_Bool)arg1 animatePileViewToFrame:(struct CGRect)arg2;
- (void)dismissAnimated:(_Bool)arg1;
- (_Bool)nonOrganizerTeamDriveFileInSelection;
- (_Bool)visitorTeamDriveFileInSelection;
- (void)clearSelectionAndDeactivate;
- (void)deselectFilesWithoutAnimation:(id)arg1 inFolder:(id)arg2;
- (void)selectFilesWithoutAnimation:(id)arg1 inFolder:(id)arg2;
- (void)fileWasDeselected:(id)arg1 inFolder:(id)arg2 atIndexPath:(id)arg3 withView:(id)arg4;
- (void)fileWasSelected:(id)arg1 inFolder:(id)arg2 atIndexPath:(id)arg3 withView:(id)arg4;
- (void)activate;
- (_Bool)itemInSelection:(id)arg1;
- (_Bool)nonOwnedFileInSelection;
- (_Bool)folderInSelection;
@property(readonly, nonatomic) NSArray *resolvedSelectedFiles;
@property(readonly, nonatomic) NSArray *selectedFiles;
- (id)initWithContainerVC:(id)arg1 actionProvider:(id)arg2 fileFetcher:(id)arg3 snackbarController:(id)arg4 fileResolver:(id)arg5 actionPanelItemProviderProducer:(CDUnknownBlockType)arg6 userID:(id)arg7 buttonOptions:(int)arg8 folderColorPalette:(id)arg9 teamDrivesEnabled:(_Bool)arg10 theme:(id)arg11 autoPurgingMessagingEnabled:(_Bool)arg12 capabilityChecker:(id)arg13;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

