//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSNumber.h>

#import "JavaLangComparable-Protocol.h"

@class IOSIntArray, NSString;

@interface JavaMathBigInteger : NSNumber <JavaLangComparable>
{
    int signum_;
    IOSIntArray *mag_;
    int bitCount_;
    int bitLength_;
    int lowestSetBit_;
    int firstNonzeroIntNum_;
}

+ (void)initialize;
+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)makePositiveWithIntArray:(id)arg1;
+ (id)makePositiveWithByteArray:(id)arg1;
+ (id)stripLeadingZeroBytesWithByteArray:(id)arg1;
+ (id)trustedStripLeadingZeroIntsWithIntArray:(id)arg1;
+ (id)stripLeadingZeroIntsWithIntArray:(id)arg1;
+ (id)getRadixConversionCacheWithInt:(int)arg1 withInt:(int)arg2;
+ (void)toStringWithJavaMathBigInteger:(id)arg1 withJavaLangStringBuilder:(id)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (id)shiftLeftWithIntArray:(id)arg1 withInt:(int)arg2;
+ (int)addOneWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (int)mulAddWithIntArray:(id)arg1 withIntArray:(id)arg2 withInt:(int)arg3 withInt:(int)arg4 withInt:(int)arg5;
+ (int)subNWithIntArray:(id)arg1 withIntArray:(id)arg2 withInt:(int)arg3;
+ (int)intArrayCmpToLenWithIntArray:(id)arg1 withIntArray:(id)arg2 withInt:(int)arg3;
+ (id)montReduceWithIntArray:(id)arg1 withIntArray:(id)arg2 withInt:(int)arg3 withInt:(int)arg4;
+ (int)bitLengthWithIntArray:(id)arg1 withInt:(int)arg2;
+ (void)primitiveLeftShiftWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (void)primitiveRightShiftWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)leftShiftWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)bitLengthForIntWithInt:(int)arg1;
+ (id)squareToLenWithIntArray:(id)arg1 withInt:(int)arg2 withIntArray:(id)arg3;
+ (id)multiplyToomCook3WithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
+ (id)multiplyKaratsubaWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
+ (id)multiplyByIntWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)subtractWithIntArray:(id)arg1 withIntArray:(id)arg2;
+ (id)subtractWithIntArray:(id)arg1 withLong:(long long)arg2;
+ (id)subtractWithLong:(long long)arg1 withIntArray:(id)arg2;
+ (id)addWithIntArray:(id)arg1 withIntArray:(id)arg2;
+ (id)addWithIntArray:(id)arg1 withLong:(long long)arg2;
+ (id)valueOfWithIntArray:(id)arg1;
+ (id)valueOfWithLong:(long long)arg1;
+ (void)reportOverflow;
+ (id)lucasLehmerSequenceWithInt:(int)arg1 withJavaMathBigInteger:(id)arg2 withJavaMathBigInteger:(id)arg3;
+ (int)jacobiSymbolWithInt:(int)arg1 withJavaMathBigInteger:(id)arg2;
+ (int)getPrimeSearchLenWithInt:(int)arg1;
+ (id)largePrimeWithInt:(int)arg1 withInt:(int)arg2 withJavaUtilRandom:(id)arg3;
+ (id)smallPrimeWithInt:(int)arg1 withInt:(int)arg2 withJavaUtilRandom:(id)arg3;
+ (id)probablePrimeWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;
+ (id)randomBitsWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;
+ (void)destructiveMulAddWithIntArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
- (void)dealloc;
- (BOOL)byteValueExact;
- (short)shortValueExact;
- (int)intValueExact;
- (long long)longValueExact;
- (id)magSerializedForm;
- (void)writeObjectWithJavaIoObjectOutputStream:(id)arg1;
- (void)readObjectWithJavaIoObjectInputStream:(id)arg1;
- (int)firstNonzeroIntNum;
- (int)getIntWithInt:(int)arg1;
- (int)signInt;
- (int)signBit;
- (int)intLength;
- (double)doubleValue;
- (float)floatValue;
- (long long)longLongValue;
- (int)intValue;
- (id)toByteArray;
@property(readonly, copy) NSString *description;
- (id)smallToStringWithInt:(int)arg1;
- (id)toStringWithInt:(int)arg1;
@property(readonly) unsigned long long hash;
- (id)maxWithJavaMathBigInteger:(id)arg1;
- (id)minWithJavaMathBigInteger:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (int)compareMagnitudeWithLong:(long long)arg1;
- (int)compareMagnitudeWithJavaMathBigInteger:(id)arg1;
- (int)compareToWithId:(id)arg1;
- (_Bool)isProbablePrimeWithInt:(int)arg1;
- (int)bitCount;
- (int)bitLength;
- (int)getLowestSetBit;
- (id)flipBitWithInt:(int)arg1;
- (id)clearBitWithInt:(int)arg1;
- (id)setBitWithInt:(int)arg1;
- (_Bool)testBitWithInt:(int)arg1;
- (id)andNotWithJavaMathBigInteger:(id)arg1;
- (id)not__;
- (id)xor__WithJavaMathBigInteger:(id)arg1;
- (id)or__WithJavaMathBigInteger:(id)arg1;
- (id)and__WithJavaMathBigInteger:(id)arg1;
- (id)javaIncrementWithIntArray:(id)arg1;
- (id)shiftRightImplWithInt:(int)arg1;
- (id)shiftRightWithInt:(int)arg1;
- (id)shiftLeftWithInt:(int)arg1;
- (id)modInverseWithJavaMathBigInteger:(id)arg1;
- (id)mod2WithInt:(int)arg1;
- (id)modPow2WithJavaMathBigInteger:(id)arg1 withInt:(int)arg2;
- (id)oddModPowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
- (id)modPowWithJavaMathBigInteger:(id)arg1 withJavaMathBigInteger:(id)arg2;
- (id)modWithJavaMathBigInteger:(id)arg1;
- (int)signum;
- (id)negate;
- (id)abs;
- (id)gcdWithJavaMathBigInteger:(id)arg1;
- (id)powWithInt:(int)arg1;
- (id)divideAndRemainderBurnikelZieglerWithJavaMathBigInteger:(id)arg1;
- (id)remainderBurnikelZieglerWithJavaMathBigInteger:(id)arg1;
- (id)divideBurnikelZieglerWithJavaMathBigInteger:(id)arg1;
- (id)remainderKnuthWithJavaMathBigInteger:(id)arg1;
- (id)remainderWithJavaMathBigInteger:(id)arg1;
- (id)divideAndRemainderKnuthWithJavaMathBigInteger:(id)arg1;
- (id)divideAndRemainderWithJavaMathBigInteger:(id)arg1;
- (id)divideKnuthWithJavaMathBigInteger:(id)arg1;
- (id)divideWithJavaMathBigInteger:(id)arg1;
- (id)squareToomCook3;
- (id)squareKaratsuba;
- (id)square;
- (id)getUpperWithInt:(int)arg1;
- (id)getLowerWithInt:(int)arg1;
- (id)exactDivideBy3;
- (id)getToomSliceWithInt:(int)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4;
- (id)multiplyToLenWithIntArray:(id)arg1 withInt:(int)arg2 withIntArray:(id)arg3 withInt:(int)arg4 withIntArray:(id)arg5;
- (id)multiplyWithLong:(long long)arg1;
- (id)multiplyWithJavaMathBigInteger:(id)arg1;
- (id)subtractWithJavaMathBigInteger:(id)arg1;
- (id)addWithLong:(long long)arg1;
- (id)addWithJavaMathBigInteger:(id)arg1;
- (id)initWithLong:(long long)arg1;
- (void)checkRange;
- (id)initWithByteArray:(id)arg1 withInt:(int)arg2;
- (id)initWithIntArray:(id)arg1 withInt:(int)arg2;
- (_Bool)passesMillerRabinWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;
- (_Bool)passesLucasLehmer;
- (_Bool)primeToCertaintyWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;
- (id)nextProbablePrime;
- (id)initWithInt:(int)arg1 withInt:(int)arg2 withJavaUtilRandom:(id)arg3;
- (id)initWithInt:(int)arg1 withJavaUtilRandom:(id)arg2;
- (id)initWithNSString:(id)arg1;
- (int)parseIntWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
- (id)initWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
- (id)initWithNSString:(id)arg1 withInt:(int)arg2;
- (id)initWithInt:(int)arg1 withIntArray:(id)arg2;
- (id)initWithInt:(int)arg1 withByteArray:(id)arg2;
- (id)initWithIntArray:(id)arg1;
- (id)initWithByteArray:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

