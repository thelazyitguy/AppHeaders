//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class HOPBHangoutMessage, NSString;

@protocol GHKHarmonyConferenceEventHandler <NSObject>

@optional
- (void)onAudioMuteRequestedByRemoteParticipant:(NSString *)arg1;
- (void)onHangoutMessageReceived:(HOPBHangoutMessage *)arg1;
-     // Error parsing type: v40@0:8@"NSData"16@"NSString"24^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}32, name: onClientDataReceived:sender:conference:
-     // Error parsing type: v32@0:8^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}24, name: onParticipantRemoved:conference:
-     // Error parsing type: v32@0:8^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}24, name: onParticipantModified:conference:
-     // Error parsing type: v32@0:8^{Participant={HangoutParticipant=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{WeakRepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=(?={RepeatedPtrField<chat::frontend::hangouts::HangoutParticipant_BlockedUser>=^{Arena}ii^{Rep}})}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}BBBBiiBqiii}B{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}24, name: onParticipantAdded:conference:
-     // Error parsing type: v24@0:8^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}16, name: onConferenceModified:
-     // Error parsing type: v28@0:8i16^{Conference=^^?^?^?^?{set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >={__tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *> >=Q}}}^^?{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, harmony::Participant *, const rtc::CopyOnWriteBuffer &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, const chat::frontend::hangouts::HangoutMessage &>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, harmony::Conference *, int>=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}{signal_with_thread_policy<sigslot::single_threaded, std::__1::basic_string<char> >=^?^?{list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection> >={__list_node_base<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}^{__list_node_base<sigslot::_opaque_connection, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *> > >=Q}}{__list_iterator<sigslot::_opaque_connection, void *>=^{__list_node_base<sigslot::_opaque_connection, void *>}}B}^{MediaSessionInternalInterface}{Hangout=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}^{MessageLite}^{MessageLite}^{MessageLite}qqqqBBBBiiiiiBBii}i{unique_ptr<harmony::JoinRequest, std::__1::default_delete<harmony::JoinRequest> >={__compressed_pair<harmony::JoinRequest *, std::__1::default_delete<harmony::JoinRequest> >=^{JoinRequest}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{optional<bool>=(?=cB)B}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{unique_ptr<harmony::MesiCollection, std::__1::default_delete<harmony::MesiCollection> >={__compressed_pair<harmony::MesiCollection *, std::__1::default_delete<harmony::MesiCollection> >=^{MesiCollection}}}{flat_hash_map<std::__1::basic_string<char>, harmony::Participant *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=*^(map_slot_type<std::__1::basic_string<char>, harmony::Participant *>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, harmony::Participant *> > >=Q}}{flat_hash_map<std::__1::basic_string<char>, long long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=*^(map_slot_type<std::__1::basic_string<char>, long long>)QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long> > >=Q}}{unique_ptr<harmony::DtmfSender, std::__1::default_delete<harmony::DtmfSender> >={__compressed_pair<harmony::DtmfSender *, std::__1::default_delete<harmony::DtmfSender> >=^{DtmfSender}}}{unique_ptr<harmony::EnsureSessionConnectedTask, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >={__compressed_pair<harmony::EnsureSessionConnectedTask *, std::__1::default_delete<harmony::EnsureSessionConnectedTask> >=^{EnsureSessionConnectedTask}}}{unique_ptr<harmony::JoinBulkRpcTask, std::__1::default_delete<harmony::JoinBulkRpcTask> >={__compressed_pair<harmony::JoinBulkRpcTask *, std::__1::default_delete<harmony::JoinBulkRpcTask> >=^{JoinBulkRpcTask}}}{unique_ptr<harmony::Conference::Request, std::__1::default_delete<harmony::Conference::Request> >={__compressed_pair<harmony::Conference::Request *, std::__1::default_delete<harmony::Conference::Request> >=^{Request}}}i}20, name: onError:conference:
@end

