//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <AmazonChimeSDKMedia/VideoClientObserverAdapterDelegate-Protocol.h>
#import <AmazonChimeSDKMedia/VideoRendererDelegate-Protocol.h>

@class NSMutableArray, NSString, ObjCVideoSourceAdapter;
@protocol VideoClientDelegate;

@interface VideoClient : NSObject <VideoClientObserverAdapterDelegate, VideoRendererDelegate>
{
    // Error parsing type: ^{VideoClientImpl=^^?^^?^^?^^?^^?^^?{VideoClientParameters=iB{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}diB{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}BBBBBBBBBBBBBBBBBiB{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{VideoClientSignalerParameters={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}^?{AppInfo={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}B}}^{VideoClientImplObserver}{unique_ptr<VideoClientLogSink, std::__1::default_delete<VideoClientLogSink> >={__compressed_pair<VideoClientLogSink *, std::__1::default_delete<VideoClientLogSink> >=^{VideoClientLogSink}}}^{Thread}BBBiiii{scoped_refptr<webrtc::PeerConnectionFactoryInterface>=^{PeerConnectionFactoryInterface}}{scoped_refptr<webrtc::PeerConnectionInterface>=^{PeerConnectionInterface}}{scoped_refptr<webrtc::RtpSenderInterface>=^{RtpSenderInterface}}{scoped_refptr<webrtc::RtpTransceiverInterface>=^{RtpTransceiverInterface}}{map<int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface> > > >={__tree<std::__1::__value_type<int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface> >, std::__1::__map_value_compare<int, std::__1::__value_type<int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface> >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, rtc::scoped_refptr<webrtc::RtpTransceiverInterface> >, std::__1::less<int>, true> >=Q}}}{scoped_refptr<webrtc::VideoTrackInterface>=^{VideoTrackInterface}}{scoped_refptr<CapturerFrameAdapter>=^{CapturerFrameAdapter}}{scoped_refptr<VideoClientFakeCapturer>=^{VideoClientFakeCapturer}}{scoped_refptr<webrtc::VideoTrackSourceInterface>=^{VideoTrackSourceInterface}}{unique_ptr<VideoRendererAdapterFactory, std::__1::default_delete<VideoRendererAdapterFactory> >={__compressed_pair<VideoRendererAdapterFactory *, std::__1::default_delete<VideoRendererAdapterFactory> >=^{VideoRendererAdapterFactory}}}{unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> >={__compressed_pair<VideoRendererAdapter *, std::__1::default_delete<VideoRendererAdapter> >=^{VideoRendererAdapter}}}{vector<std::__1::unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> >, std::__1::allocator<std::__1::unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> > > >=^{unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> >}^{unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> >}{__compressed_pair<std::__1::unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> > *, std::__1::allocator<std::__1::unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> > > >=^{unique_ptr<VideoRendererAdapter, std::__1::default_delete<VideoRendererAdapter> >}}}{VideoClientSignaler=iB^{VideoClientSignalerObserver}{VideoClientSignalerParameters={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}^?{AppInfo={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}B}B{TurnSession={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}Q{time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > >={duration<long long, std::__1::ratio<1, 1000000> >=q}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}i}^{signaling_client_s}{thread=^{_opaque_pthread_t}}i^{Thread}{time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000> > >={duration<long long, std::__1::ratio<1, 1000000> >=q}}}BBqBBii{unique_ptr<PolicyInterface<UplinkPolicyDependencies, UplinkPolicyDecision>, std::__1::default_delete<PolicyInterface<UplinkPolicyDependencies, UplinkPolicyDecision> > >={__compressed_pair<PolicyInterface<UplinkPolicyDependencies, UplinkPolicyDecision> *, std::__1::default_delete<PolicyInterface<UplinkPolicyDependencies, UplinkPolicyDecision> > >=^{PolicyInterface<UplinkPolicyDependencies, UplinkPolicyDecision>}}}{unique_ptr<PolicyInterface<DownlinkPolicyDependencies, DownlinkPolicyDecision>, std::__1::default_delete<PolicyInterface<DownlinkPolicyDependencies, DownlinkPolicyDecision> > >={__compressed_pair<PolicyInterface<DownlinkPolicyDependencies, DownlinkPolicyDecision> *, std::__1::default_delete<PolicyInterface<DownlinkPolicyDependencies, DownlinkPolicyDecision> > >=^{PolicyInterface<DownlinkPolicyDependencies, DownlinkPolicyDecision>}}}{VideoClientMediaContext=^{media_context_s}^{media_sync_hub_s}}{scoped_refptr<VideoClientRTCStatsCollector>=^{VideoClientRTCStatsCollector}}{VideoClientStreamInfos={vector<VideoClientStreamInfo, std::__1::allocator<VideoClientStreamInfo> >=^{VideoClientStreamInfo}^{VideoClientStreamInfo}{__compressed_pair<VideoClientStreamInfo *, std::__1::allocator<VideoClientStreamInfo> >=^{VideoClientStreamInfo}}}{vector<VideoClientStreamInfo, std::__1::allocator<VideoClientStreamInfo> >=^{VideoClientStreamInfo}^{VideoClientStreamInfo}{__compressed_pair<VideoClientStreamInfo *, std::__1::allocator<VideoClientStreamInfo> >=^{VideoClientStreamInfo}}}}{VideoClientPinpoint=^{instrumentation_client_s}{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}I{map<unsigned int, VideoStreamStats, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, VideoStreamStats> > >={__tree<std::__1::__value_type<unsigned int, VideoStreamStats>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, VideoStreamStats>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, VideoStreamStats> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, VideoStreamStats>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, VideoStreamStats>, std::__1::less<unsigned int>, true> >=Q}}}[3{VideoStreamStats=IIIIIIdIIi}]{atomic<bool>=AB}}, name: _client
    struct unique_ptr<rtc::Thread, std::__1::default_delete<rtc::Thread>> _signaling_thread;
    struct VideoClientImplObserver *_observer;
    struct video_client_renderer_s _renderer;
    int _signaler_state;
    ObjCVideoSourceAdapter *_video_source_adapter;
    _Bool _sending;
    _Bool _receiving;
    _Bool _backgroundBlur;
    int _backgroundBlurSigma;
    struct CGColorSpace *_cspace;
    NSMutableArray *_activeTracks;
    int _display_width[17];
    int _display_height[17];
    // Error parsing type: [17{atomic<int>="__a_"Ai}], name: _numRenderFramesAvailable
    NSObject<VideoClientDelegate> *_delegate;
}

+ (void)clearSavedDevice;
+ (void)setSavedDeviceId:(id)arg1;
+ (id)savedDeviceId;
+ (void)setSavedDevice:(id)arg1;
+ (id)defaultDevice;
+ (id)currentDevice;
+ (void)setDevice:(id)arg1;
+ (unsigned long long)deviceCount;
+ (id)devices;
+ (_Bool)isBackgroundBlurSupported;
+ (void)setMediaClientConfig:(id)arg1;
+ (void)globalInitialize:(struct instrumentation_client_s *)arg1;
+ (void)globalInitializeWithInstrumentationClient:(struct instrumentation_client_s *)arg1 logNotifyDelegate:(id)arg2;
+ (void)globalInitialize;
@property(retain, nonatomic) NSObject<VideoClientDelegate> *delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)didRemoveRendererWithId:(unsigned int)arg1;
- (void)didUpdatePauseForRendererWithId:(unsigned int)arg1 state:(unsigned long long)arg2;
- (void)didReceiveVideoBuffer:(struct __CVBuffer *)arg1 profileId:(id)arg2 videoId:(unsigned int)arg3 timestampNs:(long long)arg4 rotation:(unsigned long long)arg5;
- (void)videoClientDataMessageReceived:(struct data_message_s *)arg1 count:(int)arg2;
- (void)videoClientMetricsReceived:(id)arg1;
- (void)videoClientRequestTurnCreds;
- (void)videoClientDidFailWithStatus:(int)arg1 controlStatus:(int)arg2;
- (void)videoClientSignalerStateDidChange:(int)arg1 controlStatus:(int)arg2;
- (void)videoClientCameraSendIsAvailable:(_Bool)arg1;
- (void)removeTrackId:(id)arg1;
- (void)addTrackId:(id)arg1;
- (id)activeTracks;
- (void)videoLogCallBack:(int)arg1 msg:(id)arg2;
- (void)setExternalVideoSource:(id)arg1;
- (void)sendDataMessage:(id)arg1 data:(const char *)arg2 lifetimeMs:(int)arg3;
- (void)getDisplayDimensions:(int)arg1 width:(int *)arg2 height:(int *)arg3;
- (void)setDisplayDimension:(int)arg1 width:(int)arg2 height:(int)arg3;
- (void)setCurrentDevice:(id)arg1;
- (void)dealloc;
- (id)generateStatsString:(void *)arg1 is_local:(_Bool)arg2;
- (id)getStatsString:(id)arg1 is_local:(_Bool)arg2;
- (void)setRemotePause:(unsigned int)arg1 pause:(_Bool)arg2;
- (int)getServiceType;
- (void)setBackgroundBlur:(_Bool)arg1 sigma:(int)arg2;
- (void)setBackgroundBlur:(_Bool)arg1;
- (void)setReceiving:(_Bool)arg1;
- (void)setSending:(_Bool)arg1;
- (void)updateServiceType;
- (id)stateString;
- (void)updateTurnCreds:(CDStruct_f0405cea)arg1 turnStatus:(int)arg2;
- (_Bool)isActive;
- (void)stop;
- (void)start:(id)arg1 proxyCallback:(CDUnknownFunctionPointerType)arg2 stunServerUrl:(id)arg3 callId:(id)arg4 token:(id)arg5 sending:(_Bool)arg6 config:(id)arg7 appInfo:(CDStruct_86462899)arg8;
- (void)start:(id)arg1 token:(id)arg2 sending:(_Bool)arg3 config:(id)arg4 appInfo:(CDStruct_86462899)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

