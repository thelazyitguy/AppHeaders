//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CXCallObserverDelegate-Protocol.h"
#import "SHSessionDelegateProtocol-Protocol.h"
#import "_TtP10SlackCalls27SlackCallsProviderInterface_-Protocol.h"

@class AFHTTPSessionManager, CXCallObserver, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimer, SHSession, SLKDependencies;
@protocol _TtP10SlackCalls21SlackCallsAppDelegate_, _TtP10SlackCalls23SlackCallsInputDelegate_;

@interface SLKCallSessionClient : NSObject <_TtP10SlackCalls27SlackCallsProviderInterface_, SHSessionDelegateProtocol, CXCallObserverDelegate>
{
    _Bool enableVideoStreaming;
    _Bool _userHasAcceptedCall;
    _Bool _isCurrentlyOnCall;
    _Bool _userIsCurrentlyNotOniOSCall;
    _Bool _userHasGrantedMicrophonePermission;
    _Bool _userHasHeadphonesPluggedIn;
    _Bool _attemptToReconnect;
    _Bool _reconnecting;
    _Bool _muted;
    _Bool _speaker;
    AFHTTPSessionManager *_manager;
    NSString *_accessToken;
    id <_TtP10SlackCalls21SlackCallsAppDelegate_> _delegate;
    NSNumber *_callSurveyPercentage;
    NSString *_callSurveyRoomID;
    NSString *currentCallDuration;
    NSString *roomID;
    id <_TtP10SlackCalls23SlackCallsInputDelegate_> inputDelegate;
    SHSession *_session;
    unsigned long long _callType;
    NSString *_sessionToken;
    NSNumber *_tokenExpiry;
    NSTimer *_updateCallSessionTokenTimer;
    NSTimer *_attemptingToReconnectToCallTimer;
    NSTimer *_possiblyAttemptToReconnectToCallTimer;
    NSTimer *_callInitiatedButNotConnectedTimeoutTimer;
    NSMutableArray *_userInvitesTimers;
    NSMutableArray *_userInvitesIDs;
    NSString *_hostnameURLString;
    NSString *_turnAuthUserName;
    NSString *_turnAuthUserPassword;
    NSArray *_turnAuthPorts;
    NSString *_turnHostName;
    NSNumber *_port;
    NSString *_windowHostname;
    NSString *_channelID;
    NSString *_participantID;
    NSMutableDictionary *_participantsCache;
    CXCallObserver *_callObserver;
    long long _connectionState;
    NSTimer *_callDurationTimer;
    NSDate *_callBeginDate;
    double _currentTimeInterval;
    unsigned long long _numberOfTimesAttemptedToConnectToCallServer;
    NSString *_errorMessageToDisplayBeforeEndingCall;
    NSMutableArray *_managers;
    SLKDependencies *_dependencies;
}

- (void).cxx_destruct;
@property(nonatomic) __weak SLKDependencies *dependencies; // @synthesize dependencies=_dependencies;
@property(retain, nonatomic) NSMutableArray *managers; // @synthesize managers=_managers;
@property(retain, nonatomic) NSString *errorMessageToDisplayBeforeEndingCall; // @synthesize errorMessageToDisplayBeforeEndingCall=_errorMessageToDisplayBeforeEndingCall;
@property(nonatomic) unsigned long long numberOfTimesAttemptedToConnectToCallServer; // @synthesize numberOfTimesAttemptedToConnectToCallServer=_numberOfTimesAttemptedToConnectToCallServer;
@property(nonatomic) double currentTimeInterval; // @synthesize currentTimeInterval=_currentTimeInterval;
@property(retain, nonatomic) NSDate *callBeginDate; // @synthesize callBeginDate=_callBeginDate;
@property(retain, nonatomic) NSTimer *callDurationTimer; // @synthesize callDurationTimer=_callDurationTimer;
@property(nonatomic) long long connectionState; // @synthesize connectionState=_connectionState;
@property(nonatomic) _Bool speaker; // @synthesize speaker=_speaker;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(retain, nonatomic) CXCallObserver *callObserver; // @synthesize callObserver=_callObserver;
@property(nonatomic) _Bool reconnecting; // @synthesize reconnecting=_reconnecting;
@property(nonatomic) _Bool attemptToReconnect; // @synthesize attemptToReconnect=_attemptToReconnect;
@property(nonatomic) _Bool userHasHeadphonesPluggedIn; // @synthesize userHasHeadphonesPluggedIn=_userHasHeadphonesPluggedIn;
@property(nonatomic) _Bool userHasGrantedMicrophonePermission; // @synthesize userHasGrantedMicrophonePermission=_userHasGrantedMicrophonePermission;
@property(nonatomic) _Bool userIsCurrentlyNotOniOSCall; // @synthesize userIsCurrentlyNotOniOSCall=_userIsCurrentlyNotOniOSCall;
@property(nonatomic) _Bool isCurrentlyOnCall; // @synthesize isCurrentlyOnCall=_isCurrentlyOnCall;
@property(retain, nonatomic) NSMutableDictionary *participantsCache; // @synthesize participantsCache=_participantsCache;
@property(retain, nonatomic) NSString *participantID; // @synthesize participantID=_participantID;
@property(retain, nonatomic) NSString *channelID; // @synthesize channelID=_channelID;
@property(retain, nonatomic) NSString *windowHostname; // @synthesize windowHostname=_windowHostname;
@property(retain, nonatomic) NSNumber *port; // @synthesize port=_port;
@property(retain, nonatomic) NSString *turnHostName; // @synthesize turnHostName=_turnHostName;
@property(retain, nonatomic) NSArray *turnAuthPorts; // @synthesize turnAuthPorts=_turnAuthPorts;
@property(retain, nonatomic) NSString *turnAuthUserPassword; // @synthesize turnAuthUserPassword=_turnAuthUserPassword;
@property(retain, nonatomic) NSString *turnAuthUserName; // @synthesize turnAuthUserName=_turnAuthUserName;
@property(retain, nonatomic) NSString *hostnameURLString; // @synthesize hostnameURLString=_hostnameURLString;
@property(retain, nonatomic) NSMutableArray *userInvitesIDs; // @synthesize userInvitesIDs=_userInvitesIDs;
@property(retain, nonatomic) NSMutableArray *userInvitesTimers; // @synthesize userInvitesTimers=_userInvitesTimers;
@property(nonatomic) _Bool userHasAcceptedCall; // @synthesize userHasAcceptedCall=_userHasAcceptedCall;
@property(retain, nonatomic) NSTimer *callInitiatedButNotConnectedTimeoutTimer; // @synthesize callInitiatedButNotConnectedTimeoutTimer=_callInitiatedButNotConnectedTimeoutTimer;
@property(retain, nonatomic) NSTimer *possiblyAttemptToReconnectToCallTimer; // @synthesize possiblyAttemptToReconnectToCallTimer=_possiblyAttemptToReconnectToCallTimer;
@property(retain, nonatomic) NSTimer *attemptingToReconnectToCallTimer; // @synthesize attemptingToReconnectToCallTimer=_attemptingToReconnectToCallTimer;
@property(retain, nonatomic) NSTimer *updateCallSessionTokenTimer; // @synthesize updateCallSessionTokenTimer=_updateCallSessionTokenTimer;
@property(retain, nonatomic) NSNumber *tokenExpiry; // @synthesize tokenExpiry=_tokenExpiry;
@property(retain, nonatomic) NSString *sessionToken; // @synthesize sessionToken=_sessionToken;
@property(nonatomic) unsigned long long callType; // @synthesize callType=_callType;
@property(retain, nonatomic) SHSession *session; // @synthesize session=_session;
@property(nonatomic) _Bool enableVideoStreaming; // @synthesize enableVideoStreaming;
@property(retain, nonatomic) id <_TtP10SlackCalls23SlackCallsInputDelegate_> inputDelegate; // @synthesize inputDelegate;
@property(copy, nonatomic) NSString *roomID; // @synthesize roomID;
@property(copy, nonatomic) NSString *currentCallDuration; // @synthesize currentCallDuration;
@property(copy, nonatomic) NSString *callSurveyRoomID; // @synthesize callSurveyRoomID=_callSurveyRoomID;
@property(retain, nonatomic) NSNumber *callSurveyPercentage; // @synthesize callSurveyPercentage=_callSurveyPercentage;
@property(retain, nonatomic) id <_TtP10SlackCalls21SlackCallsAppDelegate_> delegate; // @synthesize delegate=_delegate;
- (void)callObserver:(id)arg1 callChanged:(id)arg2;
- (id)dictionaryFromCallJSONString:(id)arg1;
- (id)jsonStringWithCallMethod:(id)arg1 parameters:(id)arg2;
- (void)stopUpdateCallTokenTimer;
- (long long)resumeVideoTilesWithTileIds:(id)arg1;
- (long long)pauseVideoTilesWithTileIds:(id)arg1;
- (id)getParticipantsWithParticipantIds:(id)arg1;
- (id)currentAudioRouteDevice;
- (long long)chooseAudioDeviceWithMediaDevice:(id)arg1;
- (id)getAudioDevices;
- (long long)switchCamera;
- (long long)toggleVideo;
- (void)joinScheduledCallWithRoomID:(id)arg1 teamID:(id)arg2;
- (void)reset;
- (void)sendSurveyWith:(long long)arg1 comments:(id)arg2;
- (void)voiceCallInviteCancelReceived:(id)arg1;
- (void)voiceCallResponseReceived:(id)arg1;
- (void)invalidateReconnectToCallTimerIfNeeded;
- (void)closeSession;
- (void)attemptToReconnectToCall;
- (void)invokeJsMethod:(id)arg1;
- (void)joinRoom;
- (void)updateCallTokenWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateCallToken;
- (void)cancelInviteToUser:(id)arg1 roomID:(id)arg2 withResponse:(long long)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)cancelUserInviteFromTimer:(id)arg1;
- (void)addTimerToCancelIfCallNotAcceptedForUserID:(id)arg1;
- (void)connectToJanusWithAuthenticationToken:(id)arg1 hostnameURL:(id)arg2 teamID:(id)arg3 roomID:(id)arg4 tokenExpiry:(id)arg5;
- (void)parseCreateRoomReturnedDictionary:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getExistingCallRoomWithRegions:(id)arg1 roomID:(id)arg2 teamID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)createNewCallRoomWithRegions:(id)arg1 channelID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getCallRegionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)closeCurrentCallSynchronously:(_Bool)arg1;
- (void)softcloseCurrentCall;
- (void)renameRoomTo:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)joinCallWithCallRoomId:(id)arg1 channelId:(id)arg2;
- (void)dmCallBackWithChannelId:(id)arg1;
- (void)reconnect;
- (void)setMuteStateON:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)toggleMuteFromSource:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)addCallEndedDateToCallRoomWithID:(id)arg1;
- (void)respondToIncomingCallForRoomID:(id)arg1 fromUserID:(id)arg2 with:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)respondToIncomingCallForRoomID:(id)arg1 fromUserID:(id)arg2 forTeamID:(id)arg3 with:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)connectToCall;
- (void)joinExistingVoiceCallWithRoomID:(id)arg1 teamID:(id)arg2;
- (void)inviteWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)inviteUser:(id)arg1 toRoomID:(id)arg2 shouldShare:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)createNewVoiceCallWithChannelID:(id)arg1 withUser:(id)arg2;
- (void)disconnectCallIfNotConnected;
- (void)createNewVoiceCallWithChannelID:(id)arg1;
@property(readonly, nonatomic) double callsTimeOutDuration;
- (id)slackCallVendorInfo;
@property(readonly, nonatomic) _Bool userIsCurrentlyOniOSCall;
- (void)stopCallDurationTimer;
- (void)updateCallDuration:(id)arg1;
- (void)dealloc;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) AFHTTPSessionManager *manager; // @synthesize manager=_manager;
- (id)initWithDependencies:(id)arg1;
- (_Bool)isVoiceCallsEnabled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

