//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AudioDevice, BluetoothGlue, NSString;
@protocol AudioClientDelegate, OS_dispatch_source;

@interface AudioClient : NSObject
{
    // Error parsing type: ^{audio_client_s=^{logger_s}^{apr_pool_t}^{xal_s}^{media_stream_s}^{mic_stream_s}^{spk_stream_s}^{apr_thread_mutex_t}^{client_stats_s}^{audio_cues_s}^{ui_bridge_s}^{audio_client_session_s}^{apr_thread_mutex_t}B^{atomic_wr_buf_s}^{atomic_wr_buf_s}^{atomic_wr_buf_s}di[100{ping_data_s=Sq}]iiqiB^{_PolyMessage}I^{xal_diagnostic_s}BBBBBiAi{?=iffffiffffffffffffffffffiiffffffffffddddffifff}^{atomic_wr_buf_s}^{media_context_s}^{audio_client_event_manager_s}AIi**[7*][256c]BB^{instrumentation_client_s}}, name: _client
    // Error parsing type: AB, name: _audio_client_session_active
    // Error parsing type: AB, name: _pendingCheckExternalAudioAfterNotification
    unsigned long long _deviceEventListenerCount;
    int _currentRoute;
    NSObject<AudioClientDelegate> *_delegate;
    NSString *_cookie;
    BluetoothGlue *_bluetooth;
    NSObject<OS_dispatch_source> *_timer;
}

+ (id)sharedDispatchQueue;
+ (id)sharedInstance;
+ (_Bool)speakerOnStateWithNotification:(id)arg1;
+ (_Bool)reachabilityForHosts:(id)arg1 withWebsocketUrl:(id)arg2 proxyCallback:(CDUnknownFunctionPointerType)arg3 failedHosts:(id)arg4;
+ (_Bool)reachabilityForHosts:(id)arg1 failedHosts:(id)arg2;
+ (_Bool)reachabilityForHost:(id)arg1 withMode:(id)arg2 proxyCallback:(CDUnknownFunctionPointerType)arg3;
+ (void)globalTerminate;
+ (_Bool)globalInitializeWithInstrumentationClient:(struct instrumentation_client_s *)arg1 withLogDelegate:(id)arg2;
@property(retain) NSObject<OS_dispatch_source> *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) BluetoothGlue *bluetooth; // @synthesize bluetooth=_bluetooth;
@property int currentRoute; // @synthesize currentRoute=_currentRoute;
@property(retain, nonatomic) NSString *cookie; // @synthesize cookie=_cookie;
@property(retain, nonatomic) NSObject<AudioClientDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)endOnHold;
- (void)endOnHoldResetXal;
- (void)beginOnHoldForInterruption:(int)arg1;
- (void)beginOnHold;
- (void)setInputDevice:(id)arg1 output:(id)arg2;
- (void)setDevicesById:(id)arg1 output:(id)arg2;
@property(readonly, nonatomic) AudioDevice *outputDevice;
@property(readonly, nonatomic) AudioDevice *inputDevice;
- (id)deviceById:(const char *)arg1 isInput:(_Bool)arg2;
- (void)setAudioLogDir:(id)arg1;
- (id)devices;
- (void)markCantHear;
- (void)dealloc;
- (void)stopCue:(int)arg1;
- (void)remoteMute;
- (void)playCue:(int)arg1 loop:(_Bool)arg2 retrigger:(_Bool)arg3;
- (long long)setRumbleStripsEnabled:(_Bool)arg1;
- (_Bool)isRumbleStripsEnabled;
- (void)setPresenter:(_Bool)arg1;
- (long long)setBliteNSSelected:(_Bool)arg1;
- (_Bool)isBliteNSSelected;
- (long long)setMicrophoneMuted:(_Bool)arg1;
- (_Bool)isMicrophoneMuted;
- (int)getBibaEnv:(const char *)arg1 def_val:(int)arg2;
- (long long)stopAudioRecord;
- (long long)setSpeakerCodec:(int)arg1;
- (long long)setMicrophoneCodec:(int)arg1;
- (_Bool)isBluetoothOn;
- (void)routeChangedNotification:(id)arg1;
- (void)logCurrentRoute;
- (void)logRouteChangedNotification:(id)arg1;
- (void)handleAVAudioSessionInterruptionNotification:(id)arg1;
- (void)checkExternalAudioAvailability;
- (_Bool)setSpeakerOn:(_Bool)arg1;
- (_Bool)isSpeakerOn;
- (long long)stopSession;
- (int)startSession:(int)arg1 host:(id)arg2 basePort:(long long)arg3 proxyCallback:(CDUnknownFunctionPointerType)arg4 callId:(id)arg5 profileId:(id)arg6 microphoneCodec:(int)arg7 speakerCodec:(int)arg8 microphoneMute:(_Bool)arg9 speakerMute:(_Bool)arg10 isPresenter:(_Bool)arg11 features:(id)arg12 sessionToken:(id)arg13 audioWsUrl:(id)arg14 khiEnabled:(_Bool)arg15 callKitEnabled:(_Bool)arg16 cvp_module_flag:(int)arg17 cvp_pref_flag:(int)arg18;
- (int)startSession:(id)arg1 basePort:(long long)arg2 callId:(id)arg3 profileId:(id)arg4 microphoneMute:(_Bool)arg5 speakerMute:(_Bool)arg6 isPresenter:(_Bool)arg7 sessionToken:(id)arg8 audioWsUrl:(id)arg9 callKitEnabled:(_Bool)arg10;
- (void)stopDeviceEventListener;
- (void)startDeviceEventListener;
- (id)init;
@property(readonly, nonatomic) AudioDevice *systemDefaultOutputDevice;
@property(readonly, nonatomic) AudioDevice *systemDefaultInputDevice;
@property(retain, nonatomic) AudioDevice *savedOutputDevice;
@property(retain, nonatomic) AudioDevice *savedInputDevice;
@property(retain, nonatomic) NSString *savedOutputDeviceId;
@property(retain, nonatomic) NSString *savedInputDeviceId;
- (void)clearSavedDevices;
- (void)audioLogCallBack:(int)arg1 msg:(id)arg2;

@end

