//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CRReportableEvent.h"

@class CRApp, CRCrash, NSDate, NSNumber, NSSet, NSString;

@interface CRSession : CRReportableEvent
{
}

+ (void)load;
+ (id)getLastSysBootTime;
+ (id)doSHAHash:(id)arg1;
+ (id)getIPAddresses;
+ (id)currentMnc;
+ (id)currentMcc;
+ (id)currentCarrier;
+ (id)coreTelephonyClassInstance;
+ (id)currentBatteryLevel;
+ (id)currentDeviceOrientation;
+ (id)currentLocale;
+ (id)currentDiskUsage;
+ (id)currentMemoryUsage;
+ (id)fetchRequest;
- (_Bool)isBackgroundSession;
- (_Bool)hasUnreportedEvents;
- (unsigned long long)finishedSendingAction;
- (id)sessionStatsJson;
- (id)commonDataAsJson;
- (id)appStateJson;
- (id)appVersion;
- (id)initWithContext:(id)arg1 sdkVersion:(id)arg2 startTime:(id)arg3 sequenceNumber:(id)arg4 coldLaunched:(_Bool)arg5 backgroundSession:(_Bool)arg6;

// Remaining properties
@property(retain, nonatomic) CRApp *app; // @dynamic app;
@property(retain, nonatomic) CRApp *appCurrentSession; // @dynamic appCurrentSession;
@property(retain, nonatomic) NSSet *appHangs; // @dynamic appHangs;
@property(retain, nonatomic) NSSet *appLags; // @dynamic appLags;
@property(retain, nonatomic) NSSet *appLoads; // @dynamic appLoads;
@property(retain, nonatomic) CRApp *appPreviousSession; // @dynamic appPreviousSession;
@property(retain, nonatomic) NSSet *appStarts; // @dynamic appStarts;
@property(copy, nonatomic) NSNumber *backgroundSession; // @dynamic backgroundSession;
@property(copy, nonatomic) NSString *binaryImageArch; // @dynamic binaryImageArch;
@property(copy, nonatomic) NSString *binaryImageName; // @dynamic binaryImageName;
@property(copy, nonatomic) NSString *binaryImageUUID; // @dynamic binaryImageUUID;
@property(copy, nonatomic) NSString *binaryImageUuidFormatted; // @dynamic binaryImageUuidFormatted;
@property(copy, nonatomic) NSDate *bootTime; // @dynamic bootTime;
@property(copy, nonatomic) NSString *bundleIdentifier; // @dynamic bundleIdentifier;
@property(copy, nonatomic) NSString *bundleShortVersion; // @dynamic bundleShortVersion;
@property(copy, nonatomic) NSString *bundleVersion; // @dynamic bundleVersion;
@property(copy, nonatomic) NSNumber *coldLaunched; // @dynamic coldLaunched;
@property(retain, nonatomic) CRCrash *crash; // @dynamic crash;
@property(retain, nonatomic) NSSet *customEvents; // @dynamic customEvents;
@property(copy, nonatomic) NSString *customVersion; // @dynamic customVersion;
@property(copy, nonatomic) NSNumber *debuggerAttached; // @dynamic debuggerAttached;
@property(copy, nonatomic) NSNumber *diskSpaceTotal; // @dynamic diskSpaceTotal;
@property(retain, nonatomic) NSSet *errors; // @dynamic errors;
@property(retain, nonatomic) NSSet *exceptions; // @dynamic exceptions;
@property(retain, nonatomic) NSSet *externalErrors; // @dynamic externalErrors;
@property(copy, nonatomic) NSNumber *isForegrounded; // @dynamic isForegrounded;
@property(copy, nonatomic) NSDate *lastBackgroundDate; // @dynamic lastBackgroundDate;
@property(copy, nonatomic) NSNumber *memoryTotal; // @dynamic memoryTotal;
@property(copy, nonatomic) NSString *model; // @dynamic model;
@property(retain, nonatomic) NSSet *networkRequests; // @dynamic networkRequests;
@property(copy, nonatomic) NSString *platform; // @dynamic platform;
@property(copy, nonatomic) NSString *sdkVersion; // @dynamic sdkVersion;
@property(copy, nonatomic) NSNumber *sequenceNumber; // @dynamic sequenceNumber;
@property(copy, nonatomic) NSDate *sessionEndDate; // @dynamic sessionEndDate;
@property(copy, nonatomic) NSString *sessionId; // @dynamic sessionId;
@property(copy, nonatomic) NSString *sessionUsername; // @dynamic sessionUsername;
@property(copy, nonatomic) NSString *systemName; // @dynamic systemName;
@property(copy, nonatomic) NSString *systemVersion; // @dynamic systemVersion;
@property(copy, nonatomic) NSNumber *terminationReason; // @dynamic terminationReason;
@property(retain, nonatomic) NSSet *timeSpanEvents; // @dynamic timeSpanEvents;

@end

