//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;

@interface MMKV : NSObject
{
    NSString *m_mmapID;
    NSString *m_mmapKey;
    struct MMKV *m_mmkv;
    unsigned long long m_lastAccessTime;
}

+ (_Bool)tranlateData:(id)arg1 key:(id)arg2 kv:(id)arg3;
+ (void)setLogLevel:(unsigned long long)arg1;
+ (void)unregiserHandler;
+ (void)registerHandler:(id)arg1;
+ (_Bool)isFileValid:(id)arg1 rootPath:(id)arg2;
+ (_Bool)isFileValid:(id)arg1;
+ (id)mmapKeyWithMMapID:(id)arg1 rootPath:(id)arg2;
+ (void)setMMKVBasePath:(id)arg1;
+ (id)mmkvBasePath;
+ (void)tryAutoCleanUpInstances;
+ (void)disableAutoCleanUp;
+ (void)enableAutoCleanUp:(unsigned int)arg1;
+ (void)onAppTerminate;
+ (void)didBecomeActive;
+ (void)didEnterBackground;
+ (id)mmkvWithID:(id)arg1 cryptKey:(id)arg2 rootPath:(id)arg3 mode:(unsigned long long)arg4;
+ (id)mmkvWithID:(id)arg1 cryptKey:(id)arg2 relativePath:(id)arg3;
+ (id)mmkvWithID:(id)arg1 cryptKey:(id)arg2 rootPath:(id)arg3;
+ (id)mmkvWithID:(id)arg1 relativePath:(id)arg2;
+ (id)mmkvWithID:(id)arg1 rootPath:(id)arg2;
+ (id)mmkvWithID:(id)arg1 cryptKey:(id)arg2 mode:(unsigned long long)arg3;
+ (id)mmkvWithID:(id)arg1 cryptKey:(id)arg2;
+ (id)mmkvWithID:(id)arg1 mode:(unsigned long long)arg2;
+ (id)mmkvWithID:(id)arg1;
+ (id)defaultMMKV;
+ (id)initializeMMKV:(id)arg1 groupDir:(id)arg2 logLevel:(unsigned long long)arg3;
+ (id)initializeMMKV:(id)arg1 logLevel:(unsigned long long)arg2;
+ (id)initializeMMKV:(id)arg1;
+ (void)initialize;
- (unsigned int)migrateFromUserDefaults:(id)arg1;
- (void)checkContentChanged;
- (void)async;
- (void)sync;
- (void)removeValuesForKeys:(id)arg1;
- (void)removeValueForKey:(id)arg1;
- (id)allKeys;
- (void)enumerateKeys:(CDUnknownBlockType)arg1;
- (unsigned long long)actualSize;
- (unsigned long long)totalSize;
- (unsigned long long)count;
- (_Bool)containsKey:(id)arg1;
- (int)writeValueForKey:(id)arg1 toBuffer:(id)arg2;
- (unsigned long long)getValueSizeForKey:(id)arg1;
- (id)getDataForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getDataForKey:(id)arg1;
- (id)getDateForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getDateForKey:(id)arg1;
- (id)getStringForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getStringForKey:(id)arg1;
- (double)getDoubleForKey:(id)arg1 defaultValue:(double)arg2;
- (double)getDoubleForKey:(id)arg1;
- (float)getFloatForKey:(id)arg1 defaultValue:(float)arg2;
- (float)getFloatForKey:(id)arg1;
- (unsigned long long)getUInt64ForKey:(id)arg1 defaultValue:(unsigned long long)arg2;
- (unsigned long long)getUInt64ForKey:(id)arg1;
- (long long)getInt64ForKey:(id)arg1 defaultValue:(long long)arg2;
- (long long)getInt64ForKey:(id)arg1;
- (unsigned int)getUInt32ForKey:(id)arg1 defaultValue:(unsigned int)arg2;
- (unsigned int)getUInt32ForKey:(id)arg1;
- (int)getInt32ForKey:(id)arg1 defaultValue:(int)arg2;
- (int)getInt32ForKey:(id)arg1;
- (_Bool)getBoolForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (_Bool)getBoolForKey:(id)arg1;
- (id)getObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (_Bool)setData:(id)arg1 forKey:(id)arg2;
- (_Bool)setDate:(id)arg1 forKey:(id)arg2;
- (_Bool)setString:(id)arg1 forKey:(id)arg2;
- (_Bool)setDouble:(double)arg1 forKey:(id)arg2;
- (_Bool)setFloat:(float)arg1 forKey:(id)arg2;
- (_Bool)setUInt64:(unsigned long long)arg1 forKey:(id)arg2;
- (_Bool)setInt64:(long long)arg1 forKey:(id)arg2;
- (_Bool)setUInt32:(unsigned int)arg1 forKey:(id)arg2;
- (_Bool)setInt32:(int)arg1 forKey:(id)arg2;
- (_Bool)setBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (void)checkReSetCryptKey:(id)arg1;
- (_Bool)reKey:(id)arg1;
- (id)cryptKey;
- (void)trim;
- (void)close;
- (void)clearMemoryCache;
- (void)clearAll;
- (void)onMemoryWarning;
- (void)dealloc;
- (id)initWithMMapID:(id)arg1 cryptKey:(id)arg2 rootPath:(id)arg3 mode:(unsigned long long)arg4;

@end

