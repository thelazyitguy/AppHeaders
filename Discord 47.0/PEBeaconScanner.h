//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBCentralManagerDelegate-Protocol.h"
#import "CBPeripheralDelegate-Protocol.h"
#import "CLLocationManagerDelegate-Protocol.h"

@class CBCentralManager, CLLocationManager, NSArray, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSTimer;
@protocol OS_dispatch_queue, PEBeaconScannerDelegate, PETimerFactory;

@interface PEBeaconScanner : NSObject <CLLocationManagerDelegate, CBCentralManagerDelegate, CBPeripheralDelegate>
{
    NSMutableDictionary *_GATTOperationsInProgress;
    NSMutableSet *_peripheralRefs;
    NSTimer *_bluetoothTimer;
    _Bool _scanningEnabled;
    _Bool _showBluetoothPowerAlert;
    _Bool _immediatelyRangeIBeacons;
    _Bool _requestedLocationAuthorization;
    _Bool _iBeaconRegionsActive;
    _Bool _iBeaconRangingActive;
    CLLocationManager *_locationManager;
    CBCentralManager *_centralManager;
    id <PEBeaconScannerDelegate> _delegate;
    double _beaconLostTimeout;
    long long _iBeaconRegionMode;
    NSString *_backgroundRestoreIdentifier;
    id <PETimerFactory> _timerFactory;
    NSMutableDictionary *_beaconInfosById;
    NSMutableDictionary *_customBeaconDataById;
    NSMutableDictionary *_deviceIDCache;
    NSMutableDictionary *_beaconLeaveTimersById;
    NSMutableSet *_iBeaconUUIDs;
    NSObject<OS_dispatch_queue> *_beaconsOperationQueue;
    NSSet *_additionalServiceIds;
    CDUnknownBlockType _isInterestingBeacon;
    unsigned long long _backgroundRangingTask;
}

+ (struct _PEURLEncodingData)encodedByteForURLString:(id)arg1 atIndex:(unsigned long long)arg2;
+ (id)encodeURL:(id)arg1;
+ (id)getEncodedString:(BOOL)arg1;
+ (id)getURLScheme:(BOOL)arg1;
+ (id)URLForForFrame:(id)arg1;
+ (id)GATTConfigurationServiceUUID;
@property(nonatomic) _Bool iBeaconRangingActive; // @synthesize iBeaconRangingActive=_iBeaconRangingActive;
@property(nonatomic) _Bool iBeaconRegionsActive; // @synthesize iBeaconRegionsActive=_iBeaconRegionsActive;
@property(nonatomic) unsigned long long backgroundRangingTask; // @synthesize backgroundRangingTask=_backgroundRangingTask;
@property(nonatomic) _Bool requestedLocationAuthorization; // @synthesize requestedLocationAuthorization=_requestedLocationAuthorization;
@property(copy, nonatomic) CDUnknownBlockType isInterestingBeacon; // @synthesize isInterestingBeacon=_isInterestingBeacon;
@property(retain, nonatomic) NSSet *additionalServiceIds; // @synthesize additionalServiceIds=_additionalServiceIds;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *beaconsOperationQueue; // @synthesize beaconsOperationQueue=_beaconsOperationQueue;
@property(retain, nonatomic) NSMutableSet *iBeaconUUIDs; // @synthesize iBeaconUUIDs=_iBeaconUUIDs;
@property(retain, nonatomic) NSMutableDictionary *beaconLeaveTimersById; // @synthesize beaconLeaveTimersById=_beaconLeaveTimersById;
@property(retain, nonatomic) NSMutableDictionary *deviceIDCache; // @synthesize deviceIDCache=_deviceIDCache;
@property(retain, nonatomic) NSMutableDictionary *customBeaconDataById; // @synthesize customBeaconDataById=_customBeaconDataById;
@property(retain, nonatomic) NSMutableDictionary *beaconInfosById; // @synthesize beaconInfosById=_beaconInfosById;
@property(retain, nonatomic) id <PETimerFactory> timerFactory; // @synthesize timerFactory=_timerFactory;
@property(readonly, nonatomic) NSString *backgroundRestoreIdentifier; // @synthesize backgroundRestoreIdentifier=_backgroundRestoreIdentifier;
@property(nonatomic) _Bool immediatelyRangeIBeacons; // @synthesize immediatelyRangeIBeacons=_immediatelyRangeIBeacons;
@property(nonatomic) long long iBeaconRegionMode; // @synthesize iBeaconRegionMode=_iBeaconRegionMode;
@property(nonatomic) double beaconLostTimeout; // @synthesize beaconLostTimeout=_beaconLostTimeout;
@property(nonatomic) _Bool showBluetoothPowerAlert; // @synthesize showBluetoothPowerAlert=_showBluetoothPowerAlert;
@property(nonatomic) _Bool scanningEnabled; // @synthesize scanningEnabled=_scanningEnabled;
@property(nonatomic) __weak id <PEBeaconScannerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)startScanningForIBeacons;
- (void)stopScanningForIBeacons;
@property(readonly, nonatomic) NSArray *recentBeaconInfos;
- (void)disableScanning;
- (void)enableScanning:(id)arg1 filter:(CDUnknownBlockType)arg2;
- (void)enableScanning:(id)arg1 serviceIds:(id)arg2;
- (void)enableScanning:(id)arg1;
- (void)locationManager:(id)arg1 rangingBeaconsDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 didRangeBeacons:(id)arg2 inRegion:(id)arg3;
- (void)locationManager:(id)arg1 didDetermineState:(long long)arg2 forRegion:(id)arg3;
- (void)noteZipBeacon:(id)arg1 withDeviceID:(id)arg2;
- (void)centralManager:(id)arg1 willRestoreState:(id)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)noteCustomBeacon:(id)arg1 advertisementData:(id)arg2 RSSI:(id)arg3;
- (void)noteBeacon:(id)arg1 withDeviceID:(id)arg2;
- (void)appDidBecomeActive:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)scanIfAppropriate;
@property(retain, nonatomic) CBCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void)dealloc;
- (void)initializeScannerWithRestorePrefix:(id)arg1;
- (id)initWithBackgroundRestoreIdentifierPrefix:(id)arg1;
- (id)init;
- (id)errorForGATTCode:(long long)arg1;
- (id)errorForGATTCode:(long long)arg1 forPeripheral:(id)arg2;
- (void)closeBeacon:(id)arg1;
- (void)runStateMachineForPeripheral:(id)arg1;
- (void)logPeripheral:(id)arg1 message:(id)arg2;
- (void)timeoutBluetoothConnection:(id)arg1;
- (void)scheduleConnectionTimerWithTimeout:(double)arg1 peripheral:(id)arg2;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)connectPeripheral:(id)arg1 performFlow:(Class)arg2 passKey:(id)arg3 otherParams:(id)arg4 callback:(CDUnknownBlockType)arg5 statusCallback:(CDUnknownBlockType)arg6;
- (void)configureBeaconAsUID:(id)arg1 beaconNamespace:(id)arg2 instanceID:(id)arg3 advInterval:(int)arg4 txPower:(int)arg5 addTelemetry:(_Bool)arg6 addURL:(id)arg7 passKey:(id)arg8 GATTCapabilities:(id)arg9 callback:(CDUnknownBlockType)arg10 statusCallback:(CDUnknownBlockType)arg11;
- (void)configureBeaconAsEID:(id)arg1 addTelemetry:(_Bool)arg2 advInterval:(int)arg3 txPower:(int)arg4 passKey:(id)arg5 GATTCapabilities:(id)arg6 ECDHKey:(id)arg7 rotationExponent:(int)arg8 callback:(CDUnknownBlockType)arg9 statusCallback:(CDUnknownBlockType)arg10;
- (void)lockBeacon:(id)arg1 currentPassKey:(id)arg2 newPassKey:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)factoryResetBeacon:(id)arg1 passKey:(id)arg2 callback:(CDUnknownBlockType)arg3 statusCallback:(CDUnknownBlockType)arg4;
- (void)setAdvertisingIntervalForAllFrames:(id)arg1 passKey:(id)arg2 advertisingInterval:(unsigned short)arg3 GATTCapabilities:(id)arg4 callback:(CDUnknownBlockType)arg5 statusCallback:(CDUnknownBlockType)arg6;
- (void)updateURLFrame:(id)arg1 passKey:(id)arg2 shouldHaveURLFrame:(_Bool)arg3 URL:(id)arg4 txPower:(BOOL)arg5 advInterval:(unsigned short)arg6 GATTCapabilities:(id)arg7 callback:(CDUnknownBlockType)arg8 statusCallback:(CDUnknownBlockType)arg9;
- (void)updateTLMFrame:(id)arg1 passKey:(id)arg2 shouldHaveTLMFrame:(_Bool)arg3 txPower:(BOOL)arg4 advInterval:(unsigned short)arg5 GATTCapabilities:(id)arg6 callback:(CDUnknownBlockType)arg7 statusCallback:(CDUnknownBlockType)arg8;
- (void)setTxPowerForAllFrames:(id)arg1 passKey:(id)arg2 txPower:(BOOL)arg3 GATTCapabilities:(id)arg4 callback:(CDUnknownBlockType)arg5 statusCallback:(CDUnknownBlockType)arg6;
- (void)checkBeaconSupportsGATTConfiguration:(id)arg1 passKey:(id)arg2 callback:(CDUnknownBlockType)arg3 statusCallback:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

