//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RCTEventEmitter.h"

#import "NativeWebSocketModuleSpec-Protocol.h"
#import "RCTSRWebSocketDelegate-Protocol.h"

@class NSMutableDictionary, NSObject, NSString, RCTBridge;
@protocol OS_dispatch_queue, RCTTurboModuleLookupDelegate;

@interface RCTWebSocketModule : RCTEventEmitter <RCTSRWebSocketDelegate, NativeWebSocketModuleSpec>
{
    NSMutableDictionary *_sockets;
    NSMutableDictionary *_contentHandlers;
}

+ (const struct RCTMethodInfo *)__rct_export__1224;
+ (const struct RCTMethodInfo *)__rct_export__1173;
+ (const struct RCTMethodInfo *)__rct_export__1072;
+ (const struct RCTMethodInfo *)__rct_export__1021;
+ (const struct RCTMethodInfo *)__rct_export__670;
+ (void)load;
+ (id)moduleName;
- (void).cxx_destruct;
- (shared_ptr_3725e3cd)getTurboModuleWithJsInvoker:(shared_ptr_cb283e74)arg1;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocketDidOpen:(id)arg1;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)setContentHandler:(id)arg1 forSocketID:(id)arg2;
- (void)close:(double)arg1 reason:(id)arg2 socketID:(double)arg3;
- (void)ping:(double)arg1;
- (void)sendData:(id)arg1 forSocketID:(id)arg2;
- (void)sendBinary:(id)arg1 forSocketID:(double)arg2;
- (void)send:(id)arg1 forSocketID:(double)arg2;
- (void)connect:(id)arg1 protocols:(id)arg2 options:(struct SpecConnectOptions *)arg3 socketID:(double)arg4;
- (void)invalidate;
- (id)supportedEvents;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;

// Remaining properties
@property(readonly, nonatomic) __weak RCTBridge *bridge;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) __weak id <RCTTurboModuleLookupDelegate> turboModuleLookupDelegate;

@end

