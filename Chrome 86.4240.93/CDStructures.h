//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class ASLayout, ELMValueEntitiesProcessor, GPBMessage, NSData, NSMutableArray, NSMutableIndexSet, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASDisplayNodeFlags {
    unsigned int viewEverHadAGestureRecognizerAttached:1;
    unsigned int layerBacked:1;
    unsigned int displaysAsynchronously:1;
    unsigned int rasterizesSubtree:1;
    unsigned int shouldBypassEnsureDisplay:1;
    unsigned int displaySuspended:1;
    unsigned int shouldAnimateSizeChanges:1;
    unsigned int canClearContentsOfLayer:1;
    unsigned int canCallSetNeedsDisplayOfLayer:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsImageDisplay:1;
    unsigned int implementsDrawParameters:1;
    unsigned int isEnteringHierarchy:1;
    unsigned int isExitingHierarchy:1;
    unsigned int isInHierarchy:1;
    unsigned int visibilityNotificationsDisabled:4;
    unsigned int isDeallocating:1;
    unsigned int yoga:1;
    unsigned int shouldSuppressYogaCustomMeasure:1;
    unsigned int yogaIsApplyingLayout:1;
    unsigned int yogaRequestedNestedLayout:1;
    unsigned int automaticallyManagesSubnodes:1;
    unsigned int placeholderEnabled:1;
    unsigned int viewFlattening:1;
    unsigned int haveCachedIsFlattenable:1;
    unsigned int cachedIsFlattenable:1;
    unsigned int isAccessibilityElement:1;
    unsigned int accessibilityElementsHidden:1;
    unsigned int accessibilityViewIsModal:1;
    unsigned int shouldGroupAccessibilityChildren:1;
    unsigned int isAccessibilityContainer:1;
    unsigned int fallbackInsetsLayoutMarginsFromSafeArea:1;
    unsigned int automaticallyRelayoutOnSafeAreaChanges:1;
    unsigned int automaticallyRelayoutOnLayoutMarginsChanges:1;
    unsigned int isViewControllerRoot:1;
    unsigned int hasHadInterfaceStateDelegates:1;
    unsigned int isDisappearing:1;
};

struct ASDisplayNodeLayout {
    ASLayout *layout;
    CDStruct_42a63532 constrainedSize;
    struct CGSize parentSize;
    _Bool requestedLayoutFromAbove;
    unsigned long long version;
};

struct ASLayoutElementStyleExtensions {
    _Bool boolExtensions[1];
    long long integerExtensions[4];
    struct UIEdgeInsets edgeInsetsExtensions[1];
};

struct ASPendingStateControllerFlags {
    unsigned int pendingFlush:1;
};

struct Arena;

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioBytePacketTranslation {
    long long _field1;
    long long _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioConverterPrimeInfo {
    unsigned int leadingFrames;
    unsigned int trailingFrames;
};

struct AudioFramePacketTranslation {
    long long _field1;
    long long _field2;
    unsigned int _field3;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription;

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct Bucket<id<ELMController>>;

struct ByteStore;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct ChallengeImpl;

struct ChangeSet {
    NSMutableIndexSet *inserted_sections;
    NSMutableIndexSet *deleted_sections;
    NSMutableIndexSet *reloaded_sections;
    NSMutableArray *inserted_items;
    NSMutableArray *deleted_items;
    NSMutableArray *reloaded_items;
};

struct ClientTemplateProvider {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
};

struct Collection<youtube::elements::Section<absl::optional<absl::optional<Item>>>, absl::optional<absl::optional<Item>>> {
    struct vector<youtube::elements::Section<absl::optional<absl::optional<Item>>>, std::__1::allocator<youtube::elements::Section<absl::optional<absl::optional<Item>>>>> sections;
};

struct CollectionPath {
    long long _field1;
    struct variant<long, youtube::elements::CollectionPath::SupplementaryKind> _field2;
    id _field3;
};

struct CommandProperties;

struct Component;

struct CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ELMComponent *(^)(ELMElement *, id<ELMContext>)>>> {
    unsigned long long value;
};

struct CompressedTuple<unsigned long, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ASDisplayNode<ELMDisplayNode>*(^)(ELMElement *, id<ELMContext>)>>> {
    unsigned long long value;
};

struct CompressedTuple<unsigned long, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, __unsafe_unretained Class<ELMDisplayNode>>>> {
    unsigned long long value;
};

struct CompressedTuple<unsigned long, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>>>>> {
    unsigned long long value;
};

struct ContainerImpl;

struct Context;

struct DecisionPoint;

struct DispatchFuture<LayoutFutureInput, id<ELMController>> {
    struct LayoutFutureInput _field1;
    CDUnknownBlockType _field2;
    _Bool _field3;
    struct shared_ptr<youtube::elements::util::Bucket<id<ELMController>>> _field4;
};

struct DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>;

struct Duration {
    long long rep_hi_;
    unsigned int rep_lo_;
};

struct ELMPGClientContext {
    NSString *name;
    NSString *version;
};

struct ELMPerformanceEvent {
    long long eventType;
    struct Time timestamp;
    int identifier;
    int asyncIdentifier;
    struct optional<int> parentIdentifier;
    struct PerformanceEventInfo info;
    struct _opaque_pthread_t *threadIdentifier;
    _Bool isMainThread;
};

struct EkoTemplateResolver {
    struct EkoTransformProvider *eko_provider_;
    struct LoggingDelegate *logging_delegate_;
};

struct EkoTransformProvider;

struct Element;

struct EnvironmentDataSource;

struct ErrorLogger;

struct ExpansionInfo {
    unsigned short _field1;
    id _field2;
    _Bool _field3;
    id _field4;
};

struct FaultSubscription;

struct GAKPacketData {
    unsigned int mNumberPackets;
    struct AudioStreamPacketDescription *mPacketDescriptions;
    struct AudioBufferList *mBufferList;
};

struct GFBArchivedFeedbackReportMetadata {
    unsigned int length;
    unsigned int version;
    long long timestamp;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    CDUnion_55fa2897 _field3;
    union {
        char *_field1;
        CDUnion_55fa2897 _field2;
    } _field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        Class _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GSKAudioSessionConfig {
    _Bool _field1;
    _Bool _field2;
};

struct GULReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct Group {
    CDUnknownFunctionPointerType *_field1;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::ByteStore>, std::__1::shared_ptr<youtube::elements::interfaces::ByteStore>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_f39844b7 m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::FaultSubscription>, std::__1::shared_ptr<youtube::elements::interfaces::FaultSubscription>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_358b91ed m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::JSController>, std::__1::shared_ptr<youtube::elements::interfaces::JSController>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a06a6304 m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::PerformanceLogger>, std::__1::shared_ptr<youtube::elements::interfaces::PerformanceLogger>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_84f65acb m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::Snapshot>, std::__1::shared_ptr<youtube::elements::interfaces::Snapshot>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b78a4074 m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::Subscription>, std::__1::shared_ptr<youtube::elements::interfaces::Subscription>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_302f3c10 m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::Transaction>, std::__1::shared_ptr<youtube::elements::interfaces::Transaction>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a532de41 m_obj;
};

struct Handle<std::__1::shared_ptr<youtube::elements::interfaces::TransactionRecord>, std::__1::shared_ptr<youtube::elements::interfaces::TransactionRecord>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_36024e43 m_obj;
};

struct HashtablezInfo;

struct HashtablezInfoHandle {
    struct HashtablezInfo *info_;
};

struct HistoryRing {
    struct DecisionPoint *_field1;
    int _field2;
    int _field3;
};

struct IGListSectionEntry;

struct Item {
    struct variant<std::__1::pair<NSData *, id<ELMContext>>, std::__1::shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>, ObjCStrong<id<ELMController>>> _field1;
    struct optional<youtube::elements::util::DispatchFuture<LayoutFutureInput, id<ELMController>>> _field2;
};

struct JSController;

struct JSFunctionProxy;

struct JavaScriptExecutor;

struct JsPerformanceEventInfo {
    long long identifier;
    int status_code;
    struct optional<std::__1::basic_string<char>> status_message;
};

struct JsonProxy {
    struct unique_ptr<youtube::elements::parts::store::Store, std::__1::default_delete<youtube::elements::parts::store::Store>> _field1;
    struct unique_ptr<youtube::javascript::Context, std::__1::default_delete<youtube::javascript::Context>> _field2;
    struct ValueScope _field3;
    struct Arena *_field4;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LayoutFutureInput {
    CDStruct_42a63532 _field1;
    struct variant<ObjCWeak<id<ELMController>>, std::__1::weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>> _field2;
};

struct LayoutWatchdog {
    struct function<void ()> fire_handler_;
    unsigned long long loop_iter_;
    int layouts_this_loop_;
    int limit_;
    _Bool fired_;
};

struct LockSet {
    unsigned long long _field1;
    struct array<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>, 16> _field2;
    struct vector<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>, std::__1::allocator<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>>> _field3;
};

struct LoggingDelegate;

struct LoggingNode;

struct MDCActivityIndicatorMotionSpecIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
    struct MDMMotionTiming _field3;
    struct MDMMotionTiming _field4;
};

struct MDCActivityIndicatorMotionSpecProgress {
    struct MDMMotionTiming _field1;
};

struct MDCActivityIndicatorMotionSpecTransitionToDeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDCActivityIndicatorMotionSpecTransitionToIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDMMotionCurve {
    unsigned long long _field1;
    double _field2[4];
};

struct MDMMotionRepetition {
    unsigned long long _field1;
    double _field2;
    _Bool _field3;
};

struct MDMMotionTiming {
    double _field1;
    double _field2;
    struct MDMMotionCurve _field3;
    struct MDMMotionRepetition _field4;
};

struct ManagerImpl;

struct MaterializationContext {
    id _field1;
    id _field2;
};

struct Mutex;

struct NodeCallback;

struct ObjCStrong<id<ELMController>> {
    id _field1;
};

struct ObjCWeak<id<ELMController>> {
    id _field1;
};

struct PerformanceEventInfo {
    struct optional<std::__1::basic_string<char>> template_uri;
    struct optional<std::__1::basic_string<char>> node_identifier;
    struct optional<int> materialization_count;
    struct optional<int> measurement_count;
    struct optional<long long> command_extension_id;
    struct optional<youtube::elements::interfaces::JsPerformanceEventInfo> js_performance_event_info;
};

struct PerformanceLogger;

struct Pimpl;

struct RecursiveMutex;

struct RepeatedField<float> {
    int _field1;
    int _field2;
    void *_field3;
};

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SRLMemoizingScopeIvars;

struct SRLRegistryIvars;

struct SRLScopeTagSet {
    void *_field1[4];
};

struct SRLUnfairLock {
    union {
        struct os_unfair_lock_s _field1;
        struct _opaque_pthread_mutex_t _field2;
    } _field1;
};

struct Section<absl::optional<absl::optional<Item>>>;

struct Snapshot;

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct SpeexMode {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    char *_field3;
    int _field4;
    int _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
};

struct Status {
    unsigned long long _field1;
};

struct Store;

struct Subscription;

struct TemplateResolver;

struct Time {
    struct Duration rep_;
};

struct Transaction;

struct TransactionRecord;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UnitBezier {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct ValueEntitiesObserver {
    CDUnknownFunctionPointerType *_vptr$Observer;
    ELMValueEntitiesProcessor *delegate;
};

struct ValueScope {
    struct unique_ptr<youtube::javascript::ValueScopeInternal, std::__1::default_delete<youtube::javascript::ValueScopeInternal>> _field1;
};

struct ValueScopeInternal;

struct WebPData {
    char *bytes;
    unsigned long long size;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct _ASDisplayViewInternalFlags {
    unsigned int inHitTest:1;
    unsigned int inPointInside:1;
    unsigned int inCanBecomeFirstResponder:1;
    unsigned int inBecomeFirstResponder:1;
    unsigned int inCanResignFirstResponder:1;
    unsigned int inResignFirstResponder:1;
    unsigned int inIsFirstResponder:1;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _SRLAPIRegistrationData {
    char *_field1;
    union SRLAPIInstanceType _field2;
    unsigned short _field3;
    unsigned char _field4;
    unsigned int :1;
    unsigned int :1;
};

struct _SRLBindingRegistrationData {
    struct _SRLAPIRegistrationData *_field1;
    struct _SRLImplementationRegistrationData **_field2;
};

struct _SRLBindingsRegistrationData;

struct _SRLImplementationRegistrationData {
    union SRLImplementationInstanceType _field1;
    union SRLImplementationInstanceType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned char _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct any {
    CDUnknownFunctionPointerType __h;
    union _Storage __s;
};

struct array<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>, 16> {
    struct pair<id, std::__1::unique_lock<AS::Mutex>> _field1[16];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct deque<std::__1::tuple<CGSize, ASTextLayout *>, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> {
    struct __split_buffer<std::__1::tuple<CGSize, ASTextLayout *>*, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>*>> {
        struct tuple<CGSize, ASTextLayout *> **__first_;
        struct tuple<CGSize, ASTextLayout *> **__begin_;
        struct tuple<CGSize, ASTextLayout *> **__end_;
        struct __compressed_pair<std::__1::tuple<CGSize, ASTextLayout *>**, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>*>> {
            struct tuple<CGSize, ASTextLayout *> **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> {
        unsigned long long __value_;
    } __size_;
};

struct dummy_type {
    struct empty_struct data[1];
};

struct empty_struct;

struct flat_hash_map<int, ASDisplayNode<ELMDisplayNode>*(^)(ELMElement *, id<ELMContext>), absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ASDisplayNode<ELMDisplayNode>*(^)(ELMElement *, id<ELMContext>)>>> {
    char *ctrl_;
    union map_slot_type<int, ASDisplayNode<ELMDisplayNode>*(^)(ELMElement *, id<ELMContext>)> *slots_;
    unsigned long long size_;
    unsigned long long capacity_;
    struct HashtablezInfoHandle infoz_;
    struct CompressedTuple<unsigned long, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ASDisplayNode<ELMDisplayNode>*(^)(ELMElement *, id<ELMContext>)>>> settings_;
};

struct flat_hash_map<int, __unsafe_unretained Class<ELMDisplayNode>, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, __unsafe_unretained Class<ELMDisplayNode>>>> {
    char *ctrl_;
    union map_slot_type<int, __unsafe_unretained Class<ELMDisplayNode>> *slots_;
    unsigned long long size_;
    unsigned long long capacity_;
    struct HashtablezInfoHandle infoz_;
    struct CompressedTuple<unsigned long, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, __unsafe_unretained Class<ELMDisplayNode>>>> settings_;
};

struct flat_hash_map<int, std::__1::vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>>, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>>>>> {
    char *ctrl_;
    union map_slot_type<int, std::__1::vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>>> *slots_;
    unsigned long long size_;
    unsigned long long capacity_;
    struct HashtablezInfoHandle infoz_;
    struct CompressedTuple<unsigned long, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>>>>> settings_;
};

struct flat_hash_map<std::__1::basic_string<char>, ELMComponent *(^)(ELMElement *, id<ELMContext>), absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ELMComponent *(^)(ELMElement *, id<ELMContext>)>>> {
    char *ctrl_;
    union map_slot_type<std::__1::basic_string<char>, ELMComponent *(^)(ELMElement *, id<ELMContext>)> *slots_;
    unsigned long long size_;
    unsigned long long capacity_;
    struct HashtablezInfoHandle infoz_;
    struct CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ELMComponent *(^)(ELMElement *, id<ELMContext>)>>> settings_;
};

struct function<void ()> {
    struct __value_func<void ()> {
        struct type __buf_;
        struct __base<void ()> *__f_;
    } __f_;
};

struct grpc_byte_buffer {
    void *_field1;
    int _field2;
    union grpc_byte_buffer_data _field3;
};

struct grpc_compressed_buffer {
    int _field1;
    struct grpc_slice_buffer _field2;
};

struct grpc_metadata {
    struct grpc_slice _field1;
    struct grpc_slice _field2;
    unsigned int _field3;
    struct {
        void *_field1[4];
    } _field4;
};

struct grpc_op {
    int op;
    unsigned int flags;
    void *reserved;
    union grpc_op_data data;
};

struct grpc_op_recv_close_on_server {
    int *cancelled;
};

struct grpc_op_recv_initial_metadata {
    CDStruct_183601bc *recv_initial_metadata;
};

struct grpc_op_recv_message {
    struct grpc_byte_buffer **recv_message;
};

struct grpc_op_recv_status_on_client {
    CDStruct_183601bc *trailing_metadata;
    int *status;
    struct grpc_slice *status_details;
    char **error_string;
};

struct grpc_op_send_initial_metadata {
    unsigned long long count;
    struct grpc_metadata *metadata;
    struct grpc_op_send_initial_metadata_maybe_compression_level maybe_compression_level;
};

struct grpc_op_send_initial_metadata_maybe_compression_level {
    unsigned char is_set;
    int level;
};

struct grpc_op_send_message {
    struct grpc_byte_buffer *send_message;
};

struct grpc_op_send_status_from_server {
    unsigned long long trailing_metadata_count;
    struct grpc_metadata *trailing_metadata;
    int status;
    struct grpc_slice *status_details;
};

struct grpc_slice {
    struct grpc_slice_refcount *refcount;
    union grpc_slice_data data;
};

struct grpc_slice_buffer {
    struct grpc_slice *_field1;
    struct grpc_slice *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct grpc_slice _field6[8];
};

struct grpc_slice_inlined {
    unsigned char length;
    unsigned char bytes[23];
};

struct grpc_slice_refcount;

struct grpc_slice_refcounted {
    unsigned long long length;
    char *bytes;
};

struct map<google_audio_kit::EpStatus, long long, std::__1::less<google_audio_kit::EpStatus>, std::__1::allocator<std::__1::pair<const google_audio_kit::EpStatus, long long>>> {
    struct __tree<std::__1::__value_type<google_audio_kit::EpStatus, long long>, std::__1::__map_value_compare<google_audio_kit::EpStatus, std::__1::__value_type<google_audio_kit::EpStatus, long long>, std::__1::less<google_audio_kit::EpStatus>, true>, std::__1::allocator<std::__1::__value_type<google_audio_kit::EpStatus, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<google_audio_kit::EpStatus, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<google_audio_kit::EpStatus, std::__1::__value_type<google_audio_kit::EpStatus, long long>, std::__1::less<google_audio_kit::EpStatus>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<speech::EpStatus, long long, std::__1::less<speech::EpStatus>, std::__1::allocator<std::__1::pair<const speech::EpStatus, long long>>> {
    struct __tree<std::__1::__value_type<speech::EpStatus, long long>, std::__1::__map_value_compare<speech::EpStatus, std::__1::__value_type<speech::EpStatus, long long>, std::__1::less<speech::EpStatus>, true>, std::__1::allocator<std::__1::__value_type<speech::EpStatus, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<speech::EpStatus, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<speech::EpStatus, std::__1::__value_type<speech::EpStatus, long long>, std::__1::less<speech::EpStatus>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct objc_metadata_hider_ptr<const _SRLBindingsRegistrationData> {
    struct _SRLBindingsRegistrationData *_field1;
};

struct optional<Item> {
    _Bool _field1;
    union {
        struct Item _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<bool> {
    _Bool engaged_;
    union {
        _Bool data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<int> {
    _Bool engaged_;
    union {
        int data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<long long> {
    _Bool engaged_;
    union {
        long long data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<std::__1::basic_string<char>> {
    _Bool engaged_;
    union {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<std::__1::unique_ptr<youtube::elements::parts::store::JsonProxy, std::__1::default_delete<youtube::elements::parts::store::JsonProxy>>> {
    _Bool engaged_;
    union {
        struct unique_ptr<youtube::elements::parts::store::JsonProxy, std::__1::default_delete<youtube::elements::parts::store::JsonProxy>> data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<youtube::elements::interfaces::JsPerformanceEventInfo> {
    _Bool engaged_;
    union {
        struct JsPerformanceEventInfo data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<youtube::elements::templates::EkoTemplateResolver> {
    _Bool engaged_;
    union {
        struct EkoTemplateResolver data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<youtube::elements::util::DispatchFuture<LayoutFutureInput, id<ELMController>>> {
    _Bool _field1;
    union {
        struct DispatchFuture<LayoutFutureInput, id<ELMController>> _field1;
        struct dummy_type _field2;
    } _field2;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<ASDisplayNode *, unsigned long>;

struct pair<NSData *, id<ELMContext>> {
    id _field1;
    id _field2;
};

struct pair<id, std::__1::unique_lock<AS::Mutex>> {
    id _field1;
    struct unique_lock<AS::Mutex> _field2;
};

struct pair<youtube::elements::CollectionPath, CGRect>;

struct shared_ptr<AS::RecursiveMutex> {
    struct RecursiveMutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const proto2::Arena> {
    struct Arena *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const youtube::elements::CommandProperties> {
    struct CommandProperties *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const youtube::elements::Element> {
    struct Element *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> {
    struct Pimpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<iosguard::ErrorLogger> {
    struct ErrorLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<iosguard::JSFunctionProxy> {
    struct JSFunctionProxy *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<iosguard::JavaScriptExecutor> {
    struct JavaScriptExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<proto2::Arena> {
    struct Arena *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::ByteStore> {
    struct ByteStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::Component> {
    struct Component *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::FaultSubscription> {
    struct FaultSubscription *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::JSController> {
    struct JSController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::PerformanceLogger> {
    struct PerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::Snapshot> {
    struct Snapshot *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::Subscription> {
    struct Subscription *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::Transaction> {
    struct Transaction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::interfaces::TransactionRecord> {
    struct TransactionRecord *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::ios::EnvironmentDataSource> {
    struct EnvironmentDataSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::templates::TemplateResolver> {
    struct TemplateResolver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<youtube::elements::util::Bucket<id<ELMController>>> {
    struct Bucket<id<ELMController>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>> {
    struct DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>> *_field1;
    struct __shared_weak_count *_field2;
};

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct string_view {
    char *_field1;
    unsigned long long _field2;
};

struct timespec {
    long long tv_sec;
    long long tv_nsec;
};

struct tuple<CGSize, ASTextLayout *>;

struct type {
    unsigned char __lx[24];
};

struct unique_lock<AS::Mutex> {
    struct Mutex *_field1;
    _Bool _field2;
};

struct unique_ptr<SRLMemoizingScopeIvars, std::__1::default_delete<SRLMemoizingScopeIvars>> {
    struct __compressed_pair<SRLMemoizingScopeIvars *, std::__1::default_delete<SRLMemoizingScopeIvars>> {
        struct SRLMemoizingScopeIvars *__value_;
    } __ptr_;
};

struct unique_ptr<SRLRegistryIvars, std::__1::default_delete<SRLRegistryIvars>> {
    struct __compressed_pair<SRLRegistryIvars *, std::__1::default_delete<SRLRegistryIvars>> {
        struct SRLRegistryIvars *__value_;
    } __ptr_;
};

struct unique_ptr<iosguard::ChallengeImpl, std::__1::default_delete<iosguard::ChallengeImpl>> {
    struct __compressed_pair<iosguard::ChallengeImpl *, std::__1::default_delete<iosguard::ChallengeImpl>> {
        struct ChallengeImpl *__value_;
    } __ptr_;
};

struct unique_ptr<iosguard::ContainerImpl, std::__1::default_delete<iosguard::ContainerImpl>> {
    struct __compressed_pair<iosguard::ContainerImpl *, std::__1::default_delete<iosguard::ContainerImpl>> {
        struct ContainerImpl *__value_;
    } __ptr_;
};

struct unique_ptr<iosguard::ManagerImpl, std::__1::default_delete<iosguard::ManagerImpl>> {
    struct __compressed_pair<iosguard::ManagerImpl *, std::__1::default_delete<iosguard::ManagerImpl>> {
        struct ManagerImpl *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<youtube::elements::parts::store::JsonProxy, std::__1::default_delete<youtube::elements::parts::store::JsonProxy>> {
    struct __compressed_pair<youtube::elements::parts::store::JsonProxy *, std::__1::default_delete<youtube::elements::parts::store::JsonProxy>> {
        struct JsonProxy *__value_;
    } __ptr_;
};

struct unique_ptr<youtube::elements::parts::store::Store, std::__1::default_delete<youtube::elements::parts::store::Store>> {
    struct __compressed_pair<youtube::elements::parts::store::Store *, std::__1::default_delete<youtube::elements::parts::store::Store>> {
        struct Store *__value_;
    } __ptr_;
};

struct unique_ptr<youtube::javascript::Context, std::__1::default_delete<youtube::javascript::Context>> {
    struct __compressed_pair<youtube::javascript::Context *, std::__1::default_delete<youtube::javascript::Context>> {
        struct Context *_field1;
    } _field1;
};

struct unique_ptr<youtube::javascript::ValueScopeInternal, std::__1::default_delete<youtube::javascript::ValueScopeInternal>> {
    struct __compressed_pair<youtube::javascript::ValueScopeInternal *, std::__1::default_delete<youtube::javascript::ValueScopeInternal>> {
        struct ValueScopeInternal *_field1;
    } _field1;
};

struct unordered_map<int, ELMHandlerWrapper *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ELMHandlerWrapper *>>> {
    struct __hash_table<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ELMHandlerWrapper *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ELMHandlerWrapper *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, ELMHandlerWrapper *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ELMHandlerWrapper *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ELMHandlerWrapper *>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ELMHandlerWrapper *>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, id<ELMImageProcessor>(^)(NSData *), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id<ELMImageProcessor>(^)(NSData *)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id<ELMImageProcessor>(^)(NSData *)>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, void (^)(NSData *, NSMutableAttributedString *), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, void (^)(NSData *, NSMutableAttributedString *)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, void (^)(NSData *, NSMutableAttributedString *)>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, void (^)(NSData *, id<ELMController>, id<ELMContext>), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, void (^)(NSData *, id<ELMController>, id<ELMContext>)>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, long>>> {
    struct __hash_table<std::__1::__hash_value_type<long, long>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct variant<ObjCWeak<id<ELMController>>, std::__1::weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>> {
    union DestructibleUnionImpl<ObjCWeak<id<ELMController>>, std::__1::weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>> _field1;
    unsigned long long _field2;
};

struct variant<long, youtube::elements::CollectionPath::SupplementaryKind> {
    union Union<long, youtube::elements::CollectionPath::SupplementaryKind> _field1;
    unsigned long long _field2;
};

struct variant<std::__1::pair<NSData *, id<ELMContext>>, std::__1::shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>, ObjCStrong<id<ELMController>>> {
    union DestructibleUnionImpl<std::__1::pair<NSData *, id<ELMContext>>, std::__1::shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>, ObjCStrong<id<ELMController>>> _field1;
    unsigned long long _field2;
};

struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>;

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__value_;
    } __end_cap_;
};

struct vector<NSIndexPath *, std::__1::allocator<NSIndexPath *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<NSIndexPath *__strong *, std::__1::allocator<NSIndexPath *>> {
        id *_field1;
    } _field3;
};

struct vector<NodeCallback, std::__1::allocator<NodeCallback>> {
    struct NodeCallback *__begin_;
    struct NodeCallback *__end_;
    struct __compressed_pair<NodeCallback *, std::__1::allocator<NodeCallback>> {
        struct NodeCallback *__value_;
    } __end_cap_;
};

struct vector<_ASHierarchyChangeSet *, std::__1::allocator<_ASHierarchyChangeSet *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<_ASHierarchyChangeSet *__strong *, std::__1::allocator<_ASHierarchyChangeSet *>> {
        id *_field1;
    } _field3;
};

struct vector<const void *, std::__1::allocator<const void *>> {
    void **__begin_;
    void **__end_;
    struct __compressed_pair<const void **, std::__1::allocator<const void *>> {
        void **__value_;
    } __end_cap_;
};

struct vector<id<ASCATransactionQueueObserving>, std::__1::allocator<id<ASCATransactionQueueObserving>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__strong id<ASCATransactionQueueObserving>*, std::__1::allocator<id<ASCATransactionQueueObserving>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<id<ELMController>, std::__1::allocator<id<ELMController>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__strong id<ELMController>*, std::__1::allocator<id<ELMController>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__begin_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<ASDisplayNode *, unsigned long>, std::__1::allocator<std::__1::pair<ASDisplayNode *, unsigned long>>> {
    struct pair<ASDisplayNode *, unsigned long> *__begin_;
    struct pair<ASDisplayNode *, unsigned long> *__end_;
    struct __compressed_pair<std::__1::pair<ASDisplayNode *, unsigned long>*, std::__1::allocator<std::__1::pair<ASDisplayNode *, unsigned long>>> {
        struct pair<ASDisplayNode *, unsigned long> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>, std::__1::allocator<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>>> {
    struct pair<id, std::__1::unique_lock<AS::Mutex>> *_field1;
    struct pair<id, std::__1::unique_lock<AS::Mutex>> *_field2;
    struct __compressed_pair<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>*, std::__1::allocator<std::__1::pair<id, std::__1::unique_lock<AS::Mutex>>>> {
        struct pair<id, std::__1::unique_lock<AS::Mutex>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<youtube::elements::CollectionPath, CGRect>, std::__1::allocator<std::__1::pair<youtube::elements::CollectionPath, CGRect>>> {
    struct pair<youtube::elements::CollectionPath, CGRect> *_field1;
    struct pair<youtube::elements::CollectionPath, CGRect> *_field2;
    struct __compressed_pair<std::__1::pair<youtube::elements::CollectionPath, CGRect>*, std::__1::allocator<std::__1::pair<youtube::elements::CollectionPath, CGRect>>> {
        struct pair<youtube::elements::CollectionPath, CGRect> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<iosguard::JSFunctionProxy>, std::__1::allocator<std::__1::shared_ptr<iosguard::JSFunctionProxy>>> {
    shared_ptr_7919607d *__begin_;
    shared_ptr_7919607d *__end_;
    struct __compressed_pair<std::__1::shared_ptr<iosguard::JSFunctionProxy>*, std::__1::allocator<std::__1::shared_ptr<iosguard::JSFunctionProxy>>> {
        shared_ptr_7919607d *__value_;
    } __end_cap_;
};

struct vector<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__begin_;
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
        struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<void (^)(__kindof ASDisplayNode *), std::__1::allocator<void (^)(__kindof ASDisplayNode *)>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(__kindof ASDisplayNode *), std::__1::allocator<void (^)(__kindof ASDisplayNode *)>> {
        CDUnknownBlockType *__value_;
    } __end_cap_;
};

struct vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>> {
    struct ELMPerformanceEvent *__begin_;
    struct ELMPerformanceEvent *__end_;
    struct __compressed_pair<youtube::elements::ELMPerformanceEvent *, std::__1::allocator<youtube::elements::ELMPerformanceEvent>> {
        struct ELMPerformanceEvent *__value_;
    } __end_cap_;
};

struct vector<youtube::elements::LoggingNode, std::__1::allocator<youtube::elements::LoggingNode>> {
    struct LoggingNode *_field1;
    struct LoggingNode *_field2;
    struct __compressed_pair<youtube::elements::LoggingNode *, std::__1::allocator<youtube::elements::LoggingNode>> {
        struct LoggingNode *_field1;
    } _field3;
};

struct vector<youtube::elements::Section<absl::optional<absl::optional<Item>>>, std::__1::allocator<youtube::elements::Section<absl::optional<absl::optional<Item>>>>> {
    struct Section<absl::optional<absl::optional<Item>>> *__begin_;
    struct Section<absl::optional<absl::optional<Item>>> *__end_;
    struct __compressed_pair<youtube::elements::Section<absl::optional<absl::optional<Item>>>*, std::__1::allocator<youtube::elements::Section<absl::optional<absl::optional<Item>>>>> {
        struct Section<absl::optional<absl::optional<Item>>> *__value_;
    } __end_cap_;
};

struct weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>> {
    struct DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>> *_field1;
    struct __shared_weak_count *_field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    _Bool _field1;
} CDStruct_b31ca263;

typedef struct {
    unsigned long long state;
    id *itemsPtr;
    unsigned long long *mutationsPtr;
    unsigned long long extra[5];
} CDStruct_58648341;

typedef struct {
    void *reserved[8];
} CDStruct_d7a492ad;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    double _field1;
    double _field2;
    double _field3[4];
} CDStruct_b1bacac9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    long long _field2;
    double _field3;
    long long _field4;
} CDStruct_264a827c;

typedef struct {
    long long _field1;
    double _field2;
} CDStruct_7f320dbc;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned long long count;
    unsigned long long capacity;
    struct grpc_metadata *metadata;
} CDStruct_6f820e53;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned int _field2;
} CDStruct_7ec0515b;

typedef struct {
    long long horizontalSizeClass;
    long long verticalSizeClass;
    double displayScale;
    long long displayGamut;
    long long userInterfaceIdiom;
    long long forceTouchCapability;
    long long layoutDirection;
    long long userInterfaceStyle;
    NSString *preferredContentSizeCategory;
    struct CGSize containerSize;
} CDStruct_104667ad;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
    CDStruct_7f320dbc _field3;
    CDStruct_7f320dbc _field4;
    CDStruct_7f320dbc _field5;
    CDStruct_7f320dbc _field6;
    CDStruct_7f320dbc _field7;
    CDStruct_7f320dbc _field8;
    CDStruct_7f320dbc _field9;
} CDStruct_5e071070;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
    CDStruct_7f320dbc _field3;
    CDStruct_7f320dbc _field4;
    CDStruct_7f320dbc _field5;
    CDStruct_7f320dbc _field6;
} CDStruct_99d2e400;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
} CDStruct_69654f45;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct CGSize min;
    struct CGSize max;
} CDStruct_42a63532;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double leadingBufferScreenfuls;
    double trailingBufferScreenfuls;
} CDStruct_3a510305;

typedef struct RepeatedField<float> {
    int _field1;
    int _field2;
    void *_field3;
} RepeatedField_0cba3201;

typedef struct objc_metadata_hider_ptr<const _SRLBindingsRegistrationData> {
    struct _SRLBindingsRegistrationData *_field1;
} objc_metadata_hider_ptr_8b19f256;

typedef struct optional<Item> {
    _Bool _field1;
    union {
        struct Item _field1;
        struct dummy_type _field2;
    } _field2;
} optional_1af526cc;

typedef struct optional<bool> {
    _Bool engaged_;
    union {
        _Bool data_;
        struct dummy_type dummy_;
    } ;
} optional_72b31eb1;

typedef struct shared_ptr<const youtube::elements::CommandProperties> {
    struct CommandProperties *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e501e35;

typedef struct shared_ptr<iosguard::ErrorLogger> {
    struct ErrorLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e3a252de;

typedef struct shared_ptr<iosguard::JSFunctionProxy> {
    struct JSFunctionProxy *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7919607d;

typedef struct shared_ptr<iosguard::JavaScriptExecutor> {
    struct JavaScriptExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_cb29a6c0;

typedef struct shared_ptr<youtube::elements::interfaces::ByteStore> {
    struct ByteStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f39844b7;

typedef struct shared_ptr<youtube::elements::interfaces::FaultSubscription> {
    struct FaultSubscription *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_358b91ed;

typedef struct shared_ptr<youtube::elements::interfaces::JSController> {
    struct JSController *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a06a6304;

typedef struct shared_ptr<youtube::elements::interfaces::PerformanceLogger> {
    struct PerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_84f65acb;

typedef struct shared_ptr<youtube::elements::interfaces::Snapshot> {
    struct Snapshot *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b78a4074;

typedef struct shared_ptr<youtube::elements::interfaces::Subscription> {
    struct Subscription *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_302f3c10;

typedef struct shared_ptr<youtube::elements::interfaces::Transaction> {
    struct Transaction *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a532de41;

typedef struct shared_ptr<youtube::elements::interfaces::TransactionRecord> {
    struct TransactionRecord *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_36024e43;

typedef struct shared_ptr<youtube::elements::templates::TemplateResolver> {
    struct TemplateResolver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7a0e5b96;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct vector<NSIndexPath *, std::__1::allocator<NSIndexPath *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<NSIndexPath *__strong *, std::__1::allocator<NSIndexPath *>> {
        id *_field1;
    } _field3;
} vector_0f9f632f;

typedef struct vector<_ASHierarchyChangeSet *, std::__1::allocator<_ASHierarchyChangeSet *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<_ASHierarchyChangeSet *__strong *, std::__1::allocator<_ASHierarchyChangeSet *>> {
        id *_field1;
    } _field3;
} vector_fbd8023d;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
} vector_afed86a5;

typedef struct vector<std::__1::pair<youtube::elements::CollectionPath, CGRect>, std::__1::allocator<std::__1::pair<youtube::elements::CollectionPath, CGRect>>> {
    struct pair<youtube::elements::CollectionPath, CGRect> *_field1;
    struct pair<youtube::elements::CollectionPath, CGRect> *_field2;
    struct __compressed_pair<std::__1::pair<youtube::elements::CollectionPath, CGRect>*, std::__1::allocator<std::__1::pair<youtube::elements::CollectionPath, CGRect>>> {
        struct pair<youtube::elements::CollectionPath, CGRect> *_field1;
    } _field3;
} vector_b8106f4e;

typedef struct vector<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__begin_;
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
        struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__value_;
    } __end_cap_;
} vector_0253d28f;

typedef struct vector<youtube::elements::LoggingNode, std::__1::allocator<youtube::elements::LoggingNode>> {
    struct LoggingNode *_field1;
    struct LoggingNode *_field2;
    struct __compressed_pair<youtube::elements::LoggingNode *, std::__1::allocator<youtube::elements::LoggingNode>> {
        struct LoggingNode *_field1;
    } _field3;
} vector_5bdbe5fb;

#pragma mark Named Unions

union DestructibleUnionImpl<>;

union DestructibleUnionImpl<ObjCStrong<id<ELMController>>> {
    struct ObjCStrong<id<ELMController>> _field1;
    union DestructibleUnionImpl<> _field2;
};

union DestructibleUnionImpl<ObjCWeak<id<ELMController>>, std::__1::weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>> {
    struct ObjCWeak<id<ELMController>> _field1;
    union DestructibleUnionImpl<std::__1::weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>> _field2;
};

union DestructibleUnionImpl<std::__1::pair<NSData *, id<ELMContext>>, std::__1::shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>, ObjCStrong<id<ELMController>>> {
    struct pair<NSData *, id<ELMContext>> _field1;
    union DestructibleUnionImpl<std::__1::shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>, ObjCStrong<id<ELMController>>> _field2;
};

union DestructibleUnionImpl<std::__1::shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>, ObjCStrong<id<ELMController>>> {
    struct shared_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>> _field1;
    union DestructibleUnionImpl<ObjCStrong<id<ELMController>>> _field2;
};

union DestructibleUnionImpl<std::__1::weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>>> {
    struct weak_ptr<youtube::elements::util::DispatchFuture<std::__1::pair<NSData *, id<ELMContext>>, id<ELMController>>> _field1;
    union DestructibleUnionImpl<> _field2;
};

union SRLAPIInstanceType {
    struct {
        char *_field1;
        char *_field2;
    } _field1;
    CDUnknownFunctionPointerType _field2;
};

union SRLImplementationInstanceType {
    char *_field1;
    CDUnknownFunctionPointerType _field2;
};

union Union<>;

union Union<long, youtube::elements::CollectionPath::SupplementaryKind> {
    long long _field1;
    union Union<youtube::elements::CollectionPath::SupplementaryKind> _field2;
};

union Union<youtube::elements::CollectionPath::SupplementaryKind> {
    int _field1;
    union Union<> _field2;
};

union _CCTLock {
    struct _opaque_pthread_mutex_t mutex_lock;
    struct os_unfair_lock_s unfair_lock;
};

union _Storage {
    void *__ptr;
    struct type __buf;
};

union grpc_byte_buffer_data {
    CDStruct_d7a492ad _field1;
    struct grpc_compressed_buffer _field2;
};

union grpc_op_data {
    CDStruct_d7a492ad reserved;
    struct grpc_op_send_initial_metadata send_initial_metadata;
    struct grpc_op_send_message send_message;
    struct grpc_op_send_status_from_server send_status_from_server;
    struct grpc_op_recv_initial_metadata recv_initial_metadata;
    struct grpc_op_recv_message recv_message;
    struct grpc_op_recv_status_on_client recv_status_on_client;
    struct grpc_op_recv_close_on_server recv_close_on_server;
};

union grpc_slice_data {
    struct grpc_slice_refcounted refcounted;
    struct grpc_slice_inlined inlined;
};

union map_slot_type<int, ASDisplayNode<ELMDisplayNode>*(^)(ELMElement *, id<ELMContext>)>;

union map_slot_type<int, __unsafe_unretained Class<ELMDisplayNode>>;

union map_slot_type<int, std::__1::vector<youtube::elements::ELMPerformanceEvent, std::__1::allocator<youtube::elements::ELMPerformanceEvent>>>;

union map_slot_type<std::__1::basic_string<char>, ELMComponent *(^)(ELMElement *, id<ELMContext>)>;

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

typedef union {
    char *_field1;
    Class _field2;
} CDUnion_55fa2897;

