//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <ChromeInternal/ASControlNode.h>

#import <ChromeInternal/ELMDisplayNode-Protocol.h>

@class ASTextNode, ELMElement, ELMNodeController, ELMTextNode, NSString;
@protocol ELMContext, ELMController;

@interface ELMExpandableTextNodeCanary : ASControlNode <ELMDisplayNode>
{
    id <ELMContext> _context;
    // Error parsing type: r^{ExpandableTextType=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}^{MessageLite}IBfiB}, name: _type
    ASTextNode *_indicatorNode;
    ELMNodeController *_textNodeController;
    ELMTextNode *_textNode;
    struct UIEdgeInsets _externallySetHitTestSlop;
    struct LayoutWatchdog _layoutWatchdog;
    struct {
        unsigned int expanded:1;
        unsigned int truncated:1;
        unsigned int indicatorTextIsValid:1;
        unsigned int textNodeIsValid:1;
    } _expandableTextFlags;
    ELMElement *_element;
}

+ (_Bool)canBeLayerBacked:(id)arg1 withContext:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain) ELMElement *element; // @synthesize element=_element;
- (void)controllerDidApplyProperties;
- (_Bool)managesGestureHandling;
- (id)indicatorNode;
- (id)currentTextNode;
- (void)handleTap;
- (void)locked_update;
- (void)subnodeDisplayDidFinish:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)calculatedLayoutDidChange;
- (void)setHitTestSlop:(struct UIEdgeInsets)arg1;
- (id)initWithElement:(id)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) id <ELMController> nodeController; // @dynamic nodeController;
@property(readonly) Class superclass;

@end

