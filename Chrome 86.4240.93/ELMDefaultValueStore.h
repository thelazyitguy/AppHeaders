//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ChromeInternal/ELMValueStore-Protocol.h>

@class NSString;

@interface ELMDefaultValueStore : NSObject <ELMValueStore>
{
    // Error parsing type: {Arena="impl_"{ArenaImpl="threads_"{atomic<proto2::internal::ArenaImpl::SerialArena *>="__a_"{__cxx_atomic_impl<proto2::internal::ArenaImpl::SerialArena *, std::__1::__cxx_atomic_base_impl<proto2::internal::ArenaImpl::SerialArena *> >="__a_value"A^{SerialArena}}}"hint_"{atomic<proto2::internal::ArenaImpl::SerialArena *>="__a_"{__cxx_atomic_impl<proto2::internal::ArenaImpl::SerialArena *, std::__1::__cxx_atomic_base_impl<proto2::internal::ArenaImpl::SerialArena *> >="__a_value"A^{SerialArena}}}"space_allocated_"{atomic<unsigned long>="__a_"{__cxx_atomic_impl<unsigned long, std::__1::__cxx_atomic_base_impl<unsigned long> >="__a_value"AQ}}"initial_block_"^{Block}"lifecycle_id_"q"options_"{Options="start_block_size"Q"max_block_size"Q"initial_block"*"initial_block_size"Q"block_alloc"^?"block_dealloc"^?}}"on_arena_allocation_"^?"on_arena_reset_"^?"on_arena_destruction_"^?"hooks_cookie_"^v}, name: _arena
    struct optional<std::__1::unique_ptr<youtube::elements::parts::store::JsonProxy, std::__1::default_delete<youtube::elements::parts::store::JsonProxy>>> _instance;
    struct unique_ptr<youtube::elements::parts::store::Store, std::__1::default_delete<youtube::elements::parts::store::Store>> _store;
    // Error parsing type: {Mutex="mu_"{atomic<long>="__a_"{__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >="__a_value"Aq}}}, name: _lock
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct JsonProxy *)jsonProxy;
-     // Error parsing type: ^{Store=^{Arena}^{Value}{KeyPathNode={flat_hash_map<absl::string_view, youtube::elements::parts::store::KeyPathNode *, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, youtube::eko::ArenaAllocator<std::__1::pair<const absl::string_view, youtube::elements::parts::store::KeyPathNode *> > >=*^(map_slot_type<absl::string_view, youtube::elements::parts::store::KeyPathNode *>)QQ{HashtablezInfoHandle=^{HashtablezInfo}}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, youtube::eko::ArenaAllocator<std::__1::pair<const absl::string_view, youtube::elements::parts::store::KeyPathNode *> > >=Q{ArenaAllocator<std::__1::pair<const absl::string_view, youtube::elements::parts::store::KeyPathNode *> >=^{Arena}}}}{set<youtube::elements::parts::store::Observer *, std::__1::less<youtube::elements::parts::store::Observer *>, std::__1::allocator<youtube::elements::parts::store::Observer *> >={__tree<youtube::elements::parts::store::Observer *, std::__1::less<youtube::elements::parts::store::Observer *>, std::__1::allocator<youtube::elements::parts::store::Observer *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<youtube::elements::parts::store::Observer *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<youtube::elements::parts::store::Observer *> >=Q}}}}{Mutex={atomic<long>={__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >=Aq}}}}16@0:8, name: store
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

