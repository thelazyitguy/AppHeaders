//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ChromeInternal/NSCopying-Protocol.h>
#import <ChromeInternal/UIAccessibilityIdentification-Protocol.h>

@class MDCSnackbarMessageAction, NSAttributedString, NSError, NSString, UIColor, UIView;
@protocol OS_dispatch_queue;

@interface MDCSnackbarMessage : NSObject <NSCopying, UIAccessibilityIdentification>
{
    _Bool _enableRippleBehavior;
    _Bool _focusOnShow;
    _Bool _automaticallyDismisses;
    _Bool _shouldDismissOnOverlayTap;
    _Bool _hasSetTextAlignment;
    NSString *accessibilityIdentifier;
    NSAttributedString *_attributedText;
    MDCSnackbarMessageAction *_action;
    UIColor *_buttonTextColor;
    double _duration;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _completionHandlerWithError;
    NSString *_category;
    NSString *_accessibilityLabel;
    NSString *_accessibilityHint;
    UIView *_elementToFocusOnDismiss;
    CDUnknownBlockType _snackbarMessageWillPresentBlock;
    UIView *_presentationHostViewOverride;
    NSError *_error;
}

+ (_Bool)usesLegacySnackbar;
+ (void)setUsesLegacySnackbar:(_Bool)arg1;
+ (id)messageWithAttributedText:(id)arg1;
+ (id)messageWithText:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool hasSetTextAlignment; // @synthesize hasSetTextAlignment=_hasSetTextAlignment;
@property(nonatomic) _Bool shouldDismissOnOverlayTap; // @synthesize shouldDismissOnOverlayTap=_shouldDismissOnOverlayTap;
@property(nonatomic) __weak UIView *presentationHostViewOverride; // @synthesize presentationHostViewOverride=_presentationHostViewOverride;
@property(nonatomic) _Bool automaticallyDismisses; // @synthesize automaticallyDismisses=_automaticallyDismisses;
@property(copy, nonatomic) CDUnknownBlockType snackbarMessageWillPresentBlock; // @synthesize snackbarMessageWillPresentBlock=_snackbarMessageWillPresentBlock;
@property(nonatomic) __weak UIView *elementToFocusOnDismiss; // @synthesize elementToFocusOnDismiss=_elementToFocusOnDismiss;
@property(nonatomic) _Bool focusOnShow; // @synthesize focusOnShow=_focusOnShow;
@property(nonatomic) _Bool enableRippleBehavior; // @synthesize enableRippleBehavior=_enableRippleBehavior;
@property(copy, nonatomic) NSString *accessibilityHint; // @synthesize accessibilityHint=_accessibilityHint;
@property(copy, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
@property(copy, nonatomic) NSString *category; // @synthesize category=_category;
@property(copy, nonatomic) CDUnknownBlockType completionHandlerWithError; // @synthesize completionHandlerWithError=_completionHandlerWithError;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) UIColor *buttonTextColor; // @synthesize buttonTextColor=_buttonTextColor;
@property(retain, nonatomic) MDCSnackbarMessageAction *action; // @synthesize action=_action;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(copy, nonatomic) NSString *accessibilityIdentifier; // @synthesize accessibilityIdentifier;
- (void)executeActionHandler:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)executeCompletionHandlerWithUserInteraction:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSString *voiceNotificationText;
@property(copy, nonatomic) NSString *text; // @dynamic text;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *targetQueue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)viewClass;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

