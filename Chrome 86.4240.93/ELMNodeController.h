//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <ChromeInternal/ASNodeController.h>

#import <ChromeInternal/ELMController-Protocol.h>
#import <ChromeInternal/UIGestureRecognizerDelegate-Protocol.h>

@class ASDisplayNode, CAAnimation, ELMComponent, ELMElement, ELMLoggingController, NSArray, NSMutableArray, NSMutableDictionary, NSString;
@protocol ELMContext, ELMController, ELMDisplayNode;

@interface ELMNodeController : ASNodeController <UIGestureRecognizerDelegate, ELMController>
{
    id <ELMContext> _context;
    _Bool _retainsComponent;
    _Bool _isRoot;
    ELMComponent *_weakComponent;
    ELMComponent *_strongComponent;
    NSMutableArray *_children;
    NSArray *_pendingChildren;
    NSMutableDictionary *_extendedProperties;
    struct vector<NodeCallback, std::__1::allocator<NodeCallback>> _callbacks;
    CAAnimation *_appearanceAnimation;
    double _lastAppearanceAnimationOrExitHierarchy;
    ELMLoggingController *_loggingController;
    _Bool _isVisibilityManagingChildNode;
    int _loggingNodeId;
    ELMElement *_element;
}

+ (_Bool)canBeLayerBacked:(id)arg1 withContext:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
@property _Bool isVisibilityManagingChildNode; // @synthesize isVisibilityManagingChildNode=_isVisibilityManagingChildNode;
@property(nonatomic) int loggingNodeId; // @synthesize loggingNodeId=_loggingNodeId;
@property(nonatomic) _Bool isRoot; // @synthesize isRoot=_isRoot;
@property(readonly, nonatomic) ELMElement *element; // @synthesize element=_element;
- (_Bool)shouldLogVisibilityChange;
- (_Bool)shouldLogAttach;
- (void)locked_applyPropertiesWithPreviousElement:(id)arg1;
- (void)locked_diffChildren:(id)arg1;
- (void)locked_performUpdateWithElement:(id)arg1 shouldUpdate:(_Bool)arg2;
- (void)performUpdateWithElement:(id)arg1 shouldUpdate:(_Bool)arg2;
- (_Bool)shouldElementUpdate:(id)arg1 withPreviousElement:(id)arg2;
- (_Bool)performAccessibilityCustomAction:(id)arg1;
- (void)willChangeHighlight:(_Bool)arg1;
-     // Error parsing type: v24@0:8r^{Command=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, proto2::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, proto2::internal::ExtensionSet::Extension> > >})}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}}16, name: handleCommand:
- (void)nodeWillCalculateLayout:(CDStruct_42a63532)arg1;
- (void)nodeDidLayout;
- (void)nodeDidLoad;
- (void)didExitPreloadState;
- (void)didEnterPreloadState;
- (void)didExitVisibleState;
- (void)didEnterVisibleState;
- (void)didExitHierarchy;
- (void)didEnterHierarchy;
- (void)setOnNodeDidPerformAccessibilityCustomAction:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (void)setOnNodeWillChangeHighlight:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (void)setOnNodeDidExitVisibleState:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (void)setOnNodeDidEnterVisibleState:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (void)setOnNodeWillCalculateLayout:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (void)setOnNodeDidLayout:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (void)setOnNodeDidLoad:(CDUnknownBlockType)arg1 forKey:(id)arg2;
- (id)extendedPropertyForKey:(id)arg1;
- (void)setExtendedProperty:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) id <ELMController> materializedInstance;
- (void)setOwningComponent:(id)arg1 retained:(_Bool)arg2;
@property(readonly, nonatomic) __weak ELMComponent *owningComponent;
- (void)setAppearanceAnimation:(id)arg1;
- (void)locked_remove:(id)arg1;
- (void)remove:(id)arg1;
- (void)locked_move:(id)arg1 toIndex:(int)arg2;
- (void)move:(id)arg1 toIndex:(int)arg2;
- (void)locked_replace:(id)arg1 with:(id)arg2;
- (void)replace:(id)arg1 with:(id)arg2;
- (void)locked_insert:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insert:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)locked_append:(id)arg1;
- (void)append:(id)arg1;
@property(readonly, nonatomic) NSArray *children;
- (void)updateWithElement:(id)arg1;
- (_Bool)shouldUpdateWithElement:(id)arg1;
@property(readonly, nonatomic) NSString *key;
- (void)loadNode;
- (void)locked_materializeSubtree;
- (void)dealloc;
- (id)initWithElement:(id)arg1 children:(id)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) ASDisplayNode<ELMDisplayNode> *node;
@property(nonatomic) _Bool shouldInvertStrongReference;
@property(readonly) Class superclass;

@end

