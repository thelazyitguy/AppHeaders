//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ChromeInternal/NSCoding-Protocol.h>
#import <ChromeInternal/NSCopying-Protocol.h>

@class NSString;

@interface SUPSupportContentUnit : NSObject <NSCoding, NSCopying>
{
    unsigned long long _type;
    NSString *_helpcenter;
    NSString *_nodeID;
    NSString *_fragment;
    NSString *_context;
    NSString *_locale;
    NSString *_threadFilter;
}

+ (_Bool)validateTopicOrAnswerID:(id)arg1;
+ (id)parseNodeIDFromURLFragmentOrQuery:(id)arg1 type:(unsigned long long)arg2;
+ (id)parseNodeIDFromTrakHelpURL:(id)arg1 type:(unsigned long long)arg2;
+ (id)parseNodeIDFromHashURL:(id)arg1 type:(unsigned long long)arg2;
+ (id)parseNodeIDFromCanonicalURL:(id)arg1;
+ (id)helpcenterNameFromPathComponents:(id)arg1 endIndex:(long long)arg2;
+ (id)parseHelpcenterNameFromAnswerOrTopicURL:(id)arg1 pathCompnents:(id)arg2;
+ (id)parseHelpcenterNameFromForumPathComponents:(id)arg1;
+ (id)parseHelpcenterNameFromContactFormPathComponents:(id)arg1;
+ (unsigned long long)parseTypeFromURL:(id)arg1;
+ (id)parseThreadFilterParamValueFromURL:(id)arg1;
+ (id)supportContentUnitsFromHelpUnits:(id)arg1;
+ (id)pageTypeForForumContentType:(unsigned long long)arg1;
+ (_Bool)shouldCacheContentUnitType:(unsigned long long)arg1;
+ (_Bool)isForumType:(unsigned long long)arg1;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *threadFilter; // @synthesize threadFilter=_threadFilter;
@property(readonly, copy, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(readonly, copy, nonatomic) NSString *context; // @synthesize context=_context;
@property(readonly, copy, nonatomic) NSString *fragment; // @synthesize fragment=_fragment;
@property(readonly, copy, nonatomic) NSString *nodeID; // @synthesize nodeID=_nodeID;
@property(readonly, copy, nonatomic) NSString *helpcenter; // @synthesize helpcenter=_helpcenter;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)canonicalURL;
- (_Bool)shouldReplacesExistingContent:(id)arg1;
- (_Bool)isEqualExceptForFragment:(id)arg1;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (id)initWithHelpUnit:(id)arg1;
- (id)initWithURL:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 helpcenter:(id)arg2 nodeID:(id)arg3;
- (id)initWithType:(unsigned long long)arg1 helpcenter:(id)arg2 nodeID:(id)arg3 locale:(id)arg4 fragment:(id)arg5 context:(id)arg6 threadFilter:(id)arg7;

@end

