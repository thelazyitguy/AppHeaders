//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <mParticle_Apptentive/NSObject-Protocol.h>

@class CLLocation, FilteredMPIdentityApiRequest, FilteredMParticleUser, MPBaseEvent, MPCommerceEvent, MPConsentState, MPEvent, MPKitAPI, MPKitExecStatus, NSArray, NSData, NSDictionary, NSError, NSException, NSNumber, NSString, NSURL, NSUserActivity, UNNotification, UNNotificationResponse, UNUserNotificationCenter;

@protocol MPKitProtocol <NSObject>
+ (NSNumber *)kitCode;
@property(readonly, nonatomic) _Bool started;
- (MPKitExecStatus *)didFinishLaunchingWithConfiguration:(NSDictionary *)arg1;

@optional
@property(retain, nonatomic) MPKitAPI *kitApi;
@property(readonly, nonatomic) id providerKitInstance;
@property(retain, nonatomic) NSDictionary *launchOptions;
@property(retain, nonatomic) NSDictionary *configuration;
- (_Bool)shouldDelayMParticleUpload;
- (NSString *)surveyURLWithUserAttributes:(NSDictionary *)arg1;
- (MPKitExecStatus *)setOptOut:(_Bool)arg1;
- (MPKitExecStatus *)setKitAttribute:(NSString *)arg1 value:(id)arg2;
- (MPKitExecStatus *)logException:(NSException *)arg1;
- (MPKitExecStatus *)logError:(NSString *)arg1 eventInfo:(NSDictionary *)arg2;
- (MPKitExecStatus *)leaveBreadcrumb:(MPEvent *)arg1;
- (MPKitExecStatus *)endTimedEvent:(MPEvent *)arg1;
- (MPKitExecStatus *)beginTimedEvent:(MPEvent *)arg1;
- (MPKitExecStatus *)logUpdate;
- (MPKitExecStatus *)logScreen:(MPEvent *)arg1;
- (MPKitExecStatus *)logout;
- (MPKitExecStatus *)logInstall;
- (MPKitExecStatus *)logEvent:(MPEvent *)arg1;
- (MPKitExecStatus *)logBaseEvent:(MPBaseEvent *)arg1;
- (MPKitExecStatus *)logLTVIncrease:(double)arg1 event:(MPEvent *)arg2;
- (MPKitExecStatus *)logCommerceEvent:(MPCommerceEvent *)arg1;
- (MPKitExecStatus *)setConsentState:(MPConsentState *)arg1;
- (MPKitExecStatus *)onModifyComplete:(FilteredMParticleUser *)arg1 request:(FilteredMPIdentityApiRequest *)arg2;
- (MPKitExecStatus *)onLogoutComplete:(FilteredMParticleUser *)arg1 request:(FilteredMPIdentityApiRequest *)arg2;
- (MPKitExecStatus *)onLoginComplete:(FilteredMParticleUser *)arg1 request:(FilteredMPIdentityApiRequest *)arg2;
- (MPKitExecStatus *)onIdentifyComplete:(FilteredMParticleUser *)arg1 request:(FilteredMPIdentityApiRequest *)arg2;
- (MPKitExecStatus *)onSetUserTag:(FilteredMParticleUser *)arg1;
- (MPKitExecStatus *)onSetUserAttribute:(FilteredMParticleUser *)arg1;
- (MPKitExecStatus *)onRemoveUserAttribute:(FilteredMParticleUser *)arg1;
- (MPKitExecStatus *)onIncrementUserAttribute:(FilteredMParticleUser *)arg1;
- (MPKitExecStatus *)setUserTag:(NSString *)arg1;
- (MPKitExecStatus *)setUserIdentity:(NSString *)arg1 identityType:(unsigned long long)arg2;
- (MPKitExecStatus *)setUserAttribute:(NSString *)arg1 values:(NSArray *)arg2;
- (MPKitExecStatus *)setUserAttribute:(NSString *)arg1 value:(id)arg2;
- (MPKitExecStatus *)removeUserAttribute:(NSString *)arg1;
- (MPKitExecStatus *)incrementUserAttribute:(NSString *)arg1 byValue:(NSNumber *)arg2;
- (MPKitExecStatus *)endSession;
- (MPKitExecStatus *)beginSession;
- (MPKitExecStatus *)setLocation:(CLLocation *)arg1;
- (MPKitExecStatus *)endLocationTracking;
- (MPKitExecStatus *)beginLocationTracking:(double)arg1 minDistance:(double)arg2;
- (MPKitExecStatus *)userNotificationCenter:(UNUserNotificationCenter *)arg1 didReceiveNotificationResponse:(UNNotificationResponse *)arg2;
- (MPKitExecStatus *)userNotificationCenter:(UNUserNotificationCenter *)arg1 willPresentNotification:(UNNotification *)arg2;
- (MPKitExecStatus *)setDeviceToken:(NSData *)arg1;
- (MPKitExecStatus *)receivedUserNotification:(NSDictionary *)arg1;
- (MPKitExecStatus *)openURL:(NSURL *)arg1 sourceApplication:(NSString *)arg2 annotation:(id)arg3;
- (MPKitExecStatus *)openURL:(NSURL *)arg1 options:(NSDictionary *)arg2;
- (MPKitExecStatus *)handleActionWithIdentifier:(NSString *)arg1 forRemoteNotification:(NSDictionary *)arg2 withResponseInfo:(NSDictionary *)arg3;
- (MPKitExecStatus *)handleActionWithIdentifier:(NSString *)arg1 forRemoteNotification:(NSDictionary *)arg2;
- (MPKitExecStatus *)failedToRegisterForUserNotifications:(NSError *)arg1;
- (MPKitExecStatus *)didBecomeActive;
- (MPKitExecStatus *)didUpdateUserActivity:(NSUserActivity *)arg1;
- (MPKitExecStatus *)continueUserActivity:(NSUserActivity *)arg1 restorationHandler:(void (^)(NSArray *))arg2;
- (void)deinit;
- (void)start;
@end

