//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSSet, NSString, NSURL, NSURLSession, STPAppInfo, STPPaymentConfiguration;
@protocol OS_dispatch_queue;

@interface STPAPIClient : NSObject
{
    NSString *_publishableKey;
    STPPaymentConfiguration *_configuration;
    NSString *_stripeAccount;
    STPAppInfo *_appInfo;
    NSMutableDictionary *_sourcePollers;
    NSObject<OS_dispatch_queue> *_sourcePollersQueue;
    NSSet *_betas;
    NSURL *_apiURL;
    NSURLSession *_urlSession;
}

+ (id)stripeUserAgentDetailsWithAppInfo:(id)arg1;
+ (void)validateKey:(id)arg1;
+ (id)sharedUrlSessionConfiguration;
+ (id)sharedClient;
+ (void)initialize;
+ (id)apiVersion;
+ (id)pkPaymentErrorForStripeError:(id)arg1;
+ (id)parametersForPayment:(id)arg1;
+ (id)addressParamsFromPKContact:(id)arg1;
+ (id)billingDetailsFromPKPayment:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property(retain, nonatomic) NSURL *apiURL; // @synthesize apiURL=_apiURL;
@property(retain, nonatomic) NSSet *betas; // @synthesize betas=_betas;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sourcePollersQueue; // @synthesize sourcePollersQueue=_sourcePollersQueue;
@property(retain, nonatomic) NSMutableDictionary *sourcePollers; // @synthesize sourcePollers=_sourcePollers;
@property(retain, nonatomic) STPAppInfo *appInfo; // @synthesize appInfo=_appInfo;
@property(copy, nonatomic) NSString *stripeAccount; // @synthesize stripeAccount=_stripeAccount;
@property(copy, nonatomic) STPPaymentConfiguration *configuration; // @synthesize configuration=_configuration;
@property(copy, nonatomic) NSString *publishableKey; // @synthesize publishableKey=_publishableKey;
- (id)authorizationHeaderUsingEphemeralKey:(id)arg1;
- (void)createTokenWithParameters:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)defaultHeaders;
- (id)configuredRequestForURL:(id)arg1 additionalHeaders:(id)arg2;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithPublishableKey:(id)arg1;
- (id)init;
- (void)createPaymentMethodWithPayment:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createSourceWithPayment:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createTokenWithPayment:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrievePushProvisioningDetailsWithParams:(id)arg1 ephemeralKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createTokenWithBankAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createTokenWithSSNLast4:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createTokenWithPersonalIDNumber:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createTokenWithConnectAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)uploadImage:(id)arg1 purpose:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)dataForUploadedImage:(id)arg1 purpose:(long long)arg2;
- (void)createTokenForCVCUpdate:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createTokenWithCard:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopPollingSourceWithId:(id)arg1;
- (void)startPollingSourceWithId:(id)arg1 clientSecret:(id)arg2 timeout:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (id)retrieveSourceWithId:(id)arg1 clientSecret:(id)arg2 responseCompletion:(CDUnknownBlockType)arg3;
- (void)retrieveSourceWithId:(id)arg1 clientSecret:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createSourceWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)listPaymentMethodsForCustomerUsingKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)detachPaymentMethod:(id)arg1 fromCustomerUsingKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)attachPaymentMethod:(id)arg1 toCustomerUsingKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteSource:(id)arg1 fromCustomerUsingKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addSource:(id)arg1 toCustomerUsingKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateCustomerWithParameters:(id)arg1 usingKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)retrieveCustomerUsingKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)complete3DS2AuthenticationForSource:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)authenticate3DS2:(id)arg1 sourceIdentifier:(id)arg2 returnURL:(id)arg3 maxTimeout:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)cancel3DSAuthenticationForPaymentIntent:(id)arg1 withSource:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)confirmPaymentIntentWithParams:(id)arg1 expand:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)confirmPaymentIntentWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrievePaymentIntentWithClientSecret:(id)arg1 expand:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)retrievePaymentIntentWithClientSecret:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancel3DSAuthenticationForSetupIntent:(id)arg1 withSource:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)confirmSetupIntentWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrieveSetupIntentWithClientSecret:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrieveFPXBankStatusWithCompletion:(CDUnknownBlockType)arg1;
- (void)createPaymentMethodWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

