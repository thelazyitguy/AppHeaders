//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTService-Protocol.h"

@class NSString, SPTAllocationContext, SPTPersistentCache, SPTStorylinesFeatureProperties, SPTStorylinesNowPlayingScrollProvider;
@protocol FollowFeature, SPTContainerService, SPTEventSenderService, SPTGLUEService, SPTImageLoadingService, SPTNetworkService, SPTNowPlayingPlatformService, SPTNowPlayingScrollDataSource, SPTNowPlayingService, SPTPlayerFeature, SPTRemoteConfigurationService, SPTSessionService, SPTUBIService, SPTURIDispatchService;

@interface SPTStorylinesServiceImplementation : NSObject <SPTService>
{
    SPTPersistentCache *_persistentCache;
    id <SPTContainerService> _containerService;
    id <SPTUBIService> _ubiService;
    id <SPTNowPlayingService> _nowPlayingService;
    id <SPTNowPlayingPlatformService> _nowPlayingPlatformService;
    id <SPTNetworkService> _networkService;
    id <SPTImageLoadingService> _imageLoadingService;
    id <SPTGLUEService> _glueService;
    id <SPTURIDispatchService> _URIDispatchService;
    id <FollowFeature> _followFeature;
    id <SPTPlayerFeature> _playerFeature;
    id <SPTSessionService> _sessionService;
    id <SPTEventSenderService> _eventSenderService;
    id <SPTRemoteConfigurationService> _remoteConfigurationService;
    SPTStorylinesFeatureProperties *_properties;
    SPTStorylinesNowPlayingScrollProvider *_provider;
    id <SPTNowPlayingScrollDataSource> _dataSource;
}

+ (id)serviceIdentifier;
- (void).cxx_destruct;
@property(retain, nonatomic) id <SPTNowPlayingScrollDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) SPTStorylinesNowPlayingScrollProvider *provider; // @synthesize provider=_provider;
@property(retain, nonatomic) SPTStorylinesFeatureProperties *properties; // @synthesize properties=_properties;
@property(nonatomic) __weak id <SPTRemoteConfigurationService> remoteConfigurationService; // @synthesize remoteConfigurationService=_remoteConfigurationService;
@property(nonatomic) __weak id <SPTEventSenderService> eventSenderService; // @synthesize eventSenderService=_eventSenderService;
@property(nonatomic) __weak id <SPTSessionService> sessionService; // @synthesize sessionService=_sessionService;
@property(nonatomic) __weak id <SPTPlayerFeature> playerFeature; // @synthesize playerFeature=_playerFeature;
@property(nonatomic) __weak id <FollowFeature> followFeature; // @synthesize followFeature=_followFeature;
@property(nonatomic) __weak id <SPTURIDispatchService> URIDispatchService; // @synthesize URIDispatchService=_URIDispatchService;
@property(nonatomic) __weak id <SPTGLUEService> glueService; // @synthesize glueService=_glueService;
@property(nonatomic) __weak id <SPTImageLoadingService> imageLoadingService; // @synthesize imageLoadingService=_imageLoadingService;
@property(nonatomic) __weak id <SPTNetworkService> networkService; // @synthesize networkService=_networkService;
@property(nonatomic) __weak id <SPTNowPlayingPlatformService> nowPlayingPlatformService; // @synthesize nowPlayingPlatformService=_nowPlayingPlatformService;
@property(nonatomic) __weak id <SPTNowPlayingService> nowPlayingService; // @synthesize nowPlayingService=_nowPlayingService;
@property(nonatomic) __weak id <SPTUBIService> ubiService; // @synthesize ubiService=_ubiService;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
- (id)persistentCacheOptions;
@property(readonly, nonatomic) SPTPersistentCache *persistentCache; // @synthesize persistentCache=_persistentCache;
- (void)setupScrollProvider;
- (void)unload;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

