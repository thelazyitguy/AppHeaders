//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTAsyncScheduler-Protocol.h"

@class NSRunLoop, NSThread, NSTimer;

@interface SPTAsyncTimerManagerThread : NSObject <SPTAsyncScheduler>
{
    struct unique_ptr<spotify::async::TimerManager, std::__1::default_delete<spotify::async::TimerManager>> _cppScheduler;
    NSThread *_thread;
    NSTimer *_timer;
    NSRunLoop *_runLoop;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSThread *thread; // @synthesize thread=_thread;
- (void)timerFunc:(id)arg1;
- (void)timerNotify;
- (int)runCppDispatch;
- (void)runBlock:(CDUnknownBlockType)arg1;
- (void)postBlock:(CDUnknownBlockType)arg1;
- (_Bool)isOnSameThread;
- (void)performBlock:(CDUnknownBlockType)arg1 withSelector:(SEL)arg2 synchronous:(_Bool)arg3;
- (void)executeBlockRunner:(id)arg1;
- (void)threadFunc;
- (void)schedulingSetup;
- (struct TimerManager *)cppScheduler;
- (void)interrupt;
- (id)initWithBackgroundThreadName:(id)arg1;

@end

