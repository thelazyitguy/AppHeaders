//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTVolumeService-Protocol.h"

@class NSString, SPTAllocationContext, SPTVolumeBuffer, SPTVolumeCosmosResolver, SPTVolumeDebugInstrumentation, SPTVolumeFeatureProperties, SPTVolumeFlagsProvider, SPTVolumeLogger, SPTVolumeMobileToMobileCoordinator, SPTVolumeRemotePopupPresenter, SPTVolumeSliderViewFactory, SPTVolumeSystemPopupEmitter, SPTVolumeSystemPopupHideEmitterLegacy, SPTVolumeThrottlerFactoryImplementation, SPTVolumeUbiLogger;
@protocol CosmosFeature, GaiaFeature, SPTContainerService, SPTEventSenderService, SPTGaiaConnectAPI, SPTPlayerFeature, SPTRemoteConfigurationService, SPTUBIService, SPTVolumeAPI, SPTVolumeSynchronizationManager, SPTVolumeSystemAPI;

@interface SPTVolumeServiceImplementation : NSObject <SPTVolumeService>
{
    id <SPTContainerService> _containerService;
    id <GaiaFeature> _gaiaService;
    id <CosmosFeature> _cosmosService;
    id <SPTPlayerFeature> _playerService;
    id <SPTUBIService> _ubiService;
    id <SPTEventSenderService> _eventSenderService;
    id <SPTRemoteConfigurationService> _remoteConfigurationService;
    id <SPTVolumeAPI> _volumeManager;
    SPTVolumeMobileToMobileCoordinator *_mobileToMobileManager;
    SPTVolumeRemotePopupPresenter *_remoteVolumePopupPresenter;
    SPTVolumeCosmosResolver *_resolver;
    id <SPTGaiaConnectAPI> _connectManager;
    id <SPTVolumeSystemAPI> _systemVolumeManager;
    SPTVolumeBuffer *_remoteBuffer;
    SPTVolumeSystemPopupHideEmitterLegacy *_legacySystemPopupEmitter;
    SPTVolumeSystemPopupEmitter *_systemPopupEmitter;
    SPTVolumeLogger *_logger;
    SPTVolumeUbiLogger *_ubiLogger;
    SPTVolumeDebugInstrumentation *_debugLogger;
    id <SPTVolumeSynchronizationManager> _synchronizationManager;
    SPTVolumeSliderViewFactory *_volumeSliderViewFactory;
    SPTVolumeFeatureProperties *_remoteConfigProperties;
    SPTVolumeFlagsProvider *_flagsProvider;
    SPTVolumeThrottlerFactoryImplementation *_volumeThrottlerFactory;
}

+ (id)serviceIdentifier;
- (void).cxx_destruct;
@property(retain, nonatomic) SPTVolumeThrottlerFactoryImplementation *volumeThrottlerFactory; // @synthesize volumeThrottlerFactory=_volumeThrottlerFactory;
@property(retain, nonatomic) SPTVolumeFlagsProvider *flagsProvider; // @synthesize flagsProvider=_flagsProvider;
@property(retain, nonatomic) SPTVolumeFeatureProperties *remoteConfigProperties; // @synthesize remoteConfigProperties=_remoteConfigProperties;
@property(retain, nonatomic) SPTVolumeSliderViewFactory *volumeSliderViewFactory; // @synthesize volumeSliderViewFactory=_volumeSliderViewFactory;
@property(retain, nonatomic) id <SPTVolumeSynchronizationManager> synchronizationManager; // @synthesize synchronizationManager=_synchronizationManager;
@property(retain, nonatomic) SPTVolumeDebugInstrumentation *debugLogger; // @synthesize debugLogger=_debugLogger;
@property(retain, nonatomic) SPTVolumeUbiLogger *ubiLogger; // @synthesize ubiLogger=_ubiLogger;
@property(retain, nonatomic) SPTVolumeLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SPTVolumeSystemPopupEmitter *systemPopupEmitter; // @synthesize systemPopupEmitter=_systemPopupEmitter;
@property(retain, nonatomic) SPTVolumeSystemPopupHideEmitterLegacy *legacySystemPopupEmitter; // @synthesize legacySystemPopupEmitter=_legacySystemPopupEmitter;
@property(retain, nonatomic) SPTVolumeBuffer *remoteBuffer; // @synthesize remoteBuffer=_remoteBuffer;
@property(retain, nonatomic) id <SPTVolumeSystemAPI> systemVolumeManager; // @synthesize systemVolumeManager=_systemVolumeManager;
@property(retain, nonatomic) id <SPTGaiaConnectAPI> connectManager; // @synthesize connectManager=_connectManager;
@property(retain, nonatomic) SPTVolumeCosmosResolver *resolver; // @synthesize resolver=_resolver;
@property(retain, nonatomic) SPTVolumeRemotePopupPresenter *remoteVolumePopupPresenter; // @synthesize remoteVolumePopupPresenter=_remoteVolumePopupPresenter;
@property(retain, nonatomic) SPTVolumeMobileToMobileCoordinator *mobileToMobileManager; // @synthesize mobileToMobileManager=_mobileToMobileManager;
@property(retain, nonatomic) id <SPTVolumeAPI> volumeManager; // @synthesize volumeManager=_volumeManager;
@property(nonatomic) __weak id <SPTRemoteConfigurationService> remoteConfigurationService; // @synthesize remoteConfigurationService=_remoteConfigurationService;
@property(nonatomic) __weak id <SPTEventSenderService> eventSenderService; // @synthesize eventSenderService=_eventSenderService;
@property(nonatomic) __weak id <SPTUBIService> ubiService; // @synthesize ubiService=_ubiService;
@property(nonatomic) __weak id <SPTPlayerFeature> playerService; // @synthesize playerService=_playerService;
@property(nonatomic) __weak id <CosmosFeature> cosmosService; // @synthesize cosmosService=_cosmosService;
@property(nonatomic) __weak id <GaiaFeature> gaiaService; // @synthesize gaiaService=_gaiaService;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
- (id)provideVolumeThrottlerFactory;
- (id)provideVolumeFlagsProvider;
- (id)provideVolumeSystemAPI;
- (id)provideVolumeUIFactory;
- (id)provideVolumeAPI;
- (id)activeSystemPopupEmitter;
- (void)setupVolumeSliderView;
- (void)setupRemoteVolumePopupPresenter;
- (id)buildVolumeSynchronizationManager;
- (id)buildRemoteControllerRouter;
- (void)setupMobileToMobileManager;
- (void)setupVolumeManager;
- (void)unload;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

