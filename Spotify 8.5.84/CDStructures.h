//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSData, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AccessToken {
    basic_string_90719d97 _field1;
    struct time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>> _field2;
    basic_string_90719d97 _field3;
};

struct AccessTokenScope;

struct AccesspointResolver;

struct ActivityPeriod {
    int _field1;
    int _field2;
};

struct AdvertisementMetadata;

struct AlbumGroup;

struct AlbumInfo {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::metadata::AlbumInfo> _field2;
    struct MetadataModel *_field3;
    unsigned int :1;
    unsigned int :1;
};

struct AlbumMetadata {
    struct shared_ptr<spotify::metadata::AlbumInfo> _field1;
    struct vector<spotify::metadata::AlbumMetadata::Disc, std::__1::allocator<spotify::metadata::AlbumMetadata::Disc>> _field2;
    vector_553ebee1 _field3;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    vector_553ebee1 _field6;
};

struct ApHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct AppleConnectionFactory;

struct AppleSignInCredential {
    struct unique_ptr<spotify::connectivity::auth::credentials::AppleSignInCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::AppleSignInCredential::Impl>> _pimpl;
};

struct ApplicationConfig {
    unsigned int _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    int _field4;
};

struct ApplicationScope {
    struct unique_ptr<spotify::connectivity::ApplicationScope::Impl, std::__1::default_delete<spotify::connectivity::ApplicationScope::Impl>> _field1;
};

struct ApplicationStateTracker {
    struct shared_ptr<spotify::client::ApplicationStateTracker::Impl> _field1;
};

struct Array<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct Array<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct Array<ComScore::HeartbeatInterval, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::HeartbeatInterval, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct Array<ComScore::String, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::String, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::HeartbeatInterval, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::HeartbeatInterval, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::String, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::String, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ConfigurationListenerImpl *, ComScore::DummyCriticalSection> {
    struct HeapBlock<ConfigurationListenerImpl *, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<CrossPublisherUniqueDeviceIdChangeListenerImpl *, ComScore::DummyCriticalSection> {
    struct HeapBlock<CrossPublisherUniqueDeviceIdChangeListenerImpl *, false> _field1;
    int _field2;
};

struct ArtistInfo {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::metadata::ArtistInfo> _field2;
    struct MetadataModel *_field3;
    basic_string_90719d97 _field4;
};

struct ArtistMetadata {
    struct shared_ptr<spotify::metadata::ArtistInfo> _field1;
    vector_553ebee1 _field2;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field3;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field4;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field5;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field6;
    vector_553ebee1 _field7;
    struct vector<spotify::metadata::BiographyOrReview, std::__1::allocator<spotify::metadata::BiographyOrReview>> _field8;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
    struct ActivityPeriod _field10;
};

struct AssetMetadata;

struct Atomic<int> {
    int _field1;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioDriver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioVolumeControlManager {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>, std::__1::allocator<std::__1::pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>>> _field2;
    struct signal<void (spotify::playback::VolumeChangeReason), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field3;
    int _field4;
};

struct AuthSession;

struct AuthenticatedScope {
    struct unique_ptr<spotify::connectivity::AuthenticatedScope::Impl, std::__1::default_delete<spotify::connectivity::AuthenticatedScope::Impl>> _field1;
};

struct AutologinFromCredentialsStore;

struct BezierPointDefinition {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
};

struct BiographyOrReview;

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CacheConfig {
    struct path _field1;
};

struct CacheDrmConfig {
    struct array<unsigned char, 4> _field1;
    struct array<unsigned char, 16> _field2;
};

struct CacheInfo {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
};

struct CharPointer_UTF8 {
    char *_field1;
};

struct Client;

struct ClientConfiguration;

struct ClientConfigurationParams {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    struct StringPairArray _field4;
    struct StringPairArray _field5;
};

struct ClientFeatureStack {
    struct unique_ptr<spotify::client_features::ClientFeatureStack::Impl, std::__1::default_delete<spotify::client_features::ClientFeatureStack::Impl>> _field1;
};

struct ClientToken {
    basic_string_90719d97 token;
    struct time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>> expires_at_timestamp;
    struct time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>> refresh_at_timestamp;
    basic_string_90719d97 client_data_hash;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> domains;
};

struct ClientTokenAcquirer;

struct ClientTokenInfo {
    basic_string_90719d97 _field1;
    _Bool _field2;
};

struct ClientVersionConfig {
    basic_string_90719d97 _field1;
};

struct ClientVersionInfo {
    unsigned int _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
};

struct Code {
    int method;
    unsigned long long code_length;
    basic_string_90719d97 canonical_phone_number;
    struct duration<long long, std::__1::ratio<1, 1>> expires_in;
    struct time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>> expires_at;
    unsigned long long retry_number;
};

struct ColorCube {
    struct shared_ptr<std::__1::vector<spotify::palette::Swatch, std::__1::allocator<spotify::palette::Swatch>>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct UInt8Range _field5;
    struct UInt8Range _field6;
    struct UInt8Range _field7;
};

struct ConfigurationListenerImpl;

struct ConnectTransferDetails {
    struct optional<spotify::player::ContextTrack> _field1;
    struct vector<spotify::player::ContextTrack, std::__1::allocator<spotify::player::ContextTrack>> _field2;
};

struct Connection;

struct ConnectionBuilder {
    struct shared_ptr<spotify::http::ConnectionBuilder::Impl> _field1;
};

struct ConnectionFactory;

struct ConnectionTypeProvider;

struct ConnectionTypeProviderBridge;

struct ConnectivityManager {
    struct unique_ptr<spotify::connectivity::ConnectivityManager::Impl, std::__1::default_delete<spotify::connectivity::ConnectivityManager::Impl>> _field1;
    CDUnknownFunctionPointerType _field2;
};

struct ConnectivityPolicyProvider;

struct ConnectivityPolicyProviderBridge;

struct ContentMetadata;

struct ContextPlayerOptionOverrides {
    struct optional<bool> _field1;
    struct optional<bool> _field2;
    struct optional<bool> _field3;
};

struct ContextTrack {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct Metadata _field3;
};

struct Core {
    CDUnknownFunctionPointerType *_field1;
};

struct CoreCreateOptions {
    struct CacheInfo _field1;
    struct DeviceInfo _field2;
    struct ClientVersionInfo _field3;
    _Bool _field4;
    basic_string_90719d97 _field5;
};

struct CredentialsStorage;

struct CriticalSection {
    struct _opaque_pthread_mutex_t _field1;
};

struct CrossPublisherUniqueDeviceIdChangeListenerImpl;

struct DefaultHashFunctions;

struct DeviceConfig {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
};

struct DeviceInfo {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
};

struct Disc;

struct DiscoveredService {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct set<asio::ip::basic_endpoint<asio::ip::udp>, std::__1::less<asio::ip::basic_endpoint<asio::ip::udp>>, std::__1::allocator<asio::ip::basic_endpoint<asio::ip::udp>>> _field3;
    map_0edfe763 _field4;
};

struct EventInfo {
    struct CriticalSection _field1;
    struct StringPairArray _field2;
    struct HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection> _field3;
    struct StringArray _field4;
    struct String _field5;
    _Bool _field6;
    struct StringArray _field7;
};

struct EventSender;

struct FIRCLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct FIRCLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct FacebookApi;

struct FacebookPermissions;

struct FacebookService {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    _Bool _field3;
    int _field4;
    struct weak_ptr<spotify::facebook::FacebookService> _field5;
    struct FacebookApi *_field6;
    struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> _field7;
    struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> _field8;
    struct shared_ptr<spotify::http::ConnectionFactory> _field9;
    int _field10;
    struct TimerManager *_field11;
    basic_string_90719d97 _field12;
    basic_string_90719d97 _field13;
    _Bool _field14;
    shared_ptr_2175cb8d _field15;
    struct shared_ptr<spotify::http::ConnectionFactory> _field16;
    struct HermesHandler *_field17;
    struct MercuryHandler *_field18;
    struct function<std::__1::basic_string<char>()> _field19;
    struct function<spotify::connectivity::auth::AccountInfo ()> _field20;
    basic_string_90719d97 _field21;
    struct signal<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field22;
    struct signal<void (spotify::facebook::ServiceEvent), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field23;
    struct signal<void (), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field24;
    struct shared_ptr<spotify::facebook::FacebookServiceRequestFactory> _field25;
    struct shared_ptr<spotify::facebook::MeMetadataRequest> _field26;
    struct shared_ptr<spotify::facebook::FriendsMetadataRequest> _field27;
    struct shared_ptr<spotify::facebook::FacebookPermissions> _field28;
    basic_string_90719d97 _field29;
    int _field30;
    struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>>> _field31;
    struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>>> _field32;
    struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>>> _field33;
    struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>>> _field34;
    struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>>> _field35;
    struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>>> _field36;
};

struct FacebookServiceRequestFactory;

struct FriendsMetadataRequest;

struct GCKCastMessageSegmenterOutgoingMessage {
    Class _field1;
    _Bool _field2;
    _Bool _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
};

struct GLUEEntityCardImageLayoutState {
    double sideMargin;
    double sizeMultiplier;
};

struct GLUESideMargins {
    double leading;
    double trailing;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GULReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GoogleSignInCredential {
    struct unique_ptr<spotify::connectivity::auth::credentials::GoogleSignInCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::GoogleSignInCredential::Impl>> _pimpl;
};

struct HashEntry;

struct HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection> {
    struct DefaultHashFunctions _field1;
    struct Array<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> _field2;
    int _field3;
    struct CriticalSection _field4;
};

struct HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection> {
    struct DefaultHashFunctions _field1;
    struct Array<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> _field2;
    int _field3;
    struct CriticalSection _field4;
};

struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, false> {
    struct HashEntry **_field1;
};

struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, false> {
    struct HashEntry **_field1;
};

struct HeapBlock<ComScore::HeartbeatInterval, false> {
    struct HeartbeatInterval *_field1;
};

struct HeapBlock<ComScore::String, false> {
    struct String *_field1;
};

struct HeapBlock<ConfigurationListenerImpl *, false> {
    struct ConfigurationListenerImpl **_field1;
};

struct HeapBlock<CrossPublisherUniqueDeviceIdChangeListenerImpl *, false> {
    struct CrossPublisherUniqueDeviceIdChangeListenerImpl **_field1;
};

struct HeartbeatInterval;

struct HermesHandler {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<spotify::hermes::HermesHandler::Impl> _field2;
};

struct HermesMessage;

struct HermesQuery;

struct HermesRequest;

struct HueRange {
    double _field1;
    double _field2;
};

struct IOSAudioDriver {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void (const spotify::playback::AudioDriverInfo &), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field2;
    int _field3;
    int _field4;
    _Bool _field5;
};

struct Identifier {
    struct unique_ptr<spotify::connectivity::auth::Identifier::Impl, std::__1::default_delete<spotify::connectivity::auth::Identifier::Impl>> _pimpl;
};

struct Impl;

struct IncognitoModeHandler {
    struct Timer _field1;
    struct Prefs *_field2;
    struct ProductState *_field3;
    struct Logger *_field4;
    struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> _field5;
    struct ScrobblerContainer *_field6;
    struct function<bool ()> _field7;
    struct signal<void (bool, bool), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field8;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LifetimeStorageEntry;

struct LocalPlaybackView;

struct LogMessageFilter {
    struct unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> _field1;
    int _field2;
    struct mutex _field3;
};

struct LogObserver {
    CDUnknownFunctionPointerType *_field1;
    struct LogMessageFilter _field2;
    id _field3;
    basic_string_90719d97 _field4;
};

struct Logger {
    struct shared_ptr<spotify::analytics::LoggerImpl> _field1;
    struct shared_ptr<spotify::analytics::TrackedLoggerImpl> _field2;
    struct function<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>()> _field3;
    optional_331450e3 _field4;
    struct mutex _field5;
};

struct LoggerImpl;

struct LoginController {
    CDUnknownFunctionPointerType *_field1;
};

struct LoginCredentials {
    struct unique_ptr<spotify::connectivity::auth::LoginCredentials::Impl, std::__1::default_delete<spotify::connectivity::auth::LoginCredentials::Impl>> _impl;
};

struct LoginOptions {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    _Bool _field5;
    _Bool _field6;
    basic_string_90719d97 _field7;
    struct ProxySettings _field8;
    struct CacheDrmConfig _field9;
};

struct MeMetadataRequest;

struct MercuryHandler;

struct Metadata {
    struct flat_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, void> _field1;
};

struct MetadataEnv;

struct MetadataHandler {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<spotify::metadata::MetadataEnv, std::__1::default_delete<spotify::metadata::MetadataEnv>> _field2;
};

struct MetadataModel {
    struct unique_ptr<spotify::metadata::MetadataModel::Impl, std::__1::default_delete<spotify::metadata::MetadataModel::Impl>> _field1;
};

struct MetadataTask {
    CDUnknownFunctionPointerType *_field1;
};

struct MftCanPlayChecker;

struct MultiStringHermesQuery {
    CDUnknownFunctionPointerType *_field1;
    struct error_code _field2;
    struct shared_ptr<spotify::hermes::HermesQuery> _field3;
    struct shared_ptr<spotify::hermes::HermesMessage> _field4;
    struct shared_ptr<spotify::hermes::HermesRequest> _field5;
    struct function<void (spotify::hermes::HermesQuery *)> _field6;
    struct TimerManager *_field7;
    _Bool _field8;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field10;
};

struct MutableState {
    struct shared_ptr<spotify::metadata::TrackInfo> _field1;
    unsigned char _field2;
    unsigned int :2;
    unsigned int :3;
    unsigned int :2;
    unsigned int :2;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct NSDictionary {
    Class _field1;
};

struct NSDirectionalEdgeInsets {
    double top;
    double leading;
    double bottom;
    double trailing;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NetworkConfig {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    struct optional<unsigned char> _field4;
    struct optional<unsigned char> _field5;
    struct optional<unsigned int> _field6;
    basic_string_90719d97 _field7;
    struct optional<spotify::http::ConnectionType> _field8;
};

struct OfflineCache {
    CDUnknownFunctionPointerType *_field1;
};

struct OfflineManager {
    CDUnknownFunctionPointerType *_field1;
};

struct OneTimeToken {
    struct unique_ptr<spotify::connectivity::auth::credentials::OneTimeToken::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::OneTimeToken::Impl>> _pimpl;
};

struct OwnedArray<ConfigurationListenerImpl, ComScore::DummyCriticalSection> {
    struct ArrayAllocationBase<ConfigurationListenerImpl *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct OwnedArray<CrossPublisherUniqueDeviceIdChangeListenerImpl, ComScore::DummyCriticalSection> {
    struct ArrayAllocationBase<CrossPublisherUniqueDeviceIdChangeListenerImpl *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct OwnedArray<StreamingListenerImpl, ComScore::CriticalSection>;

struct ParentChildCredential {
    struct unique_ptr<spotify::connectivity::auth::credentials::ParentChildCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::ParentChildCredential::Impl>> _pimpl;
};

struct PendingMessageStorageImpl {
    CDUnknownFunctionPointerType *_field1;
    function_84aba934 _field2;
    struct Timer _field3;
    struct Timer _field4;
    struct Logger *_field5;
    basic_string_90719d97 _field6;
    struct mutex _field7;
    struct vector<std::__1::unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>, std::__1::allocator<std::__1::unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>>> _field8;
    basic_string_90719d97 _field9;
    struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> _field10;
    _Bool _field11;
    _Bool _field12;
};

struct PerformanceConfig {
    _Bool _field1;
};

struct PlayOrigin {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field7;
};

struct PlaybackId {
    unsigned char _field1[16];
};

struct PlayerLicense {
    basic_string_90719d97 _field1;
};

struct Position {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct PrefStore;

struct Prefs {
    struct unique_ptr<spotify::prefs::PrefStore, std::__1::default_delete<spotify::prefs::PrefStore>> _field1;
    struct signal<void (spotify::prefs::PrefEntry *), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> _field2;
    _Bool _field3;
};

struct PreparePlayOptions {
    struct optional<spotify::player::PlaybackId> _field1;
    _Bool _field2;
    struct SkipToTrack _field3;
    optional_331450e3 _field4;
    _Bool _field5;
    _Bool _field6;
    struct ContextPlayerOptionOverrides _field7;
    struct Suppressions _field8;
    int _field9;
    int _field10;
    basic_string_90719d97 _field11;
    struct optional<spotify::player::PlayerLicense> _field12;
    struct flat_map<std::__1::basic_string<char>, spotify::json::encoded_value, std::__1::less<std::__1::basic_string<char>>, void> _field13;
    struct optional<spotify::player::PreparePlayOptions::ConnectTransferDetails> _field14;
};

struct ProductState;

struct PropertyManager {
    struct HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection> _field1;
    struct unique_ptr<ComScore::Storage, std::__1::default_delete<ComScore::Storage>> _field2;
    struct unique_ptr<ComScore::PropertySerializer, std::__1::default_delete<ComScore::PropertySerializer>> _field3;
    _Bool _field4;
    _Bool _field5;
    struct CriticalSection _field6;
    struct Atomic<int> _field7;
};

struct PropertySerializer;

struct ProxySettings {
    int _field1;
    int _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
};

struct PublisherConfiguration;

struct PublisherUniqueDeviceIdListener;

struct PublisherUniqueDeviceIdListenerImpl;

struct Random;

struct RefreshTokenCredentials {
    struct unique_ptr<spotify::connectivity::auth::credentials::RefreshTokenCredentials::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::RefreshTokenCredentials::Impl>> _field1;
};

struct RemoteConfigStorage {
    CDUnknownFunctionPointerType *_field1;
};

struct Request {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, spotify::tl::CaseInsensitive, spotify::tl::CaseInsensitive, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
    basic_string_90719d97 _field4;
};

struct RequestAccountingConfig {
    _Bool _field1;
};

struct RequestAccountingSink {
    struct weak_ptr<spotify::connectivity::netstat::RequestAccounting::Impl> _weak_impl;
};

struct Resolve {
    struct shared_ptr<spotify::cosmos::resolve::ResolveImpl> _impl;
};

struct ResolveImpl;

struct SPTAuthCacheId {
    unsigned char elements[16];
};

struct SPTAuthCacheSalt {
    unsigned char elements[4];
};

struct SPTAuthSchedulerBridge;

struct SPTEncoreIconCharacterSet {
    CDUnion_2be632f8 _field1;
};

struct SPTEncore_RGBA {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct SPTID3ParserHeaderStruct {
    char headerType[3];
    unsigned char version;
    unsigned char flags;
    unsigned char unknown;
    int synchsafeLength;
};

struct SPTIconCharacterSet {
    CDUnion_2be632f8 _field1;
};

struct SPTPersistentCacheRecordHeader {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct SPTStorageCacheId {
    unsigned char _field1[16];
};

struct SPTStorageCacheSalt {
    unsigned char _field1[4];
};

struct SPTTextAttributes {
    double _field1;
    double _field2;
};

struct SamsungSignInCredential {
    struct unique_ptr<spotify::connectivity::auth::credentials::SamsungSignInCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::SamsungSignInCredential::Impl>> _field1;
};

struct Scheduler {
    CDUnknownFunctionPointerType *_field1;
};

struct ScrobblerContainer;

struct Search {
    struct function<std::__1::vector<std::__1::shared_ptr<const spotify::metadata::TrackInfo>, std::__1::allocator<std::__1::shared_ptr<const spotify::metadata::TrackInfo>>>()> _field1;
    struct function<std::__1::vector<std::__1::shared_ptr<const spotify::metadata::TrackInfo>, std::__1::allocator<std::__1::shared_ptr<const spotify::metadata::TrackInfo>>>()> _field2;
};

struct SerializableCredentials {
    struct unique_ptr<spotify::connectivity::auth::SerializableCredentials::Impl, std::__1::default_delete<spotify::connectivity::auth::SerializableCredentials::Impl>> _impl;
};

struct ServerTime;

struct Session {
    CDUnknownFunctionPointerType *_field1;
};

struct SignupInfo {
    basic_string_90719d97 identifier_token;
    struct UserInfo user_info;
};

struct SkipToTrack {
    struct optional<std::__1::basic_string<char>> _field1;
    struct optional<unsigned long> _field2;
    struct optional<std::__1::basic_string<char>> _field3;
    struct optional<std::__1::basic_string<char>> _field4;
    struct optional<unsigned long> _field5;
};

struct SocialManager {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::social::SocialManager> _field2;
};

struct SocialManagerObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct SocialUserData;

struct SpotifyLink {
    int _field1;
    basic_string_90719d97 _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned int _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    union {
        struct gid<16, spotify::uri::detail::AlbumIdTag> _field1;
        struct gid<16, spotify::uri::detail::ArtistIdTag> _field2;
        struct gid<16, spotify::uri::detail::TrackIdTag> _field3;
        struct gid<16, spotify::uri::detail::PlaylistIdTag> _field4;
        int _field5;
        struct gid<16, spotify::uri::detail::AdIdTag> _field6;
        struct gid<16, spotify::uri::detail::AdIdTag> _field7;
        unsigned long long _field8;
        basic_string_90719d97 *_field9;
        int _field10;
        int _field11;
        struct gid<20, spotify::uri::detail::ImageIdTag> _field12;
        vector_553ebee1 *_field13;
        struct gid<16, spotify::uri::detail::ShowIdTag> _field14;
        struct gid<16, spotify::uri::detail::EpisodeIdTag> _field15;
        struct gid<16, spotify::uri::detail::DailyMixIdTag> _field16;
        struct gid<16, spotify::uri::detail::LicensorIdTag> _field17;
        struct gid<16, spotify::uri::detail::ZeroTapIdTag> _field18;
        int _field19;
        struct {
            struct vector<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>, std::__1::allocator<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>>> *_field1;
            int _field2;
        } _field20;
        struct {
            struct gid<20, spotify::uri::detail::FileIdTag> _field1;
            int _field2;
        } _field21;
        struct {
            int _field1;
            unsigned int _field2;
        } _field22;
        int _field23;
        int _field24;
    } _field8;
};

struct StackedAdvertisementMetadata;

struct StackedContentMetadata;

struct Storage;

struct StorageSystemIndexFile {
    CDUnknownFunctionPointerType *_field1;
};

struct StreamingAnalytics;

struct StreamingConfiguration;

struct StreamingExtendedAnalytics;

struct StreamingPublisherConfiguration;

struct String {
    struct CharPointer_UTF8 _field1;
};

struct StringArray {
    struct Array<ComScore::String, ComScore::DummyCriticalSection, 0> _field1;
};

struct StringPairArray {
    struct StringArray _field1;
    struct StringArray _field2;
    _Bool _field3;
};

struct Suppressions {
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field1;
};

struct SyncManager {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
};

struct Timer {
    struct shared_ptr<spotify::async::Timer::Impl> _field1;
};

struct TimerManager {
    CDUnknownFunctionPointerType *_field1;
};

struct TrackInfo {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::metadata::TrackInfo> _field2;
    struct MetadataModel *_field3;
    struct MutableState _field4;
    unsigned char _field5;
    int _field6;
    unsigned char _field7;
    _Bool _field8;
    basic_string_90719d97 _field9;
    unsigned int _field10;
};

struct TrackedLoggerImpl;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UInt8Range {
    unsigned char _field1;
    unsigned char _field2;
};

struct UserAgentParameters {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    struct optional<std::__1::basic_string<char>> _field4;
};

struct UserInfo {
    basic_string_90719d97 name;
    basic_string_90719d97 email;
    _Bool email_verified;
    basic_string_90719d97 birthdate;
    int gender;
    basic_string_90719d97 phone_number;
    _Bool phone_number_verified;
    _Bool email_already_registered;
};

struct VISREFColorExtractionConfiguration {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _google_crashlytics_FilesPayload {
    unsigned int files_count;
    struct _google_crashlytics_FilesPayload_File *files;
};

struct _google_crashlytics_Report {
    struct pb_bytes_array_s *sdk_version;
    struct pb_bytes_array_s *gmp_app_id;
    int platform;
    struct pb_bytes_array_s *installation_uuid;
    struct pb_bytes_array_s *build_version;
    struct pb_bytes_array_s *display_version;
    struct _google_crashlytics_FilesPayload apple_payload;
};

struct _logs_proto_mobilesdk_ios_ICoreConfiguration {
    _Bool has_configuration_type;
    int configuration_type;
    unsigned int sdk_service_installed_count;
    int *sdk_service_installed;
    struct pb_bytes_array_s *device_model;
    struct pb_bytes_array_s *app_id;
    struct pb_bytes_array_s *bundle_id;
    _Bool has_pod_name;
    int pod_name;
    struct pb_bytes_array_s *icore_version;
    struct pb_bytes_array_s *sdk_version;
    _Bool has_sdk_name;
    int sdk_name;
    _Bool has_app_count;
    int app_count;
    struct pb_bytes_array_s *os_version;
    struct pb_bytes_array_s *min_supported_ios_version;
    _Bool has_use_default_app;
    _Bool use_default_app;
    _Bool has_deployed_in_app_store;
    _Bool deployed_in_app_store;
    _Bool has_dynamic_framework_count;
    int dynamic_framework_count;
    struct pb_bytes_array_s *apple_framework_version;
    _Bool has_using_zip_file;
    _Bool using_zip_file;
    _Bool has_deployment_type;
    int deployment_type;
    struct pb_bytes_array_s *platform_info;
    _Bool has_swizzling_enabled;
    _Bool swizzling_enabled;
    _Bool has_using_gdt;
    _Bool using_gdt;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct aligned_struct<40, 8> {
    unsigned char _field1[40];
};

struct array<unsigned char, 16> {
    unsigned char _field1[16];
};

struct array<unsigned char, 4> {
    unsigned char _field1[4];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct cmp_ctx_s {
    unsigned char _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct connected_slot;

struct deque<float, std::__1::allocator<float>> {
    struct __split_buffer<float *, std::__1::allocator<float *>> {
        float **__first_;
        float **__begin_;
        float **__end_;
        struct __compressed_pair<float **, std::__1::allocator<float *>> {
            float **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<float>> {
        unsigned long long __value_;
    } __size_;
};

struct dl_info {
    char *_field1;
    void *_field2;
    char *_field3;
    void *_field4;
};

struct duration<long long, std::__1::ratio<1, 1000000>> {
    long long __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000>> {
    long long _field1;
};

struct duration<long long, std::__1::ratio<1, 1>> {
    long long __rep_;
};

struct error_category;

struct error_code {
    int _field1;
    struct error_category *_field2;
};

struct flat_map<std::__1::basic_string<char>, spotify::json::encoded_value, std::__1::less<std::__1::basic_string<char>>, void> {
    struct flat_tree<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::dtl::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> _field1;
};

struct flat_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, void> {
    struct flat_tree<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::dtl::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field1;
};

struct flat_tree<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::dtl::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> {
    struct Data {
        struct vector<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>, void> _field1;
    } _field1;
};

struct flat_tree<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::dtl::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct Data {
        struct vector<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>, void> _field1;
    } _field1;
};

struct function<bool ()> {
    struct __value_func<bool ()> {
        struct type _field1;
        struct __base<bool ()> *_field2;
    } _field1;
};

struct function<spotify::connectivity::auth::AccountInfo ()> {
    struct __value_func<spotify::connectivity::auth::AccountInfo ()> {
        struct type _field1;
        struct __base<spotify::connectivity::auth::AccountInfo ()> *_field2;
    } _field1;
};

struct function<std::__1::basic_string<char>()> {
    struct __value_func<std::__1::basic_string<char>()> {
        struct type _field1;
        struct __base<std::__1::basic_string<char>()> *_field2;
    } _field1;
};

struct function<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>()> {
    struct __value_func<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>()> {
        struct type _field1;
        struct __base<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>()> *_field2;
    } _field1;
};

struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> {
    struct __value_func<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> {
        struct type _field1;
        struct __base<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> *_field2;
    } _field1;
};

struct function<std::__1::vector<std::__1::shared_ptr<const spotify::metadata::TrackInfo>, std::__1::allocator<std::__1::shared_ptr<const spotify::metadata::TrackInfo>>>()> {
    struct __value_func<std::__1::vector<std::__1::shared_ptr<const spotify::metadata::TrackInfo>, std::__1::allocator<std::__1::shared_ptr<const spotify::metadata::TrackInfo>>>()> {
        struct type _field1;
        struct __base<std::__1::vector<std::__1::shared_ptr<const spotify::metadata::TrackInfo>, std::__1::allocator<std::__1::shared_ptr<const spotify::metadata::TrackInfo>>>()> *_field2;
    } _field1;
};

struct function<void ()> {
    struct __value_func<void ()> {
        struct type __buf_;
        struct __base<void ()> *__f_;
    } __f_;
};

struct function<void (const std::__1::basic_string<char>&)> {
    struct __value_func<void (const std::__1::basic_string<char>&)> {
        struct type __buf_;
        struct __base<void (const std::__1::basic_string<char>&)> *__f_;
    } __f_;
};

struct function<void (const std::__1::function<void ()>&)> {
    struct __value_func<void (const std::__1::function<void ()>&)> {
        struct type __buf_;
        struct __base<void (const std::__1::function<void ()>&)> *__f_;
    } __f_;
};

struct function<void (const std::__1::vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>>&, unsigned long long)> {
    struct __value_func<void (const std::__1::vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>>&, unsigned long long)> {
        struct type __buf_;
        struct __base<void (const std::__1::vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>>&, unsigned long long)> *__f_;
    } __f_;
};

struct function<void (spotify::hermes::HermesQuery *)> {
    struct __value_func<void (spotify::hermes::HermesQuery *)> {
        struct type _field1;
        struct __base<void (spotify::hermes::HermesQuery *)> *_field2;
    } _field1;
};

struct function<void (std::__1::optional<spotify::connectivity::auth::oauth::AccessToken>, std::__1::error_code)> {
    struct __value_func<void (std::__1::optional<spotify::connectivity::auth::oauth::AccessToken>, std::__1::error_code)> {
        struct type __buf_;
        struct __base<void (std::__1::optional<spotify::connectivity::auth::oauth::AccessToken>, std::__1::error_code)> *__f_;
    } __f_;
};

struct function<void (std::__1::variant<spotify::connectivity::auth::AuthenticateSuccess, spotify::connectivity::auth::LoginSuccess, spotify::connectivity::auth::AuthenticateCodeRequired, spotify::connectivity::auth::AuthenticateSignupRequired, spotify::connectivity::auth::AuthenticateFailure, spotify::connectivity::auth::LoginBootstrap>&&)> {
    struct __value_func<void (std::__1::variant<spotify::connectivity::auth::AuthenticateSuccess, spotify::connectivity::auth::LoginSuccess, spotify::connectivity::auth::AuthenticateCodeRequired, spotify::connectivity::auth::AuthenticateSignupRequired, spotify::connectivity::auth::AuthenticateFailure, spotify::connectivity::auth::LoginBootstrap>&&)> {
        struct type _field1;
        struct __base<void (std::__1::variant<spotify::connectivity::auth::AuthenticateSuccess, spotify::connectivity::auth::LoginSuccess, spotify::connectivity::auth::AuthenticateCodeRequired, spotify::connectivity::auth::AuthenticateSignupRequired, spotify::connectivity::auth::AuthenticateFailure, spotify::connectivity::auth::LoginBootstrap>&&)> *_field2;
    } _field1;
};

struct gid<16, spotify::uri::detail::AdIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::AlbumIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::ArtistIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::DailyMixIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::EpisodeIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::LicensorIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::PlaylistIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::ShowIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::TrackIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::ZeroTapIdTag> {
    unsigned char _field1[16];
};

struct gid<20, spotify::uri::detail::FileIdTag> {
    unsigned char _field1[20];
};

struct gid<20, spotify::uri::detail::ImageIdTag> {
    unsigned char _field1[20];
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct ifaddrs {
    struct ifaddrs *_field1;
    char *_field2;
    unsigned int _field3;
    struct sockaddr *_field4;
    struct sockaddr *_field5;
    struct sockaddr *_field6;
    void *_field7;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct io_context {
    struct service_registry *service_registry_;
    struct scheduler *impl_;
};

struct less<int>;

struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct once_flag {
    unsigned long long __state_;
};

struct optional<bool> {
    union {
        char _field1;
        _Bool _field2;
    } _field1;
    _Bool _field2;
};

struct optional<double> {
    union {
        char __null_state_;
        double __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::Identifier> {
    union {
        char __null_state_;
        struct Identifier __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::SignupInfo> {
    union {
        char __null_state_;
        struct SignupInfo __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::UserInfo> {
    union {
        char __null_state_;
        struct UserInfo __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::challenge::Code> {
    union {
        char __null_state_;
        struct Code __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::credentials::AppleSignInCredential> {
    union {
        char __null_state_;
        struct AppleSignInCredential __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::credentials::GoogleSignInCredential> {
    union {
        char __null_state_;
        struct GoogleSignInCredential __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::credentials::OneTimeToken> {
    union {
        char __null_state_;
        struct OneTimeToken __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::connectivity::auth::credentials::ParentChildCredential> {
    union {
        char __null_state_;
        struct ParentChildCredential __val_;
    } ;
    _Bool __engaged_;
};

struct optional<spotify::http::ConnectionType> {
    union {
        char _field1;
        int _field2;
    } _field1;
    _Bool _field2;
};

struct optional<spotify::player::ContextTrack> {
    union {
        char _field1;
        struct ContextTrack _field2;
    } _field1;
    _Bool _field2;
};

struct optional<spotify::player::PlaybackId> {
    union {
        char _field1;
        struct PlaybackId _field2;
    } _field1;
    _Bool _field2;
};

struct optional<spotify::player::PlayerLicense> {
    union {
        char _field1;
        struct PlayerLicense _field2;
    } _field1;
    _Bool _field2;
};

struct optional<spotify::player::PreparePlayOptions::ConnectTransferDetails> {
    union {
        char _field1;
        struct ConnectTransferDetails _field2;
    } _field1;
    _Bool _field2;
};

struct optional<std::__1::basic_string<char>> {
    union {
        char _field1;
        basic_string_90719d97 _field2;
    } _field1;
    _Bool _field2;
};

struct optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    union {
        char _field1;
        struct duration<long long, std::__1::ratio<1, 1000>> _field2;
    } _field1;
    _Bool _field2;
};

struct optional<unsigned char> {
    union {
        char _field1;
        unsigned char _field2;
    } _field1;
    _Bool _field2;
};

struct optional<unsigned int> {
    union {
        char _field1;
        unsigned int _field2;
    } _field1;
    _Bool _field2;
};

struct optional<unsigned long> {
    union {
        char _field1;
        unsigned long long _field2;
    } _field1;
    _Bool _field2;
};

struct optional_last_value<void>;

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>;

struct pair<std::__1::basic_string<char>, spotify::json::encoded_value>;

struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>>;

struct path {
    basic_string_90719d97 _field1;
};

struct pb_bytes_array_s;

struct scheduler;

struct scoped_connection {
    struct shared_ptr<spotify::signals::connection::shared_state> _state;
};

struct service_registry;

struct set<asio::ip::basic_endpoint<asio::ip::udp>, std::__1::less<asio::ip::basic_endpoint<asio::ip::udp>>, std::__1::allocator<asio::ip::basic_endpoint<asio::ip::udp>>> {
    struct __tree<asio::ip::basic_endpoint<asio::ip::udp>, std::__1::less<asio::ip::basic_endpoint<asio::ip::udp>>, std::__1::allocator<asio::ip::basic_endpoint<asio::ip::udp>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<asio::ip::basic_endpoint<asio::ip::udp>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<asio::ip::basic_endpoint<asio::ip::udp>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<ComScore::AdvertisementMetadata> {
    struct AdvertisementMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::AssetMetadata> {
    struct AssetMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::ClientConfiguration> {
    struct ClientConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::Configuration> {
    struct Configuration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::ContentMetadata> {
    struct ContentMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::OwnedArray<StreamingListenerImpl, ComScore::CriticalSection>> {
    struct OwnedArray<StreamingListenerImpl, ComScore::CriticalSection> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::PublisherConfiguration> {
    struct PublisherConfiguration *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ComScore::StackedAdvertisementMetadata> {
    struct StackedAdvertisementMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::StackedContentMetadata> {
    struct StackedContentMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::StreamingAnalytics> {
    struct StreamingAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::StreamingConfiguration> {
    struct StreamingConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::StreamingExtendedAnalytics> {
    struct StreamingExtendedAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::StreamingPublisherConfiguration> {
    struct StreamingPublisherConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<PublisherUniqueDeviceIdListenerImpl> {
    struct PublisherUniqueDeviceIdListenerImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const spotify::social::SocialUserData> {
    struct SocialUserData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<coreobjc::LogObserver> {
    struct LogObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::analytics::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::analytics::LoggerImpl> {
    struct LoggerImpl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::analytics::TrackedLoggerImpl> {
    struct TrackedLoggerImpl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::async::Timer::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::client::ApplicationStateTracker::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::connect::LocalPlaybackView> {
    struct LocalPlaybackView *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::connect::MdnsDevice>;

struct shared_ptr<spotify::connectivity::CredentialsStorage> {
    struct CredentialsStorage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::connectivity::auth::client_token::ClientTokenAcquirer> {
    struct ClientTokenAcquirer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::connectivity::auth::oauth::Client> {
    struct Client *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::connectivity::auth::objc::impl::SPTAuthSchedulerBridge> {
    struct SPTAuthSchedulerBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::connectivity::time::ServerTime> {
    struct ServerTime *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::cosmos::resolve::ResolveImpl> {
    struct ResolveImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::event_sender::EventSender> {
    struct EventSender *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::facebook::FacebookPermissions> {
    struct FacebookPermissions *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::facebook::FacebookServiceRequestFactory> {
    struct FacebookServiceRequestFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::facebook::FriendsMetadataRequest> {
    struct FriendsMetadataRequest *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::facebook::MeMetadataRequest> {
    struct MeMetadataRequest *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesHandler::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesMessage> {
    struct HermesMessage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesQuery> {
    struct HermesQuery *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesRequest> {
    struct HermesRequest *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::http::AppleConnectionFactory> {
    struct AppleConnectionFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::http::Connection> {
    struct Connection *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::http::ConnectionBuilder::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::http::ConnectionFactory> {
    struct ConnectionFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::metadata::AlbumInfo> {
    struct AlbumInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::metadata::ArtistInfo> {
    struct ArtistInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::metadata::MetadataTask> {
    struct MetadataTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::metadata::TrackInfo> {
    struct TrackInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::player::mft::MftCanPlayChecker> {
    struct MftCanPlayChecker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::product_state::ProductState> {
    struct ProductState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::security::Random> {
    struct Random *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::signals::connection::shared_state> {
    struct shared_state *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::signals::scoped_connection> {
    struct scoped_connection *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::shared_ptr<void>> {
    shared_ptr_b60d0e1e *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<spotify::palette::Swatch, std::__1::allocator<spotify::palette::Swatch>>> {
    struct vector<spotify::palette::Swatch, std::__1::allocator<spotify::palette::Swatch>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void *> {
    void **__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_state;

struct signal<void (), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct signal<void (bool, bool), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct signal<void (const spotify::playback::AudioDriverInfo &), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct signal<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct signal<void (spotify::facebook::ServiceEvent), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct signal<void (spotify::playback::VolumeChangeReason), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct signal<void (spotify::prefs::PrefEntry *), spotify::signals::optional_last_value<void>, int, std::__1::less<int>> {
    shared_ptr_b60d0e1e _field1;
    struct mutex _field2;
    struct slot_vector _field3;
    struct optional_last_value<void> _field4;
    struct less<int> _field5;
};

struct slot_vector {
    struct small_vector<spotify::signals::detail::connected_slot, 16, void, void> _field1;
    _Bool _field2;
};

struct small_vector<spotify::signals::detail::connected_slot, 16, void, void> {
    struct vector_alloc_holder<boost::container::small_vector_allocator<spotify::signals::detail::connected_slot, boost::container::new_allocator<void>, void>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1>> _field1;
    union aligned_struct_wrapper<40, 8> _field2;
    union aligned_struct_wrapper<40, 8> _field3[15];
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct span<const spotify::metadata::AlbumGroup> {
    struct AlbumGroup *_field1;
    unsigned long long _field2;
};

struct span<const spotify::uri::SpotifyLink> {
    struct SpotifyLink *_field1;
    unsigned long long _field2;
};

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct streamingConfigurationParams {
    struct StringArray _field1;
    _Bool _field2;
    long long _field3;
    long long _field4;
    _Bool _field5;
    struct Array<ComScore::HeartbeatInterval, ComScore::DummyCriticalSection, 0> _field6;
    struct StringPairArray _field7;
    _Bool _field8;
    long long _field9;
    _Bool _field10;
    long long _field11;
};

struct thread {
    struct _opaque_pthread_t *__t_;
};

struct time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000>> __d_;
};

struct timespec {
    long long _field1;
    long long _field2;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<ComScore::AdvertisementMetadata::Builder, std::__1::default_delete<ComScore::AdvertisementMetadata::Builder>> {
    struct __compressed_pair<ComScore::AdvertisementMetadata::Builder *, std::__1::default_delete<ComScore::AdvertisementMetadata::Builder>> {
        struct Builder *__value_;
    } __ptr_;
};

struct unique_ptr<ComScore::ContentMetadata::Builder, std::__1::default_delete<ComScore::ContentMetadata::Builder>> {
    struct __compressed_pair<ComScore::ContentMetadata::Builder *, std::__1::default_delete<ComScore::ContentMetadata::Builder>> {
        struct Builder *__value_;
    } __ptr_;
};

struct unique_ptr<ComScore::PropertySerializer, std::__1::default_delete<ComScore::PropertySerializer>> {
    struct __compressed_pair<ComScore::PropertySerializer *, std::__1::default_delete<ComScore::PropertySerializer>> {
        struct PropertySerializer *_field1;
    } _field1;
};

struct unique_ptr<ComScore::StackedAdvertisementMetadata::Builder, std::__1::default_delete<ComScore::StackedAdvertisementMetadata::Builder>> {
    struct __compressed_pair<ComScore::StackedAdvertisementMetadata::Builder *, std::__1::default_delete<ComScore::StackedAdvertisementMetadata::Builder>> {
        struct Builder *__value_;
    } __ptr_;
};

struct unique_ptr<ComScore::StackedContentMetadata::Builder, std::__1::default_delete<ComScore::StackedContentMetadata::Builder>> {
    struct __compressed_pair<ComScore::StackedContentMetadata::Builder *, std::__1::default_delete<ComScore::StackedContentMetadata::Builder>> {
        struct Builder *__value_;
    } __ptr_;
};

struct unique_ptr<ComScore::Storage, std::__1::default_delete<ComScore::Storage>> {
    struct __compressed_pair<ComScore::Storage *, std::__1::default_delete<ComScore::Storage>> {
        struct Storage *_field1;
    } _field1;
};

struct unique_ptr<asio::io_context::work, std::__1::default_delete<asio::io_context::work>> {
    struct __compressed_pair<asio::io_context::work *, std::__1::default_delete<asio::io_context::work>> {
        struct work *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>;

struct unique_ptr<spotify::async::Scheduler, std::__1::default_delete<spotify::async::Scheduler>> {
    struct __compressed_pair<spotify::async::Scheduler *, std::__1::default_delete<spotify::async::Scheduler>> {
        struct Scheduler *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::async::TimerManager, std::__1::default_delete<spotify::async::TimerManager>> {
    struct __compressed_pair<spotify::async::TimerManager *, std::__1::default_delete<spotify::async::TimerManager>> {
        struct TimerManager *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::client::Core, std::__1::default_delete<spotify::client::Core>> {
    struct __compressed_pair<spotify::client::Core *, std::__1::default_delete<spotify::client::Core>> {
        struct Core *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::client_features::ClientFeatureStack, std::__1::default_delete<spotify::client_features::ClientFeatureStack>> {
    struct __compressed_pair<spotify::client_features::ClientFeatureStack *, std::__1::default_delete<spotify::client_features::ClientFeatureStack>> {
        struct ClientFeatureStack *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::client_features::ClientFeatureStack::Impl, std::__1::default_delete<spotify::client_features::ClientFeatureStack::Impl>> {
    struct __compressed_pair<spotify::client_features::ClientFeatureStack::Impl *, std::__1::default_delete<spotify::client_features::ClientFeatureStack::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::connectivity::AccessTokenScope, std::__1::default_delete<spotify::connectivity::AccessTokenScope>> {
    struct __compressed_pair<spotify::connectivity::AccessTokenScope *, std::__1::default_delete<spotify::connectivity::AccessTokenScope>> {
        struct AccessTokenScope *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::ApplicationScope, std::__1::default_delete<spotify::connectivity::ApplicationScope>> {
    struct __compressed_pair<spotify::connectivity::ApplicationScope *, std::__1::default_delete<spotify::connectivity::ApplicationScope>> {
        struct ApplicationScope *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::ApplicationScope::Impl, std::__1::default_delete<spotify::connectivity::ApplicationScope::Impl>> {
    struct __compressed_pair<spotify::connectivity::ApplicationScope::Impl *, std::__1::default_delete<spotify::connectivity::ApplicationScope::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::connectivity::AuthenticatedScope, std::__1::default_delete<spotify::connectivity::AuthenticatedScope>> {
    struct __compressed_pair<spotify::connectivity::AuthenticatedScope *, std::__1::default_delete<spotify::connectivity::AuthenticatedScope>> {
        struct AuthenticatedScope *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::AuthenticatedScope::Impl, std::__1::default_delete<spotify::connectivity::AuthenticatedScope::Impl>> {
    struct __compressed_pair<spotify::connectivity::AuthenticatedScope::Impl *, std::__1::default_delete<spotify::connectivity::AuthenticatedScope::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::connectivity::ConnectionTypeProvider, std::__1::default_delete<spotify::connectivity::ConnectionTypeProvider>> {
    struct __compressed_pair<spotify::connectivity::ConnectionTypeProvider *, std::__1::default_delete<spotify::connectivity::ConnectionTypeProvider>> {
        struct ConnectionTypeProvider *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::ConnectivityManager, std::__1::default_delete<spotify::connectivity::ConnectivityManager>> {
    struct __compressed_pair<spotify::connectivity::ConnectivityManager *, std::__1::default_delete<spotify::connectivity::ConnectivityManager>> {
        struct ConnectivityManager *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::ConnectivityManager::Impl, std::__1::default_delete<spotify::connectivity::ConnectivityManager::Impl>> {
    struct __compressed_pair<spotify::connectivity::ConnectivityManager::Impl *, std::__1::default_delete<spotify::connectivity::ConnectivityManager::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::connectivity::ConnectivityPolicyProvider, std::__1::default_delete<spotify::connectivity::ConnectivityPolicyProvider>> {
    struct __compressed_pair<spotify::connectivity::ConnectivityPolicyProvider *, std::__1::default_delete<spotify::connectivity::ConnectivityPolicyProvider>> {
        struct ConnectivityPolicyProvider *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::AuthSession, std::__1::default_delete<spotify::connectivity::auth::AuthSession>> {
    struct __compressed_pair<spotify::connectivity::auth::AuthSession *, std::__1::default_delete<spotify::connectivity::auth::AuthSession>> {
        struct AuthSession *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::Identifier::Impl, std::__1::default_delete<spotify::connectivity::auth::Identifier::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::Identifier::Impl *, std::__1::default_delete<spotify::connectivity::auth::Identifier::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::LoginController, std::__1::default_delete<spotify::connectivity::auth::LoginController>> {
    struct __compressed_pair<spotify::connectivity::auth::LoginController *, std::__1::default_delete<spotify::connectivity::auth::LoginController>> {
        struct LoginController *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::LoginCredentials::Impl, std::__1::default_delete<spotify::connectivity::auth::LoginCredentials::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::LoginCredentials::Impl *, std::__1::default_delete<spotify::connectivity::auth::LoginCredentials::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::SerializableCredentials::Impl, std::__1::default_delete<spotify::connectivity::auth::SerializableCredentials::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::SerializableCredentials::Impl *, std::__1::default_delete<spotify::connectivity::auth::SerializableCredentials::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::Session, std::__1::default_delete<spotify::connectivity::auth::Session>> {
    struct __compressed_pair<spotify::connectivity::auth::Session *, std::__1::default_delete<spotify::connectivity::auth::Session>> {
        struct Session *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::accesspoint::AccesspointResolver, std::__1::default_delete<spotify::connectivity::auth::accesspoint::AccesspointResolver>> {
    struct __compressed_pair<spotify::connectivity::auth::accesspoint::AccesspointResolver *, std::__1::default_delete<spotify::connectivity::auth::accesspoint::AccesspointResolver>> {
        struct AccesspointResolver *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::credentials::AppleSignInCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::AppleSignInCredential::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::credentials::AppleSignInCredential::Impl *, std::__1::default_delete<spotify::connectivity::auth::credentials::AppleSignInCredential::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::credentials::GoogleSignInCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::GoogleSignInCredential::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::credentials::GoogleSignInCredential::Impl *, std::__1::default_delete<spotify::connectivity::auth::credentials::GoogleSignInCredential::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::credentials::OneTimeToken::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::OneTimeToken::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::credentials::OneTimeToken::Impl *, std::__1::default_delete<spotify::connectivity::auth::credentials::OneTimeToken::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::credentials::ParentChildCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::ParentChildCredential::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::credentials::ParentChildCredential::Impl *, std::__1::default_delete<spotify::connectivity::auth::credentials::ParentChildCredential::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::connectivity::auth::credentials::RefreshTokenCredentials::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::RefreshTokenCredentials::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::credentials::RefreshTokenCredentials::Impl *, std::__1::default_delete<spotify::connectivity::auth::credentials::RefreshTokenCredentials::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::connectivity::auth::credentials::SamsungSignInCredential::Impl, std::__1::default_delete<spotify::connectivity::auth::credentials::SamsungSignInCredential::Impl>> {
    struct __compressed_pair<spotify::connectivity::auth::credentials::SamsungSignInCredential::Impl *, std::__1::default_delete<spotify::connectivity::auth::credentials::SamsungSignInCredential::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::connectivity::oauth::objc::SPTAuthSchedulerBridge, std::__1::default_delete<spotify::connectivity::oauth::objc::SPTAuthSchedulerBridge>> {
    struct __compressed_pair<spotify::connectivity::oauth::objc::SPTAuthSchedulerBridge *, std::__1::default_delete<spotify::connectivity::oauth::objc::SPTAuthSchedulerBridge>> {
        struct SPTAuthSchedulerBridge *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::metadata::MetadataEnv, std::__1::default_delete<spotify::metadata::MetadataEnv>> {
    struct __compressed_pair<spotify::metadata::MetadataEnv *, std::__1::default_delete<spotify::metadata::MetadataEnv>> {
        struct MetadataEnv *_field1;
    } _field1;
};

struct unique_ptr<spotify::metadata::MetadataModel::Impl, std::__1::default_delete<spotify::metadata::MetadataModel::Impl>> {
    struct __compressed_pair<spotify::metadata::MetadataModel::Impl *, std::__1::default_delete<spotify::metadata::MetadataModel::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::playback::AudioDriver, std::__1::default_delete<spotify::playback::AudioDriver>> {
    struct __compressed_pair<spotify::playback::AudioDriver *, std::__1::default_delete<spotify::playback::AudioDriver>> {
        struct AudioDriver *_field1;
    } _field1;
};

struct unique_ptr<spotify::playback::objc::IOSAudioDriver, std::__1::default_delete<spotify::playback::objc::IOSAudioDriver>> {
    struct __compressed_pair<spotify::playback::objc::IOSAudioDriver *, std::__1::default_delete<spotify::playback::objc::IOSAudioDriver>> {
        struct IOSAudioDriver *_field1;
    } _field1;
};

struct unique_ptr<spotify::prefs::PrefStore, std::__1::default_delete<spotify::prefs::PrefStore>> {
    struct __compressed_pair<spotify::prefs::PrefStore *, std::__1::default_delete<spotify::prefs::PrefStore>> {
        struct PrefStore *_field1;
    } _field1;
};

struct unique_ptr<spotify::prefs::Prefs, std::__1::default_delete<spotify::prefs::Prefs>> {
    struct __compressed_pair<spotify::prefs::Prefs *, std::__1::default_delete<spotify::prefs::Prefs>> {
        struct Prefs *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::thread, std::__1::default_delete<std::__1::thread>> {
    struct __compressed_pair<std::__1::thread *, std::__1::default_delete<std::__1::thread>> {
        struct thread *__value_;
    } __ptr_;
};

struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::Credential, spotify::facebook::proto::ConfigReply>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::DisableRequest, spotify::facebook::proto::Credential>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::EnableRequest, spotify::facebook::proto::EnableReply>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::InspectCredentialRequest, spotify::facebook::proto::InspectCredentialReply>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UpdateUserStateRequest, spotify::facebook::proto::UserState>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<spotify::facebook::FacebookServiceRequest<spotify::facebook::proto::UserState, spotify::facebook::proto::UserState>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, fbsdk::MTensor, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, fbsdk::MTensor>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, spotify::tl::CaseInsensitive, spotify::tl::CaseInsensitive, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, spotify::tl::CaseInsensitive, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, spotify::tl::CaseInsensitive, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, spotify::tl::CaseInsensitive, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, spotify::tl::CaseInsensitive, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<asio::basic_waitable_timer<std::__1::chrono::system_clock, asio::wait_traits<std::__1::chrono::system_clock>, asio::executor>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct variant<spotify::connectivity::auth::Identifier, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
    struct __impl<spotify::connectivity::auth::Identifier, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
        union __union<std::__1::__variant_detail::_Trait::_Available, 0, spotify::connectivity::auth::Identifier, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
            char _field1;
            struct __alt<0, spotify::connectivity::auth::Identifier> {
                struct Identifier _field1;
            } _field2;
            union __union<std::__1::__variant_detail::_Trait::_Available, 1, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                char _field1;
                struct __alt<1, spotify::connectivity::auth::credentials::AppleSignInCredential> {
                    struct AppleSignInCredential _field1;
                } _field2;
                union __union<std::__1::__variant_detail::_Trait::_Available, 2, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                    char _field1;
                    struct __alt<2, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore> {
                        struct AutologinFromCredentialsStore _field1;
                    } _field2;
                    union __union<std::__1::__variant_detail::_Trait::_Available, 3, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                        char _field1;
                        struct __alt<3, spotify::connectivity::auth::credentials::GoogleSignInCredential> {
                            struct GoogleSignInCredential _field1;
                        } _field2;
                        union __union<std::__1::__variant_detail::_Trait::_Available, 4, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                            char _field1;
                            struct __alt<4, spotify::connectivity::auth::credentials::OneTimeToken> {
                                struct OneTimeToken _field1;
                            } _field2;
                            union __union<std::__1::__variant_detail::_Trait::_Available, 5, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                                char _field1;
                                struct __alt<5, spotify::connectivity::auth::credentials::ParentChildCredential> {
                                    struct ParentChildCredential _field1;
                                } _field2;
                                union __union<std::__1::__variant_detail::_Trait::_Available, 6, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                                    char _field1;
                                    struct __alt<6, spotify::connectivity::auth::credentials::RefreshTokenCredentials> {
                                        struct RefreshTokenCredentials _field1;
                                    } _field2;
                                    union __union<std::__1::__variant_detail::_Trait::_Available, 7, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                                        char _field1;
                                        struct __alt<7, spotify::connectivity::auth::credentials::SamsungSignInCredential> {
                                            struct SamsungSignInCredential _field1;
                                        } _field2;
                                        union __union<std::__1::__variant_detail::_Trait::_Available, 8, spotify::connectivity::auth::LoginCredentials> {
                                            char _field1;
                                            struct __alt<8, spotify::connectivity::auth::LoginCredentials> {
                                                struct LoginCredentials _field1;
                                            } _field2;
                                            union __union<std::__1::__variant_detail::_Trait::_Available, 9> _field3;
                                        } _field3;
                                    } _field3;
                                } _field3;
                            } _field3;
                        } _field3;
                    } _field3;
                } _field3;
            } _field3;
        } _field1;
        unsigned int _field2;
    } _field1;
};

struct vector<(anonymous namespace)::LifetimeStorageEntry, std::__1::allocator<(anonymous namespace)::LifetimeStorageEntry>> {
    struct LifetimeStorageEntry *__begin_;
    struct LifetimeStorageEntry *__end_;
    struct __compressed_pair<(anonymous namespace)::LifetimeStorageEntry *, std::__1::allocator<(anonymous namespace)::LifetimeStorageEntry>> {
        struct LifetimeStorageEntry *__value_;
    } __end_cap_;
};

struct vector<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>, void> {
    struct vector_alloc_holder<boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1>> _field1;
};

struct vector<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>, void> {
    struct vector_alloc_holder<boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1>> _field1;
};

struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> {
    struct AlbumGroup *_field1;
    struct AlbumGroup *_field2;
    struct __compressed_pair<spotify::metadata::AlbumGroup *, std::__1::allocator<spotify::metadata::AlbumGroup>> {
        struct AlbumGroup *_field1;
    } _field3;
};

struct vector<spotify::metadata::AlbumMetadata::Disc, std::__1::allocator<spotify::metadata::AlbumMetadata::Disc>> {
    struct Disc *_field1;
    struct Disc *_field2;
    struct __compressed_pair<spotify::metadata::AlbumMetadata::Disc *, std::__1::allocator<spotify::metadata::AlbumMetadata::Disc>> {
        struct Disc *_field1;
    } _field3;
};

struct vector<spotify::metadata::BiographyOrReview, std::__1::allocator<spotify::metadata::BiographyOrReview>> {
    struct BiographyOrReview *_field1;
    struct BiographyOrReview *_field2;
    struct __compressed_pair<spotify::metadata::BiographyOrReview *, std::__1::allocator<spotify::metadata::BiographyOrReview>> {
        struct BiographyOrReview *_field1;
    } _field3;
};

struct vector<spotify::palette::Swatch, std::__1::allocator<spotify::palette::Swatch>>;

struct vector<spotify::player::ContextTrack, std::__1::allocator<spotify::player::ContextTrack>> {
    struct ContextTrack *_field1;
    struct ContextTrack *_field2;
    struct __compressed_pair<spotify::player::ContextTrack *, std::__1::allocator<spotify::player::ContextTrack>> {
        struct ContextTrack *_field1;
    } _field3;
};

struct vector<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>, std::__1::allocator<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>>>;

struct vector<spotify::uri::SpotifyLink, std::__1::allocator<spotify::uri::SpotifyLink>> {
    struct SpotifyLink *_field1;
    struct SpotifyLink *_field2;
    struct __compressed_pair<spotify::uri::SpotifyLink *, std::__1::allocator<spotify::uri::SpotifyLink>> {
        struct SpotifyLink *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *__begin_;
    basic_string_90719d97 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>, std::__1::allocator<std::__1::pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>>> {
    struct pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection> *_field1;
    struct pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection> *_field2;
    struct __compressed_pair<std::__1::pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>*, std::__1::allocator<std::__1::pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection>>> {
        struct pair<spotify::playback::AudioVolumeControl *, spotify::signals::connection> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>> {
    struct shared_ptr<spotify::connect::MdnsDevice> *__begin_;
    struct shared_ptr<spotify::connect::MdnsDevice> *__end_;
    struct __compressed_pair<std::__1::shared_ptr<spotify::connect::MdnsDevice>*, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>> {
        struct shared_ptr<spotify::connect::MdnsDevice> *__value_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>, std::__1::allocator<std::__1::unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>>> {
    struct unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>> *_field1;
    struct unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>*, std::__1::allocator<std::__1::unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>>>> {
        struct unique_ptr<spotify::analytics::PendingMessageStorageImpl::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorageImpl::PendingMessage>> *_field1;
    } _field3;
};

struct vector_alloc_holder<boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1>> {
    struct pair<std::__1::basic_string<char>, spotify::json::encoded_value> *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct vector_alloc_holder<boost::container::new_allocator<boost::container::dtl::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1>> {
    struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct vector_alloc_holder<boost::container::small_vector_allocator<spotify::signals::detail::connected_slot, boost::container::new_allocator<void>, void>, unsigned long, boost::move_detail::integral_constant<unsigned int, 1>> {
    struct connected_slot *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct weak_ptr<spotify::connect::LocalPlaybackView> {
    struct LocalPlaybackView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::connectivity::auth::client_token::ClientTokenAcquirer> {
    struct ClientTokenAcquirer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::connectivity::auth::objc::ConnectivityPolicyProviderBridge> {
    struct ConnectivityPolicyProviderBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::connectivity::netstat::RequestAccounting::Impl> {
    struct Impl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::connectivity::objc::ConnectionTypeProviderBridge> {
    struct ConnectionTypeProviderBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::connectivity::objc::ConnectivityPolicyProviderBridge> {
    struct ConnectivityPolicyProviderBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::facebook::FacebookService> {
    struct FacebookService *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::http::AppleConnectionFactory> {
    struct AppleConnectionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::metadata::AlbumInfo> {
    struct AlbumInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::metadata::ArtistInfo> {
    struct ArtistInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::metadata::TrackInfo> {
    struct TrackInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::social::SocialManager> {
    struct SocialManager *_field1;
    struct __shared_weak_count *_field2;
};

struct work;

#if 0
// Names with conflicting types:
typedef struct {
    int _field1;
    basic_string_90719d97 _field2;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, spotify::tl::CaseInsensitive, spotify::tl::CaseInsensitive, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
    basic_string_90719d97 _field4;
} Response_c081b9fc;

typedef struct {
    int _field1;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, spotify::tl::CaseInsensitive, spotify::tl::CaseInsensitive, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
    basic_string_90719d97 _field3;
} Response_b29bb4de;

typedef struct {
    struct CriticalSection _field1;
    struct ClientConfigurationParams _field2;
} Builder_32a9f4d8;

typedef struct {
    struct CriticalSection _field1;
    struct streamingConfigurationParams _field2;
} Builder_e82241c2;

typedef struct {
    struct AuthenticationConfig {
        basic_string_90719d97 _field1;
    } _field1;
    struct CacheConfig _field2;
    struct DeviceConfig _field3;
    struct ApplicationConfig _field4;
    struct NetworkConfig _field5;
    struct PerformanceConfig _field6;
    struct ClientTokenInfo _field7;
    function_574b1799 _field8;
} Configuration_d7d8949a;

typedef struct {
    struct UserAgentParameters _field1;
    basic_string_90719d97 _field2;
} Configuration_8f369f2b;

typedef struct {
    struct ClientVersionConfig _field1;
    struct CacheConfig _field2;
    struct AuthenticationConfig {
        basic_string_90719d97 _field1;
        basic_string_90719d97 _field2;
    } _field3;
    struct RequestAccountingConfig _field4;
    struct Configuration {
        struct UserAgentParameters _field1;
        basic_string_90719d97 _field2;
    } _field5;
} Configuration_e2c0990e;

typedef struct {
    struct Configuration {
        struct UserAgentParameters _field1;
        basic_string_90719d97 _field2;
    } _field1;
} Configuration_5f5d6941;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned int framesProcessed;
    float cdfScaledLevel;
} CDStruct_3d0a518a;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
} CDStruct_7787c858;

typedef struct {
    double broadcastRequestTimeout;
    double applicationDeleteTimeout;
    double applicationStartTimeout;
    unsigned long long maxConnectedAppsCount;
    unsigned long long defaultStubButtonWeight;
} CDStruct_35e1d499;

typedef struct {
    double minimumValue;
    double maximumValue;
} CDStruct_5a28e70a;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long x;
    long long y;
} CDStruct_f261e59c;

typedef struct {
    CDStruct_3412e649 x;
    CDStruct_3412e649 y;
    CDStruct_3412e649 z;
    CDStruct_3412e649 magnitude;
} CDStruct_93d588b8;

typedef struct {
    CDStruct_198678f7 _field1;
    CDStruct_198678f7 _field2;
} CDStruct_3c1748cc;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double min;
    double max;
    double mean;
    double standardDeviation;
} CDStruct_3412e649;

typedef struct {
    double min;
    double mid;
    double max;
    double axMax;
} CDStruct_63798c11;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct function<void ()> {
    struct __value_func<void ()> {
        struct type __buf_;
        struct __base<void ()> *__f_;
    } __f_;
} function_84aba934;

typedef struct function<void (const std::__1::basic_string<char>&)> {
    struct __value_func<void (const std::__1::basic_string<char>&)> {
        struct type __buf_;
        struct __base<void (const std::__1::basic_string<char>&)> *__f_;
    } __f_;
} function_574b1799;

typedef struct function<void (const std::__1::function<void ()>&)> {
    struct __value_func<void (const std::__1::function<void ()>&)> {
        struct type __buf_;
        struct __base<void (const std::__1::function<void ()>&)> *__f_;
    } __f_;
} function_e8ecaf02;

typedef struct function<void (const std::__1::vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>>&, unsigned long long)> {
    struct __value_func<void (const std::__1::vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>>&, unsigned long long)> {
        struct type __buf_;
        struct __base<void (const std::__1::vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>>&, unsigned long long)> *__f_;
    } __f_;
} function_bc4a390e;

typedef struct function<void (std::__1::optional<spotify::connectivity::auth::oauth::AccessToken>, std::__1::error_code)> {
    struct __value_func<void (std::__1::optional<spotify::connectivity::auth::oauth::AccessToken>, std::__1::error_code)> {
        struct type __buf_;
        struct __base<void (std::__1::optional<spotify::connectivity::auth::oauth::AccessToken>, std::__1::error_code)> *__f_;
    } __f_;
} function_88b465b1;

typedef struct function<void (std::__1::variant<spotify::connectivity::auth::AuthenticateSuccess, spotify::connectivity::auth::LoginSuccess, spotify::connectivity::auth::AuthenticateCodeRequired, spotify::connectivity::auth::AuthenticateSignupRequired, spotify::connectivity::auth::AuthenticateFailure, spotify::connectivity::auth::LoginBootstrap>&&)> {
    struct __value_func<void (std::__1::variant<spotify::connectivity::auth::AuthenticateSuccess, spotify::connectivity::auth::LoginSuccess, spotify::connectivity::auth::AuthenticateCodeRequired, spotify::connectivity::auth::AuthenticateSignupRequired, spotify::connectivity::auth::AuthenticateFailure, spotify::connectivity::auth::LoginBootstrap>&&)> {
        struct type _field1;
        struct __base<void (std::__1::variant<spotify::connectivity::auth::AuthenticateSuccess, spotify::connectivity::auth::LoginSuccess, spotify::connectivity::auth::AuthenticateCodeRequired, spotify::connectivity::auth::AuthenticateSignupRequired, spotify::connectivity::auth::AuthenticateFailure, spotify::connectivity::auth::LoginBootstrap>&&)> *_field2;
    } _field1;
} function_05dfbad0;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_0edfe763;

typedef struct optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    union {
        char _field1;
        struct duration<long long, std::__1::ratio<1, 1000>> _field2;
    } _field1;
    _Bool _field2;
} optional_331450e3;

typedef struct shared_ptr<ComScore::AdvertisementMetadata> {
    struct AdvertisementMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_141bbac6;

typedef struct shared_ptr<ComScore::AssetMetadata> {
    struct AssetMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4c986b25;

typedef struct shared_ptr<ComScore::ClientConfiguration> {
    struct ClientConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dd675cf3;

typedef struct shared_ptr<ComScore::Configuration> {
    struct Configuration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c176f907;

typedef struct shared_ptr<ComScore::ContentMetadata> {
    struct ContentMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4497e35b;

typedef struct shared_ptr<ComScore::OwnedArray<StreamingListenerImpl, ComScore::CriticalSection>> {
    struct OwnedArray<StreamingListenerImpl, ComScore::CriticalSection> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_71a59777;

typedef struct shared_ptr<ComScore::PublisherConfiguration> {
    struct PublisherConfiguration *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3f1925d0;

typedef struct shared_ptr<ComScore::StackedAdvertisementMetadata> {
    struct StackedAdvertisementMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c0a0f08b;

typedef struct shared_ptr<ComScore::StackedContentMetadata> {
    struct StackedContentMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5260ea14;

typedef struct shared_ptr<ComScore::StreamingAnalytics> {
    struct StreamingAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_cb674631;

typedef struct shared_ptr<ComScore::StreamingConfiguration> {
    struct StreamingConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f29d09f4;

typedef struct shared_ptr<ComScore::StreamingExtendedAnalytics> {
    struct StreamingExtendedAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_09b4edf3;

typedef struct shared_ptr<ComScore::StreamingPublisherConfiguration> {
    struct StreamingPublisherConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0fb1d05e;

typedef struct shared_ptr<PublisherUniqueDeviceIdListenerImpl> {
    struct PublisherUniqueDeviceIdListenerImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_70a56b18;

typedef struct shared_ptr<const spotify::social::SocialUserData> {
    struct SocialUserData *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_464e3128;

typedef struct shared_ptr<coreobjc::LogObserver> {
    struct LogObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_97588a64;

typedef struct shared_ptr<spotify::analytics::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0bb93f61;

typedef struct shared_ptr<spotify::connect::LocalPlaybackView> {
    struct LocalPlaybackView *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7793959c;

typedef struct shared_ptr<spotify::connectivity::CredentialsStorage> {
    struct CredentialsStorage *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_23ecd02a;

typedef struct shared_ptr<spotify::connectivity::auth::client_token::ClientTokenAcquirer> {
    struct ClientTokenAcquirer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_57e77949;

typedef struct shared_ptr<spotify::connectivity::auth::oauth::Client> {
    struct Client *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8d7bf210;

typedef struct shared_ptr<spotify::connectivity::time::ServerTime> {
    struct ServerTime *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1e0d9089;

typedef struct shared_ptr<spotify::event_sender::EventSender> {
    struct EventSender *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dca46e91;

typedef struct shared_ptr<spotify::http::AppleConnectionFactory> {
    struct AppleConnectionFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_04bee604;

typedef struct shared_ptr<spotify::http::Connection> {
    struct Connection *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d5d571b3;

typedef struct shared_ptr<spotify::metadata::MetadataTask> {
    struct MetadataTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6008c08c;

typedef struct shared_ptr<spotify::player::mft::MftCanPlayChecker> {
    struct MftCanPlayChecker *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c81f7823;

typedef struct shared_ptr<spotify::product_state::ProductState> {
    struct ProductState *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2175cb8d;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct span<const spotify::metadata::AlbumGroup> {
    struct AlbumGroup *_field1;
    unsigned long long _field2;
} span_c9060bd8;

typedef struct span<const spotify::uri::SpotifyLink> {
    struct SpotifyLink *_field1;
    unsigned long long _field2;
} span_60459498;

typedef struct unique_ptr<spotify::connectivity::ConnectionTypeProvider, std::__1::default_delete<spotify::connectivity::ConnectionTypeProvider>> {
    struct __compressed_pair<spotify::connectivity::ConnectionTypeProvider *, std::__1::default_delete<spotify::connectivity::ConnectionTypeProvider>> {
        struct ConnectionTypeProvider *__value_;
    } __ptr_;
} unique_ptr_3396162c;

typedef struct unique_ptr<spotify::connectivity::ConnectivityPolicyProvider, std::__1::default_delete<spotify::connectivity::ConnectivityPolicyProvider>> {
    struct __compressed_pair<spotify::connectivity::ConnectivityPolicyProvider *, std::__1::default_delete<spotify::connectivity::ConnectivityPolicyProvider>> {
        struct ConnectivityPolicyProvider *__value_;
    } __ptr_;
} unique_ptr_a4132aba;

typedef struct unique_ptr<spotify::connectivity::auth::AuthSession, std::__1::default_delete<spotify::connectivity::auth::AuthSession>> {
    struct __compressed_pair<spotify::connectivity::auth::AuthSession *, std::__1::default_delete<spotify::connectivity::auth::AuthSession>> {
        struct AuthSession *__value_;
    } __ptr_;
} unique_ptr_31f72f11;

typedef struct unique_ptr<spotify::connectivity::auth::LoginController, std::__1::default_delete<spotify::connectivity::auth::LoginController>> {
    struct __compressed_pair<spotify::connectivity::auth::LoginController *, std::__1::default_delete<spotify::connectivity::auth::LoginController>> {
        struct LoginController *__value_;
    } __ptr_;
} unique_ptr_97a42db5;

typedef struct unique_ptr<spotify::connectivity::auth::Session, std::__1::default_delete<spotify::connectivity::auth::Session>> {
    struct __compressed_pair<spotify::connectivity::auth::Session *, std::__1::default_delete<spotify::connectivity::auth::Session>> {
        struct Session *__value_;
    } __ptr_;
} unique_ptr_c7ae8056;

typedef struct unique_ptr<spotify::playback::AudioDriver, std::__1::default_delete<spotify::playback::AudioDriver>> {
    struct __compressed_pair<spotify::playback::AudioDriver *, std::__1::default_delete<spotify::playback::AudioDriver>> {
        struct AudioDriver *_field1;
    } _field1;
} unique_ptr_b9a412cd;

typedef struct unique_ptr<spotify::playback::objc::IOSAudioDriver, std::__1::default_delete<spotify::playback::objc::IOSAudioDriver>> {
    struct __compressed_pair<spotify::playback::objc::IOSAudioDriver *, std::__1::default_delete<spotify::playback::objc::IOSAudioDriver>> {
        struct IOSAudioDriver *_field1;
    } _field1;
} unique_ptr_164a527f;

typedef struct unordered_map<std::__1::basic_string<char>, fbsdk::MTensor, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, fbsdk::MTensor>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, fbsdk::MTensor>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_32d37657;

typedef struct variant<spotify::connectivity::auth::Identifier, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
    struct __impl<spotify::connectivity::auth::Identifier, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
        union __union<std::__1::__variant_detail::_Trait::_Available, 0, spotify::connectivity::auth::Identifier, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
            char _field1;
            struct __alt<0, spotify::connectivity::auth::Identifier> {
                struct Identifier _field1;
            } _field2;
            union __union<std::__1::__variant_detail::_Trait::_Available, 1, spotify::connectivity::auth::credentials::AppleSignInCredential, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                char _field1;
                struct __alt<1, spotify::connectivity::auth::credentials::AppleSignInCredential> {
                    struct AppleSignInCredential _field1;
                } _field2;
                union __union<std::__1::__variant_detail::_Trait::_Available, 2, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                    char _field1;
                    struct __alt<2, spotify::connectivity::auth::credentials::AutologinFromCredentialsStore> {
                        struct AutologinFromCredentialsStore _field1;
                    } _field2;
                    union __union<std::__1::__variant_detail::_Trait::_Available, 3, spotify::connectivity::auth::credentials::GoogleSignInCredential, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                        char _field1;
                        struct __alt<3, spotify::connectivity::auth::credentials::GoogleSignInCredential> {
                            struct GoogleSignInCredential _field1;
                        } _field2;
                        union __union<std::__1::__variant_detail::_Trait::_Available, 4, spotify::connectivity::auth::credentials::OneTimeToken, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                            char _field1;
                            struct __alt<4, spotify::connectivity::auth::credentials::OneTimeToken> {
                                struct OneTimeToken _field1;
                            } _field2;
                            union __union<std::__1::__variant_detail::_Trait::_Available, 5, spotify::connectivity::auth::credentials::ParentChildCredential, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                                char _field1;
                                struct __alt<5, spotify::connectivity::auth::credentials::ParentChildCredential> {
                                    struct ParentChildCredential _field1;
                                } _field2;
                                union __union<std::__1::__variant_detail::_Trait::_Available, 6, spotify::connectivity::auth::credentials::RefreshTokenCredentials, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                                    char _field1;
                                    struct __alt<6, spotify::connectivity::auth::credentials::RefreshTokenCredentials> {
                                        struct RefreshTokenCredentials _field1;
                                    } _field2;
                                    union __union<std::__1::__variant_detail::_Trait::_Available, 7, spotify::connectivity::auth::credentials::SamsungSignInCredential, spotify::connectivity::auth::LoginCredentials> {
                                        char _field1;
                                        struct __alt<7, spotify::connectivity::auth::credentials::SamsungSignInCredential> {
                                            struct SamsungSignInCredential _field1;
                                        } _field2;
                                        union __union<std::__1::__variant_detail::_Trait::_Available, 8, spotify::connectivity::auth::LoginCredentials> {
                                            char _field1;
                                            struct __alt<8, spotify::connectivity::auth::LoginCredentials> {
                                                struct LoginCredentials _field1;
                                            } _field2;
                                            union __union<std::__1::__variant_detail::_Trait::_Available, 9> _field3;
                                        } _field3;
                                    } _field3;
                                } _field3;
                            } _field3;
                        } _field3;
                    } _field3;
                } _field3;
            } _field3;
        } _field1;
        unsigned int _field2;
    } _field1;
} variant_a76687c1;

typedef struct vector<spotify::uri::SpotifyLink, std::__1::allocator<spotify::uri::SpotifyLink>> {
    struct SpotifyLink *_field1;
    struct SpotifyLink *_field2;
    struct __compressed_pair<spotify::uri::SpotifyLink *, std::__1::allocator<spotify::uri::SpotifyLink>> {
        struct SpotifyLink *_field1;
    } _field3;
} vector_553ebee1;

typedef struct vector<std::__1::shared_ptr<spotify::connect::MdnsDevice>, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>> {
    struct shared_ptr<spotify::connect::MdnsDevice> *__begin_;
    struct shared_ptr<spotify::connect::MdnsDevice> *__end_;
    struct __compressed_pair<std::__1::shared_ptr<spotify::connect::MdnsDevice>*, std::__1::allocator<std::__1::shared_ptr<spotify::connect::MdnsDevice>>> {
        struct shared_ptr<spotify::connect::MdnsDevice> *__value_;
    } __end_cap_;
} vector_023e58be;

typedef struct weak_ptr<spotify::connect::LocalPlaybackView> {
    struct LocalPlaybackView *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_29fa49ec;

typedef struct weak_ptr<spotify::connectivity::auth::client_token::ClientTokenAcquirer> {
    struct ClientTokenAcquirer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_e1a4dc17;

typedef struct weak_ptr<spotify::connectivity::auth::objc::ConnectivityPolicyProviderBridge> {
    struct ConnectivityPolicyProviderBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_74c2429b;

typedef struct weak_ptr<spotify::connectivity::objc::ConnectionTypeProviderBridge> {
    struct ConnectionTypeProviderBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_e693900f;

typedef struct weak_ptr<spotify::connectivity::objc::ConnectivityPolicyProviderBridge> {
    struct ConnectivityPolicyProviderBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_387624aa;

typedef struct weak_ptr<spotify::http::AppleConnectionFactory> {
    struct AppleConnectionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_746914f4;

#pragma mark Named Unions

union SPTColor {
    struct {
        unsigned char blue;
        unsigned char green;
        unsigned char red;
        unsigned char alpha;
    } ;
    unsigned int argb;
};

union aligned_struct_wrapper<40, 8> {
    struct aligned_struct<40, 8> _field1;
    unsigned char _field2[40];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

typedef union {
    struct {
        unsigned short _field1;
        unsigned short _field2;
        unsigned short _field3;
        unsigned short _field4;
        unsigned short _field5;
    } _field1;
    unsigned short _field2[5];
} CDUnion_2be632f8;

