//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTContextMenuPresenterDelegate-Protocol.h"
#import "SPTNowPlayingAuxiliaryActionsHandler-Protocol.h"
#import "SPTNowPlayingAuxiliaryActionsModelObserver-Protocol.h"
#import "SPTPodcastPreferencesObserver-Protocol.h"
#import "SPTSleepTimerEventObserver-Protocol.h"
#import "SPTSleepTimerTimeObserver-Protocol.h"

@class NSString, SPTNowPlayingContextMenuHeaderFactory, SPTNowPlayingLogger, SPTNowPlayingModel, SPTObserverManager;
@protocol SPContextMenuFeature, SPTContextMenuPresenter, SPTLinkDispatcher, SPTNowPlayingManager, SPTNowPlayingModeResolver, SPTNowPlayingTestManager, SPTPodcastContextMenuProvider, SPTPodcastSpeedControlManager, SPTQueueLogger, SPTShareFeature, SPTShowContextMenuControllerOptions, SPTSleepTimerController, SPTSleepTimerService, SPTUIPresentationService, _TtP18ConnectUIV2Feature33SPTConnectUIDevicePickerPresenter_, _TtP24ResponsiveShuffleFeature38SPTResponsiveShuffleFeedbackController_, _TtP24ResponsiveShuffleFeature40SPTResponsiveShuffleOnboardingController_;

@interface SPTNowPlayingAuxiliaryActionsHandlerImplementation : NSObject <SPTNowPlayingAuxiliaryActionsModelObserver, SPTPodcastPreferencesObserver, SPTContextMenuPresenterDelegate, SPTSleepTimerTimeObserver, SPTSleepTimerEventObserver, SPTNowPlayingAuxiliaryActionsHandler>
{
    SPTNowPlayingContextMenuHeaderFactory *_contextMenuHeaderFactory;
    SPTNowPlayingModel *_model;
    id <SPTPodcastSpeedControlManager> _speedControlManager;
    id <SPTUIPresentationService> _presentationService;
    id <_TtP18ConnectUIV2Feature33SPTConnectUIDevicePickerPresenter_> _devicePickerPresenter;
    id <SPContextMenuFeature> _contextMenuService;
    id <SPTNowPlayingManager> _manager;
    id <SPTLinkDispatcher> _linkDispatcher;
    SPTNowPlayingLogger *_logger;
    SPTObserverManager *_observerManager;
    id <SPTPodcastContextMenuProvider> _podcastContextMenuProvider;
    id <SPTContextMenuPresenter> _contextMenuPresenter;
    id <SPTNowPlayingModeResolver> _modeResolver;
    id <SPTQueueLogger> _queueLogger;
    id <SPTNowPlayingTestManager> _testManager;
    id <SPTSleepTimerService> _sleepTimerService;
    id <SPTSleepTimerController> _sleepTimerController;
    id <SPTShowContextMenuControllerOptions> _podcastContextMenuOptions;
    id <SPTShareFeature> _shareFeature;
    id <_TtP24ResponsiveShuffleFeature40SPTResponsiveShuffleOnboardingController_> _onboardingController;
    id <_TtP24ResponsiveShuffleFeature38SPTResponsiveShuffleFeedbackController_> _feedbackController;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <_TtP24ResponsiveShuffleFeature38SPTResponsiveShuffleFeedbackController_> feedbackController; // @synthesize feedbackController=_feedbackController;
@property(retain, nonatomic) id <_TtP24ResponsiveShuffleFeature40SPTResponsiveShuffleOnboardingController_> onboardingController; // @synthesize onboardingController=_onboardingController;
@property(readonly, nonatomic) __weak id <SPTShareFeature> shareFeature; // @synthesize shareFeature=_shareFeature;
@property(retain, nonatomic) id <SPTShowContextMenuControllerOptions> podcastContextMenuOptions; // @synthesize podcastContextMenuOptions=_podcastContextMenuOptions;
@property(readonly, nonatomic) id <SPTSleepTimerController> sleepTimerController; // @synthesize sleepTimerController=_sleepTimerController;
@property(readonly, nonatomic) __weak id <SPTSleepTimerService> sleepTimerService; // @synthesize sleepTimerService=_sleepTimerService;
@property(readonly, nonatomic) id <SPTNowPlayingTestManager> testManager; // @synthesize testManager=_testManager;
@property(readonly, nonatomic) id <SPTQueueLogger> queueLogger; // @synthesize queueLogger=_queueLogger;
@property(readonly, nonatomic) __weak id <SPTNowPlayingModeResolver> modeResolver; // @synthesize modeResolver=_modeResolver;
@property(retain, nonatomic) id <SPTContextMenuPresenter> contextMenuPresenter; // @synthesize contextMenuPresenter=_contextMenuPresenter;
@property(readonly, nonatomic) id <SPTPodcastContextMenuProvider> podcastContextMenuProvider; // @synthesize podcastContextMenuProvider=_podcastContextMenuProvider;
@property(readonly, nonatomic) SPTObserverManager *observerManager; // @synthesize observerManager=_observerManager;
@property(readonly, nonatomic) SPTNowPlayingLogger *logger; // @synthesize logger=_logger;
@property(readonly, nonatomic) id <SPTLinkDispatcher> linkDispatcher; // @synthesize linkDispatcher=_linkDispatcher;
@property(readonly, nonatomic) id <SPTNowPlayingManager> manager; // @synthesize manager=_manager;
@property(readonly, nonatomic) __weak id <SPContextMenuFeature> contextMenuService; // @synthesize contextMenuService=_contextMenuService;
@property(readonly, nonatomic) id <_TtP18ConnectUIV2Feature33SPTConnectUIDevicePickerPresenter_> devicePickerPresenter; // @synthesize devicePickerPresenter=_devicePickerPresenter;
@property(readonly, nonatomic) id <SPTUIPresentationService> presentationService; // @synthesize presentationService=_presentationService;
@property(readonly, nonatomic) id <SPTPodcastSpeedControlManager> speedControlManager; // @synthesize speedControlManager=_speedControlManager;
@property(readonly, nonatomic) SPTNowPlayingModel *model; // @synthesize model=_model;
@property(nonatomic) __weak SPTNowPlayingContextMenuHeaderFactory *contextMenuHeaderFactory; // @synthesize contextMenuHeaderFactory=_contextMenuHeaderFactory;
- (void)willShowHeartButton:(id)arg1;
- (_Bool)isSleepTimerSet;
- (void)logSleepTimerButtonTapped;
- (void)presentSleepTimerMenuFromView:(id)arg1 inViewController:(id)arg2;
- (void)timerDidCancel:(id)arg1;
- (void)timerDidEnd:(id)arg1;
- (void)timerDidStart:(id)arg1;
- (void)timer:(id)arg1 timeWasUpdated:(double)arg2;
- (void)contextMenuPresenterDidDismiss:(id)arg1;
- (void)podcastPlaybackSpeedDidUpdate:(id)arg1 oldSpeed:(id)arg2;
- (void)auxiliaryActionsModelDidChangeCollectionState:(id)arg1;
- (void)goToNowPlayingView:(id)arg1;
- (void)goToQueue:(id)arg1;
- (void)logGoToPlayContextWithURI:(id)arg1;
- (void)showEntityPage:(id)arg1;
- (void)dismissQueueIfNeeded;
- (id)extraContextMenuTasksIfAnyInViewController:(id)arg1 sender:(id)arg2;
- (void)presentContextMenuWithHeaderOptionsInViewController:(id)arg1 sender:(id)arg2;
- (void)presentContextMenuInViewController:(id)arg1 sender:(id)arg2;
- (void)minimizePlayingView:(id)arg1;
- (void)presentShareMenu:(id)arg1;
- (void)presentConnectDevicePicker:(id)arg1;
- (void)logSpeedControlMenuButtonTapped;
- (void)presentSpeedControlMenuFromView:(id)arg1 inViewController:(id)arg2;
- (void)logNegativeFeedbackResults;
- (void)removeFromCollectionIfNeededWithConfirmation:(_Bool)arg1;
- (void)logBanButtonTappedWithFeedbackButtonBehavior:(long long)arg1;
- (void)toggleBanStateFromViewController:(id)arg1 andActionControl:(id)arg2 andTrackOnlyBan:(_Bool)arg3 withConfirmation:(_Bool)arg4;
- (void)toggleTrackBanStateFromViewController:(id)arg1 andActionControl:(id)arg2 withConfirmation:(_Bool)arg3;
- (void)toggleTrackBanStateFromViewController:(id)arg1 andActionControl:(id)arg2;
- (void)toggleBanStateFromViewController:(id)arg1 andActionControl:(id)arg2;
- (void)logHeartButtonTappedWithFeedbackButtonBehavior:(long long)arg1;
- (void)toggleCollectionStateFromViewController:(id)arg1 andActionControl:(id)arg2 withConfirmation:(_Bool)arg3;
- (void)toggleCollectionStateFromViewController:(id)arg1 andActionControl:(id)arg2;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(readonly, nonatomic) _Bool isHeartActionAllowed;
@property(readonly, nonatomic) _Bool isBanActionAllowed;
@property(readonly, nonatomic) _Bool isCurrentTrackInCollection;
@property(readonly, nonatomic) _Bool isCurrentTrackBanned;
- (void)dealloc;
- (id)initWithModel:(id)arg1 speedControlManager:(id)arg2 presentationService:(id)arg3 devicePickerPresenter:(id)arg4 contextMenuService:(id)arg5 podcastContextMenuProvider:(id)arg6 nowPlayingManager:(id)arg7 linkDispatcher:(id)arg8 modeResolver:(id)arg9 logger:(id)arg10 queueLogger:(id)arg11 testManager:(id)arg12 sleepTimerService:(id)arg13 shareFeature:(id)arg14 responsiveShuffleOnboardingController:(id)arg15 responsiveShuffleFeedbackController:(id)arg16;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

