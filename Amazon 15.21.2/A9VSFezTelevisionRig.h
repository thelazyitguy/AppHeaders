//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class A9VSFezTelevisionDropLine, NSArray, SCNNode;

@interface A9VSFezTelevisionRig : NSObject
{
    _Bool _isAnchorHidden;
    _Bool _isFloorSpotLightHidden;
    _Bool _isProximityAnimationPlaying;
    _Bool _isTelevisionPanUIHidden;
    _Bool _isWallHidden;
    _Bool _didProvideMinimumTelevisionHapticFeedback;
    _Bool _didCompleteSpawnAnimation;
    SCNNode *_anchorHitTestNode;
    SCNNode *_televisionNode;
    SCNNode *_anchorNode;
    SCNNode *_anchorOuterBoundaryNode;
    SCNNode *_anchorTopBoundaryNode;
    SCNNode *_proximityPlaneNode;
    SCNNode *_proximityPlaneViewInteractiveNode;
    SCNNode *_proximityPlaneRotationJointNode;
    SCNNode *_panUINode;
    SCNNode *_rootNode;
    SCNNode *_rotationJointNode;
    SCNNode *_rotationUINode;
    A9VSFezTelevisionDropLine *_dropLine;
    SCNNode *_televisionHeightJointNode;
    SCNNode *_televisionPanUINode;
    SCNNode *_wallSpotlightPlaneRuntimeNode;
    SCNNode *_floorSpotlightPlaneRuntimeNode;
}

+ (id)generateAnimationClips;
+ (id)loadScene;
@property(nonatomic) _Bool didCompleteSpawnAnimation; // @synthesize didCompleteSpawnAnimation=_didCompleteSpawnAnimation;
@property(readonly, nonatomic) SCNNode *floorSpotlightPlaneRuntimeNode; // @synthesize floorSpotlightPlaneRuntimeNode=_floorSpotlightPlaneRuntimeNode;
@property(readonly, nonatomic) SCNNode *wallSpotlightPlaneRuntimeNode; // @synthesize wallSpotlightPlaneRuntimeNode=_wallSpotlightPlaneRuntimeNode;
@property(readonly, nonatomic) SCNNode *televisionPanUINode; // @synthesize televisionPanUINode=_televisionPanUINode;
@property(readonly, nonatomic) SCNNode *televisionHeightJointNode; // @synthesize televisionHeightJointNode=_televisionHeightJointNode;
@property(retain, nonatomic) A9VSFezTelevisionDropLine *dropLine; // @synthesize dropLine=_dropLine;
@property(readonly, nonatomic) SCNNode *rotationUINode; // @synthesize rotationUINode=_rotationUINode;
@property(readonly, nonatomic) SCNNode *rotationJointNode; // @synthesize rotationJointNode=_rotationJointNode;
@property(readonly, nonatomic) SCNNode *rootNode; // @synthesize rootNode=_rootNode;
@property(readonly, nonatomic) SCNNode *panUINode; // @synthesize panUINode=_panUINode;
@property(readonly, nonatomic) SCNNode *proximityPlaneRotationJointNode; // @synthesize proximityPlaneRotationJointNode=_proximityPlaneRotationJointNode;
@property(readonly, nonatomic) SCNNode *proximityPlaneViewInteractiveNode; // @synthesize proximityPlaneViewInteractiveNode=_proximityPlaneViewInteractiveNode;
@property(readonly, nonatomic) SCNNode *proximityPlaneNode; // @synthesize proximityPlaneNode=_proximityPlaneNode;
@property(readonly, nonatomic) SCNNode *anchorTopBoundaryNode; // @synthesize anchorTopBoundaryNode=_anchorTopBoundaryNode;
@property(readonly, nonatomic) SCNNode *anchorOuterBoundaryNode; // @synthesize anchorOuterBoundaryNode=_anchorOuterBoundaryNode;
@property(readonly, nonatomic) SCNNode *anchorNode; // @synthesize anchorNode=_anchorNode;
@property(readonly, nonatomic) SCNNode *televisionNode; // @synthesize televisionNode=_televisionNode;
@property(readonly, nonatomic) SCNNode *anchorHitTestNode; // @synthesize anchorHitTestNode=_anchorHitTestNode;
@property(nonatomic) _Bool didProvideMinimumTelevisionHapticFeedback; // @synthesize didProvideMinimumTelevisionHapticFeedback=_didProvideMinimumTelevisionHapticFeedback;
@property(nonatomic) _Bool isWallHidden; // @synthesize isWallHidden=_isWallHidden;
@property(nonatomic) _Bool isTelevisionPanUIHidden; // @synthesize isTelevisionPanUIHidden=_isTelevisionPanUIHidden;
@property(nonatomic) _Bool isProximityAnimationPlaying; // @synthesize isProximityAnimationPlaying=_isProximityAnimationPlaying;
@property(nonatomic) _Bool isFloorSpotLightHidden; // @synthesize isFloorSpotLightHidden=_isFloorSpotLightHidden;
@property(nonatomic) _Bool isAnchorHidden; // @synthesize isAnchorHidden=_isAnchorHidden;
- (void).cxx_destruct;
- (void)updateTelevisionRigProperties:(id)arg1;
- (void)setTelevisionHeightFromRigBottom:(float)arg1;
- (void)enforceMinimumTelevisionHeightFromRigBottom;
- (void)scaleTelevisionToOneFromWidth:(float)arg1 height:(float)arg2 length:(float)arg3;
- (void)updateSpotlights;
- (void)initFloorSpotlightMaterial;
- (void)initWallMaterial;
- (void)playAnimationProximityEnd;
- (void)playAnimationProximityBeginWithLookAt:(struct SCNVector3)arg1;
- (void)playAnimationRotateEnd;
- (void)playAnimationRotateBegin;
- (void)playAnimationDragEnd;
- (void)playAnimationDragBegin;
- (void)playAnimationSpawn;
- (void)loadAnimationClips;
- (void)playAnimationClipWithKey:(id)arg1 alignScaleBeforePlay:(_Bool)arg2 animationDidStop:(CDUnknownBlockType)arg3;
- (void)playAnimationClipWithKey:(id)arg1;
- (void)setShadowCast:(_Bool)arg1;
- (void)setDimensionWithWidth:(float)arg1 height:(float)arg2 depth:(float)arg3;
- (void)createWallWithTelevisionWidth:(float)arg1 televisionHeight:(float)arg2;
- (void)updateTelevisionDropLine;
- (void)rotateAnchorBy:(float)arg1;
-     // Error parsing type: 16@0:8, name: getTelevisionBoundingBox
-     // Error parsing type: 16@0:8, name: getAnchorBoundingBox
- (void)removeFromParentNode;
- (void)addAsChildOfNode:(id)arg1;
- (id)initWithScene:(id)arg1;
- (void)generateCodeRelatedNodes;
- (void)insertNode:(id)arg1 betweenParentNode:(id)arg2 andChildNode:(id)arg3;
@property(readonly, nonatomic) NSArray *lookAtNodes;
@property(readonly, nonatomic) NSArray *requiredVisibleProximityNodes;
@property(readonly, nonatomic) NSArray *requiredVisibleRotationNodes;
// Error parsing type for property wallPlaneWorldTransform:
// Property attributes: T{?=[4]},R,N

// Error parsing type for property televisionWorldTransform:
// Property attributes: T{?=[4]},R,N

// Error parsing type for property televisionWorldPosition:
// Property attributes: T,N

@property(readonly, nonatomic) float minimumTelevisionHeightFromRigBottom;
@property(readonly, nonatomic) float televisionHeight;
-     // Error parsing type: 24@0:8@16, name: dimensionsOfNode:
@property(nonatomic) struct worldOrientation;
// Error parsing type for property worldPosition:
// Property attributes: T,N

// Error parsing type for property worldTransform:
// Property attributes: T{?=[4]},R,N

@property(readonly, nonatomic) float anchorHandleHeight;

@end

