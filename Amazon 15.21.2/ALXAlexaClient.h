//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ALXNetworkMonitorObserver-Protocol.h"

@class ALXMultipartHTTPClient, ALXNetworkMonitor, NSString;
@protocol ALXAccessTokenProvider;

@interface ALXAlexaClient : NSObject <ALXNetworkMonitorObserver>
{
    id <ALXAccessTokenProvider> _accessTokenProvider;
    ALXMultipartHTTPClient *_multipartHTTPClient;
    NSString *_dialogRequestID;
    ALXNetworkMonitor *_networkMonitor;
}

+ (id)sharedClient;
@property(retain, nonatomic) ALXNetworkMonitor *networkMonitor; // @synthesize networkMonitor=_networkMonitor;
@property(retain, nonatomic) NSString *dialogRequestID; // @synthesize dialogRequestID=_dialogRequestID;
@property(retain, nonatomic) ALXMultipartHTTPClient *multipartHTTPClient; // @synthesize multipartHTTPClient=_multipartHTTPClient;
@property(retain, nonatomic) id <ALXAccessTokenProvider> accessTokenProvider; // @synthesize accessTokenProvider=_accessTokenProvider;
- (void).cxx_destruct;
- (void)onNetworkStatusChangedTo:(unsigned long long)arg1;
- (void)startDownchannelIfNeeded;
@property(readonly, nonatomic) NSString *authorizationHeaderValue;
- (void)handleDirectiveResponse:(struct NSArray *)arg1 error:(id)arg2 requestTriggerName:(id)arg3;
- (void)log:(struct NSArray *)arg1 error:(id)arg2 requestTriggerName:(id)arg3;
- (void)sendEvent:(id)arg1 context:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sendEvent:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)resetConnection;
- (void)finishSendingRecognizeEvent;
- (void)cancelSendingRecognizeEvent;
- (void)startSendingRecognizeEventWithInputStream:(id)arg1 context:(id)arg2 wakewordInitiated:(_Bool)arg3 wakewordIndices:(id)arg4 wakewordMetadata:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)startSendingRecognizeEventWithInputStream:(id)arg1 context:(id)arg2 wakewordInitiated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)processResponse:(id)arg1 error:(id)arg2 HTTPStatusCode:(unsigned long long)arg3 isFromRecognizeEvent:(_Bool)arg4 requestTriggerName:(id)arg5 channelType:(long long)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (id)initWithMultipartHTTPClient:(id)arg1;

@end

