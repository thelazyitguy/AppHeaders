//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBPeripheralDelegate-Protocol.h"
#import "WJEncryptionConfigurationServiceDelegate-Protocol.h"

@class CBPeripheral, NSArray, NSData, NSDictionary, NSMapTable, NSNumber, NSString, NSUUID, WJInternalSetupAttemptMetrics;
@protocol WJBLEDeviceDelegate><WJBLEDeviceServiceDelegate><WJEncryptionConfigurationServiceDelegate, WJEncryptionConfigurationService;

@interface WJBLEDevice : NSObject <CBPeripheralDelegate, WJEncryptionConfigurationServiceDelegate>
{
    id <WJBLEDeviceDelegate><WJBLEDeviceServiceDelegate><WJEncryptionConfigurationServiceDelegate> _delegate;
    CBPeripheral *_peripheral;
    NSString *_localName;
    NSData *_manufacturerData;
    NSDictionary *_serviceData;
    NSArray *_serviceUUIDs;
    NSArray *_overflowServiceUUIDs;
    NSNumber *_txPowerLevel;
    NSNumber *_isConnectable;
    NSArray *_solicitedServiceUUIDs;
    WJInternalSetupAttemptMetrics *_setupAttemptMetrics;
    NSDictionary *_servicesByUUID;
    NSMapTable *_serviceDelegates;
    id <WJEncryptionConfigurationService> _encryptionConfigurationService;
}

+ (void)initialize;
@property(retain, nonatomic) id <WJEncryptionConfigurationService> encryptionConfigurationService; // @synthesize encryptionConfigurationService=_encryptionConfigurationService;
@property(retain, nonatomic) NSMapTable *serviceDelegates; // @synthesize serviceDelegates=_serviceDelegates;
@property(retain, nonatomic) NSDictionary *servicesByUUID; // @synthesize servicesByUUID=_servicesByUUID;
@property(retain, nonatomic) WJInternalSetupAttemptMetrics *setupAttemptMetrics; // @synthesize setupAttemptMetrics=_setupAttemptMetrics;
@property(retain, nonatomic) NSArray *solicitedServiceUUIDs; // @synthesize solicitedServiceUUIDs=_solicitedServiceUUIDs;
@property(retain, nonatomic) NSNumber *isConnectable; // @synthesize isConnectable=_isConnectable;
@property(retain, nonatomic) NSNumber *txPowerLevel; // @synthesize txPowerLevel=_txPowerLevel;
@property(retain, nonatomic) NSArray *overflowServiceUUIDs; // @synthesize overflowServiceUUIDs=_overflowServiceUUIDs;
@property(retain, nonatomic) NSArray *serviceUUIDs; // @synthesize serviceUUIDs=_serviceUUIDs;
@property(retain, nonatomic) NSDictionary *serviceData; // @synthesize serviceData=_serviceData;
@property(retain, nonatomic) NSData *manufacturerData; // @synthesize manufacturerData=_manufacturerData;
@property(retain, nonatomic) NSString *localName; // @synthesize localName=_localName;
@property(retain, nonatomic) CBPeripheral *peripheral; // @synthesize peripheral=_peripheral;
@property(nonatomic) __weak id <WJBLEDeviceDelegate><WJBLEDeviceServiceDelegate><WJEncryptionConfigurationServiceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (_Bool)isAvocado;
- (void)discoverCharacteristics:(id)arg1 forService:(id)arg2;
- (void)removeDelegateForServiceWithUUID:(id)arg1;
- (void)setDelegate:(id)arg1 forServiceWithUUID:(id)arg2;
- (void)updateServices:(id)arg1 usingSecurityManager:(id)arg2;
- (void)service:(id)arg1 secureChannelCreated:(id)arg2 error:(id)arg3;
- (void)finishDiscovery:(id)arg1;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (id)serviceForType:(long long)arg1;
@property(readonly, nonatomic) NSArray *services;
- (void)discoverServices;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) NSUUID *identifier;
@property(readonly, nonatomic) NSString *name;
- (void)setAdvertisementData:(id)arg1;
- (id)initWithPeripheral:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

