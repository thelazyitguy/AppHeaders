//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSData, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct A9VSCreditCardReaderDelegate {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct A9VSFezPlaneSize {
    float _field1;
    float _field2;
};

struct A9VSFezTextRenderer {
    CDUnknownFunctionPointerType *_field1;
    struct Context *_field2;
    float _field3;
    float _field4;
};

struct A9VSFezTextureRenderer {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct A9VSFezWallBreakthroughAttempt {
    _Bool _field1;
    float _field2;
};

struct A9VSGiftCardReaderEngineDelegate {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct AESCrypt;

struct ANPChromePaddings {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct AREngineDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct AREngineFacade;

struct ARPlanePolygon {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field1;
    int _field2;
    int _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field4;
    Matrix_e079975e _field5;
    Point3_70b0e613 _field6;
    Point3_70b0e613 _field7;
    vector_c62e8485 _field8;
    vector_c62e8485 _field9;
};

struct ARRenderEngineParams {
    int _field1;
    struct Context *_field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    struct TextRenderingDelegate *_field4;
    struct ViewDependentModelTextureDelegate *_field5;
    struct DecoderDelegate *_field6;
    struct DecoderDelegate *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    float _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field13;
    _Bool _field14;
    _Bool _field15;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field16;
};

struct ARRoomDataDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct ARSceneData {
    struct ImageBuffer _field1;
    struct ExtraFrameData _field2;
    _Bool _field3;
    struct Matrix<double, 4, 4> _field4;
    _Bool _field5;
    _Bool _field6;
    struct Matrix<double, 4, 4> _field7;
    struct CameraCalibrationParams _field8;
    struct LightingParameters _field9;
};

struct AlignedBox3<float> {
    Point3_70b0e613 _field1;
    Point3_70b0e613 _field2;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioComponentDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct ByteArray {
    struct shared_ptr<unsigned char> _data;
    int _len;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPathElement {
    int _field1;
    struct CGPoint *_field2;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLFloor {
    Class _field1;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLRegion {
    Class _field1;
    id _field2;
};

struct CameraCalibrationParams {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
};

struct CodedOutputData;

struct Context;

struct CreditCardReaderDelegateBase;

struct CreditCardReaderFacade {
    CDUnknownFunctionPointerType *_field1;
    struct CreditCardReaderDelegateBase *_field2;
    struct unique_ptr<CreditCard::CreditCardVideoProcessor, std::__1::default_delete<CreditCard::CreditCardVideoProcessor>> _field3;
};

struct CreditCardVideoProcessor;

struct CxxModule;

struct DecoderDelegate;

struct Description {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field3;
    int _field4;
    int _field5;
    int _field6;
    short _field7;
    short _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field9;
    struct _Description__isset _field10;
};

struct Device {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field3;
    int _field4;
    struct ExtendedInfo _field5;
    struct map<std::__1::basic_string<char>, whisperlink::service::Route, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, whisperlink::service::Route>>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field9;
    int _field10;
    struct _Device__isset _field11;
};

struct Dictionary {
    CDUnknownFunctionPointerType *_field1;
    short _field2;
    map_0edfe763 _field3;
    struct _Dictionary__isset _field4;
};

struct EAGLContextManager {
    CDUnknownFunctionPointerType *_field1;
    struct WindowInfo _field2;
    _Bool _field3;
    struct GestureHandler *_field4;
    id _field5;
    double _field6;
};

struct EngineParameters {
    struct PlaneManagerParameters _field1;
    struct ModelMovementRestrictionParameters _field2;
};

struct EventDelegateBase;

struct ExtendedInfo {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field7;
    struct Dictionary _field8;
    struct _ExtendedInfo__isset _field9;
};

struct ExtraFrameData {
    struct FrameROI _field1;
    struct FrameROI _field2;
    _Bool _field3;
    int _field4;
    double _field5;
    double _field6;
};

struct FileLock;

struct FloorPlaneParameters {
    _Bool _field1;
    float _field2;
    float _field3;
};

struct FlowServerDelegateImpl {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    struct map<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>>> _field3;
    id _field4;
    int _field5;
    id _field6;
};

struct FlowStateEngine;

struct FlowStateEngineDelegate {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct FlowStateEngineFacade {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<Flow::FlowStateEngine, std::__1::default_delete<Flow::FlowStateEngine>> _field2;
    struct unique_ptr<Flow::EventDelegateBase, std::__1::default_delete<Flow::EventDelegateBase>> _field3;
    struct EventDelegateBase *_field4;
};

struct FrameROI {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GestureHandler;

struct GiftCardReaderDelegateBase;

struct GiftCardReaderFacade {
    CDUnknownFunctionPointerType *_field1;
    struct GiftCardReaderDelegateBase *_field2;
    struct unique_ptr<GiftCard::GiftCardVideoProcessor, std::__1::default_delete<GiftCard::GiftCardVideoProcessor>> _field3;
};

struct GiftCardVideoProcessor;

struct ImageBuffer {
    basic_string_90719d97 id;
    int format;
    int definition;
    int width;
    int height;
    int widthStep;
    int numChannels;
    struct ByteArray byteData;
};

struct Instance;

struct InterProcessLock;

struct JSExecutorFactory;

struct LightingIntensity {
    int _field1;
    float _field2;
};

struct LightingParameters {
    struct LightingIntensity _field1;
    struct LightingTemperature _field2;
};

struct LightingTemperature {
    int _field1;
    float _field2;
};

struct LocksInfo {
    id _field1;
    id _field2;
};

struct MMKV {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field4;
    struct unordered_map<NSString *, mmkv::KeyValueHolder, mmkv::KeyHasher, mmkv::KeyEqualer, std::__1::allocator<std::__1::pair<NSString *const, mmkv::KeyValueHolder>>> *_field5;
    struct unordered_map<NSString *, mmkv::KeyValueHolderCrypt, mmkv::KeyHasher, mmkv::KeyEqualer, std::__1::allocator<std::__1::pair<NSString *const, mmkv::KeyValueHolderCrypt>>> *_field6;
    struct MemoryFile *_field7;
    unsigned long long _field8;
    struct CodedOutputData *_field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct MemoryFile *_field13;
    struct MMKVMetaInfo *_field14;
    struct AESCrypt *_field15;
    struct ThreadLock *_field16;
    struct FileLock *_field17;
    struct InterProcessLock *_field18;
    struct InterProcessLock *_field19;
    _Bool _field20;
};

struct MMKVMetaInfo;

struct Matrix<double, 4, 4> {
    double _field1[16];
};

struct Matrix<float, 3, 3> {
    float _field1[9];
};

struct Matrix<float, 4, 4> {
    float data[16];
};

struct MemoryFile;

struct MessageQueueThread;

struct Method {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field1;
    unsigned long long _field2;
    _Bool _field3;
    struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> _field4;
    struct function<folly::dynamic (folly::dynamic)> _field5;
};

struct MetricBatchMessage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field5;
    struct RepeatedPtrField<metrics::KeyValue> _field6;
    struct RepeatedPtrField<metrics::MetricEntryMessage> _field7;
    int _field8;
    unsigned int _field9[1];
};

struct MetricEntryMessage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    long long _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field5;
    struct RepeatedPtrField<metrics::DataPointMessage> _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ModelMovementRestrictionParameters {
    float _field1;
    float _field2;
};

struct ModuleRegistry;

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSMutableOrderedSet {
    Class _field1;
};

struct NSOrderedSet {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PlacementAreaParameters {
    _Bool _field1;
    int _field2;
    int _field3;
    Point3_70b0e613 _field4;
    float _field5;
    float _field6;
    float _field7;
    int _field8;
};

struct PlaneHitTestResult {
    struct PlaneLocation _field1;
    int _field2;
};

struct PlaneLocation {
    basic_string_90719d97 planeID;
    Matrix_e079975e transformToPlane;
    Matrix_e079975e transformToWorld;
};

struct PlaneManagerParameters {
    struct ValidPlaneTypes _field1;
    struct ValidPlaneOrientations _field2;
    struct FloorPlaneParameters _field3;
    struct PlacementAreaParameters _field4;
};

struct Point3<float> {
    float _field1;
    float _field2;
    float _field3;
};

struct PositionButtonResult {
    double _field1;
    double _field2;
};

struct ProtobufCMessage {
    struct ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct ProtobufCMessageUnknownField *_field3;
};

struct ProtobufCMessageDescriptor;

struct ProtobufCMessageUnknownField;

struct PryonLiteMetadataBlob {
    int _field1;
    char *_field2;
};

struct PryonLiteResult {
    long long _field1;
    long long _field2;
    char *_field3;
    int _field4;
    struct PryonLiteMetadataBlob _field5;
    void *_field6;
    void *_field7;
};

struct RCTLayoutContext {
    struct CGPoint _field1;
    id _field2;
    id _field3;
};

struct RCTLayoutMetrics {
    struct CGRect frame;
    struct CGRect contentFrame;
    struct UIEdgeInsets borderWidth;
    long long displayType;
    long long layoutDirection;
};

struct RCTMessageThread;

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RNGHHitSlop {
    double top;
    double left;
    double bottom;
    double right;
    double width;
    double height;
};

struct RepeatedPtrField<metrics::DataPointMessage> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<metrics::KeyValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<metrics::MetricEntryMessage> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct SCNMatrix4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
};

struct SCNVector3 {
    float x;
    float y;
    float z;
};

struct SRDSClientConfigDefaults {
    Class _field1;
};

struct SXConfigDefaults {
    Class _field1;
};

struct SXResultsCellBase {
    Class _field1;
};

struct ServiceEndpoint {
    struct ServiceEndpointExtendedInfo _field1;
    struct Device _field2;
    struct Description _field3;
};

struct ServiceEndpointExtendedInfo {
    map_0edfe763 _field1;
};

struct SimplePlayerStatus {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    _Bool _field4;
    double _field5;
    struct _SimplePlayerStatus__isset _field6;
};

struct TextRenderingDelegate;

struct ThreadLock;

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIViewController {
    Class _field1;
};

struct UnknownFieldSet {
    struct vector<google_public::protobuf::UnknownField, std::__1::allocator<google_public::protobuf::UnknownField>> *_field1;
};

struct ValidPlaneOrientations {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct ValidPlaneTypes {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
};

struct ViewDependentModelTextureDelegate;

struct WPServiceEndpointListener;

struct WPStateListener {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct WhisperPlay {
    CDUnknownFunctionPointerType *_field1;
};

struct WindowInfo {
    int _field1;
    int _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep _field1;
        } _field1;
    } _field3;
};

struct YGValue {
    float value;
    int unit;
};

struct _Description__isset {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct _Device__isset {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct _Dictionary__isset {
    _Bool _field1;
    _Bool _field2;
};

struct _ExtendedInfo__isset {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    unsigned long long _field8;
};

struct _Plcrash__CrashReport__Processor {
    struct ProtobufCMessage _field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct ProtobufCMessage _field1;
    int _field2;
    char *_field3;
    int _field4;
    long long _field5;
    char *_field6;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _SimplePlayerStatus__isset {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
};

struct __rep {
    union {
        struct __long {
            char *__data_;
            unsigned long long __size_;
            unsigned long long __cap_;
        } __l;
        struct __short {
            char __data_[23];
            struct {
                unsigned char __size_;
            } ;
        } __s;
        struct __raw {
            unsigned long long __words[3];
        } __r;
    } ;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct bignum_ctx;

struct bignum_st {
    unsigned int *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct ec_group_st;

struct ec_point_st;

struct env_md_st {
    int _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    int _field12[5];
    int _field13;
    int _field14;
    CDUnknownFunctionPointerType _field15;
};

struct function<folly::dynamic (folly::dynamic)> {
    struct __value_func<folly::dynamic (folly::dynamic)> {
        struct type _field1;
        struct __base<folly::dynamic (folly::dynamic)> *_field2;
    } _field1;
};

struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> {
    struct __value_func<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> {
        struct type _field1;
        struct __base<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> *_field2;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct map<std::__1::basic_string<char>, A9VSMobile::ByteArray, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, A9VSMobile::ByteArray>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Flow::Server::ServerResponseHandler *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, whisperlink::service::Route, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, whisperlink::service::Route>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, whisperlink::service::Route>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, whisperlink::service::Route>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, whisperlink::service::Route>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, whisperlink::service::Route>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, whisperlink::service::Route>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>;

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct shared_count {
    struct sp_counted_base *pi_;
};

struct shared_ptr<AREngineFacade> {
    struct AREngineFacade *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WPServiceEndpointListener> {
    struct WPServiceEndpointListener *px;
    struct shared_count pn;
};

struct shared_ptr<facebook::react::Instance> {
    struct Instance *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::MessageQueueThread> {
    struct MessageQueueThread *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::RCTMessageThread> {
    struct RCTMessageThread *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<unsigned char> {
    char *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sp_counted_base;

struct task_basic_info {
    int suspend_count;
    unsigned long long virtual_size;
    unsigned long long resident_size;
    struct time_value user_time;
    struct time_value system_time;
    int policy;
};

struct time_value {
    int seconds;
    int microseconds;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<CreditCard::CreditCardVideoProcessor, std::__1::default_delete<CreditCard::CreditCardVideoProcessor>> {
    struct __compressed_pair<CreditCard::CreditCardVideoProcessor *, std::__1::default_delete<CreditCard::CreditCardVideoProcessor>> {
        struct CreditCardVideoProcessor *_field1;
    } _field1;
};

struct unique_ptr<Flow::EventDelegateBase, std::__1::default_delete<Flow::EventDelegateBase>> {
    struct __compressed_pair<Flow::EventDelegateBase *, std::__1::default_delete<Flow::EventDelegateBase>> {
        struct EventDelegateBase *_field1;
    } _field1;
};

struct unique_ptr<Flow::FlowStateEngine, std::__1::default_delete<Flow::FlowStateEngine>> {
    struct __compressed_pair<Flow::FlowStateEngine *, std::__1::default_delete<Flow::FlowStateEngine>> {
        struct FlowStateEngine *_field1;
    } _field1;
};

struct unique_ptr<GiftCard::GiftCardVideoProcessor, std::__1::default_delete<GiftCard::GiftCardVideoProcessor>> {
    struct __compressed_pair<GiftCard::GiftCardVideoProcessor *, std::__1::default_delete<GiftCard::GiftCardVideoProcessor>> {
        struct GiftCardVideoProcessor *_field1;
    } _field1;
};

struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
};

struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
        struct Method *__value_;
    } __ptr_;
};

struct unordered_map<NSString *, mmkv::KeyValueHolder, mmkv::KeyHasher, mmkv::KeyEqualer, std::__1::allocator<std::__1::pair<NSString *const, mmkv::KeyValueHolder>>>;

struct unordered_map<NSString *, mmkv::KeyValueHolderCrypt, mmkv::KeyHasher, mmkv::KeyEqualer, std::__1::allocator<std::__1::pair<NSString *const, mmkv::KeyValueHolderCrypt>>>;

struct vector<A9VSMobile::Point3<float>, std::__1::allocator<A9VSMobile::Point3<float>>> {
    Point3_70b0e613 *_field1;
    Point3_70b0e613 *_field2;
    struct __compressed_pair<A9VSMobile::Point3<float>*, std::__1::allocator<A9VSMobile::Point3<float>>> {
        Point3_70b0e613 *_field1;
    } _field3;
};

struct vector<FezMobile::ARPlanePolygon, std::__1::allocator<FezMobile::ARPlanePolygon>> {
    struct ARPlanePolygon *_field1;
    struct ARPlanePolygon *_field2;
    struct __compressed_pair<FezMobile::ARPlanePolygon *, std::__1::allocator<FezMobile::ARPlanePolygon>> {
        struct ARPlanePolygon *_field1;
    } _field3;
};

struct vector<FlowServerDelegateImpl *, std::__1::allocator<FlowServerDelegateImpl *>> {
    struct FlowServerDelegateImpl **_field1;
    struct FlowServerDelegateImpl **_field2;
    struct __compressed_pair<FlowServerDelegateImpl **, std::__1::allocator<FlowServerDelegateImpl *>> {
        struct FlowServerDelegateImpl **_field1;
    } _field3;
};

struct vector<google_public::protobuf::UnknownField, std::__1::allocator<google_public::protobuf::UnknownField>>;

struct vector<id<MediaPlayerStatusListener>, std::__1::allocator<id<MediaPlayerStatusListener>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__strong id<MediaPlayerStatusListener>*, std::__1::allocator<id<MediaPlayerStatusListener>>> {
        id *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>>> {
    struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>> *_field1;
    struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>> *_field2;
    struct __compressed_pair<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>*, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>>> {
        struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>> *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct ?<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
    struct __rep __first_;
} __compressed_pair_5b4d0e04;

typedef struct ?<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
    struct __rep __value_;
} __compressed_pair_96848e3b;

typedef struct ?<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
    struct __rep _field1;
} __compressed_pair_1d3f934a;

typedef struct ?<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    __compressed_pair_5b4d0e04 __r_;
} basic_string_a490aa4c;

typedef struct ?<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    __compressed_pair_96848e3b __r_;
} basic_string_90719d97;

typedef struct ?<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep _field1;
    } _field1;
} basic_string_f1844954;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    id _field1;
    long long _field2;
} CDStruct_92b791ab;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool skipPermissionRequests;
} CDStruct_3f9b6990;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
    _Bool useSignificantChanges;
} CDStruct_6dd8fab3;

typedef struct {
    double u1;
    double v1;
    double u2;
    double v2;
} CDStruct_08d4a144;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    struct bignum_st *_field1;
    struct env_md_st *_field2;
} CDStruct_0be96cfd;

typedef struct {
    struct ec_group_st *_field1;
    char *_field2;
    char *_field3;
    struct bignum_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct ec_point_st *_field8;
    struct ec_point_st *_field9;
    struct ec_point_st *_field10;
    struct ec_point_st *_field11;
    struct ec_point_st *_field12;
    struct bignum_ctx *_field13;
} CDStruct_77333e36;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    struct bignum_st *_field1;
    struct {
        struct bignum_st *_field1;
        struct bignum_st *_field2;
    } _field2;
} CDStruct_05474a59;

typedef struct {
    CDStruct_05474a59 _field1;
    CDStruct_05474a59 _field2;
} CDStruct_93cb6f54;

// Template types
typedef struct AlignedBox3<float> {
    Point3_70b0e613 _field1;
    Point3_70b0e613 _field2;
} AlignedBox3_cb84d6c6;

typedef struct Matrix<float, 3, 3> {
    float _field1[9];
} Matrix_f7fe931a;

typedef struct Matrix<float, 4, 4> {
    float data[16];
} Matrix_e079975e;

typedef struct Point3<float> {
    float _field1;
    float _field2;
    float _field3;
} Point3_70b0e613;

typedef struct map<std::__1::basic_string<char>, A9VSMobile::ByteArray, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, A9VSMobile::ByteArray>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, A9VSMobile::ByteArray>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_e0ade735;

typedef struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_b7e9e43f;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_0edfe763;

typedef struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_9f0bc40f;

typedef struct shared_ptr<AREngineFacade> {
    struct AREngineFacade *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c8676563;

typedef struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7c4996dd;

typedef struct shared_ptr<facebook::react::MessageQueueThread> {
    struct MessageQueueThread *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1bc7a6b7;

typedef struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8e97821c;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
} unique_ptr_0e0e1873;

typedef struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
} unique_ptr_bcc8199d;

typedef struct vector<A9VSMobile::Point3<float>, std::__1::allocator<A9VSMobile::Point3<float>>> {
    Point3_70b0e613 *_field1;
    Point3_70b0e613 *_field2;
    struct __compressed_pair<A9VSMobile::Point3<float>*, std::__1::allocator<A9VSMobile::Point3<float>>> {
        Point3_70b0e613 *_field1;
    } _field3;
} vector_c62e8485;

typedef struct vector<FezMobile::ARPlanePolygon, std::__1::allocator<FezMobile::ARPlanePolygon>> {
    struct ARPlanePolygon *_field1;
    struct ARPlanePolygon *_field2;
    struct __compressed_pair<FezMobile::ARPlanePolygon *, std::__1::allocator<FezMobile::ARPlanePolygon>> {
        struct ARPlanePolygon *_field1;
    } _field3;
} vector_d5dd1dd3;

typedef struct vector<FlowServerDelegateImpl *, std::__1::allocator<FlowServerDelegateImpl *>> {
    struct FlowServerDelegateImpl **_field1;
    struct FlowServerDelegateImpl **_field2;
    struct __compressed_pair<FlowServerDelegateImpl **, std::__1::allocator<FlowServerDelegateImpl *>> {
        struct FlowServerDelegateImpl **_field1;
    } _field3;
} vector_401884f7;

typedef struct vector<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>>> {
    struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>> *_field1;
    struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>> *_field2;
    struct __compressed_pair<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>*, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>>>> {
        struct pair<std::__1::basic_string<char>, A9VSMobile::Matrix<float, 4, 4>> *_field1;
    } _field3;
} vector_58ef29de;

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

