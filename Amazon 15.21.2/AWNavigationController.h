//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AWWebNavigationController.h"

#import "ANPNavMenuRDCManagerListener-Protocol.h"
#import "ANXNavMenuEventDelegate-Protocol.h"
#import "AWBottomNavBarDelegate-Protocol.h"
#import "AWModalsRoot-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"
#import "WNDMenuEventDelegate-Protocol.h"

@class ANPCartRedirectionDetectorWebViewDelegate, ANXCartSubNavWebViewDelegate, ANXNavMenuGestureController, ANXNavMenuTransitionDelegate, AWBottomNavBar, NSDictionary, NSObject, NSString, UIScrollView, UIView, UIViewController, UIWindow, WNDNavMenuTransitionDelegate;
@protocol AMIWeblabBridgeService, ANPNavMenuRDCManager, ANXAppearanceManager, ANXChromeInsetService, ANXMetricsService, ANXMultiModelNavigationListener, ANXNotificationNavigationListener, ANXTopNav, ANXWeblabTriggerService, ARTRightToLeftService, UINavigationControllerDelegate, WNDCardService;

@interface AWNavigationController : AWWebNavigationController <UINavigationControllerDelegate, AWBottomNavBarDelegate, UIGestureRecognizerDelegate, ANXNavMenuEventDelegate, ANPNavMenuRDCManagerListener, WNDMenuEventDelegate, AWModalsRoot>
{
    _Bool _animatingTransition;
    _Bool _shouldAnimateTransition;
    _Bool _willApplyStackLimitations;
    _Bool _isFirstStart;
    _Bool _isFirstRDCMenuOpen;
    _Bool _isTopNavRefactorEnabled;
    _Bool _isViewAppearing;
    _Bool _pendingCXIModeChange;
    _Bool _currentTabViewControllerObserverAdded;
    _Bool _shouldCallNavServicePop;
    _Bool _didViewAppear;
    double _topContentInset;
    id <ANXTopNav> _topNav;
    id <ANXAppearanceManager> _appearanceManager;
    id <ANXChromeInsetService> _chromeInsetService;
    ANPCartRedirectionDetectorWebViewDelegate *_cartRedirectionWebViewDelegate;
    UIViewController *_navMenuViewController;
    NSObject<UINavigationControllerDelegate> *_trueDelegate;
    long long _transitionType;
    UIViewController *_transitioningFromVC;
    UIViewController *_transitioningToVC;
    unsigned long long _popSequenceLength;
    id <ANXWeblabTriggerService> _anxWeblabTriggerService;
    ANXNavMenuGestureController *_navMenuGestureController;
    UIWindow *_navMenuWindow;
    id <ANXMetricsService> _anxMetricsService;
    id <ARTRightToLeftService> _rightToLeftService;
    ANXNavMenuTransitionDelegate *_navMenuTransitionDelegate;
    struct NSDictionary *_pendingRDCPagesUpdate;
    id <ANPNavMenuRDCManager> _navMenuItemService;
    id <WNDCardService> _wonderlandCardService;
    WNDNavMenuTransitionDelegate *_wndMenuTransitionDelegate;
    UIView *_statusBarOverlay;
    ANXCartSubNavWebViewDelegate *_cartWebViewDelegate;
    id <ANXMultiModelNavigationListener> _multiModelNavigationListener;
    id <ANXNotificationNavigationListener> _notificationNavigationListener;
    NSString *_groupName;
    NSString *_stackName;
    UIScrollView *_currentScrollView;
    id <AMIWeblabBridgeService> _weblabBridge;
}

+ (id)getNavigationControllerKeyForGroupName:(id)arg1 stackName:(id)arg2;
+ (id)tempName;
+ (void)initialize;
@property(nonatomic) _Bool didViewAppear; // @synthesize didViewAppear=_didViewAppear;
@property(retain, nonatomic) id <AMIWeblabBridgeService> weblabBridge; // @synthesize weblabBridge=_weblabBridge;
@property(retain, nonatomic) UIScrollView *currentScrollView; // @synthesize currentScrollView=_currentScrollView;
@property(nonatomic) _Bool shouldCallNavServicePop; // @synthesize shouldCallNavServicePop=_shouldCallNavServicePop;
@property _Bool currentTabViewControllerObserverAdded; // @synthesize currentTabViewControllerObserverAdded=_currentTabViewControllerObserverAdded;
@property(retain, nonatomic) NSString *stackName; // @synthesize stackName=_stackName;
@property(retain, nonatomic) NSString *groupName; // @synthesize groupName=_groupName;
@property(nonatomic) _Bool pendingCXIModeChange; // @synthesize pendingCXIModeChange=_pendingCXIModeChange;
@property(nonatomic) _Bool isViewAppearing; // @synthesize isViewAppearing=_isViewAppearing;
@property(retain, nonatomic) id <ANXNotificationNavigationListener> notificationNavigationListener; // @synthesize notificationNavigationListener=_notificationNavigationListener;
@property(retain, nonatomic) id <ANXMultiModelNavigationListener> multiModelNavigationListener; // @synthesize multiModelNavigationListener=_multiModelNavigationListener;
@property(retain, nonatomic) ANXCartSubNavWebViewDelegate *cartWebViewDelegate; // @synthesize cartWebViewDelegate=_cartWebViewDelegate;
@property(nonatomic) _Bool isTopNavRefactorEnabled; // @synthesize isTopNavRefactorEnabled=_isTopNavRefactorEnabled;
@property(retain, nonatomic) UIView *statusBarOverlay; // @synthesize statusBarOverlay=_statusBarOverlay;
@property(retain, nonatomic) WNDNavMenuTransitionDelegate *wndMenuTransitionDelegate; // @synthesize wndMenuTransitionDelegate=_wndMenuTransitionDelegate;
@property(retain, nonatomic) id <WNDCardService> wonderlandCardService; // @synthesize wonderlandCardService=_wonderlandCardService;
@property(retain, nonatomic) id <ANPNavMenuRDCManager> navMenuItemService; // @synthesize navMenuItemService=_navMenuItemService;
@property(nonatomic) _Bool isFirstRDCMenuOpen; // @synthesize isFirstRDCMenuOpen=_isFirstRDCMenuOpen;
@property(retain, nonatomic) NSDictionary *pendingRDCPagesUpdate; // @synthesize pendingRDCPagesUpdate=_pendingRDCPagesUpdate;
@property(retain, nonatomic) ANXNavMenuTransitionDelegate *navMenuTransitionDelegate; // @synthesize navMenuTransitionDelegate=_navMenuTransitionDelegate;
@property(retain, nonatomic) id <ARTRightToLeftService> rightToLeftService; // @synthesize rightToLeftService=_rightToLeftService;
@property(retain, nonatomic) id <ANXMetricsService> anxMetricsService; // @synthesize anxMetricsService=_anxMetricsService;
@property(retain, nonatomic) UIWindow *navMenuWindow; // @synthesize navMenuWindow=_navMenuWindow;
@property(retain, nonatomic) ANXNavMenuGestureController *navMenuGestureController; // @synthesize navMenuGestureController=_navMenuGestureController;
@property(retain, nonatomic) id <ANXWeblabTriggerService> anxWeblabTriggerService; // @synthesize anxWeblabTriggerService=_anxWeblabTriggerService;
@property(nonatomic) _Bool isFirstStart; // @synthesize isFirstStart=_isFirstStart;
@property(nonatomic) unsigned long long popSequenceLength; // @synthesize popSequenceLength=_popSequenceLength;
@property(nonatomic) __weak UIViewController *transitioningToVC; // @synthesize transitioningToVC=_transitioningToVC;
@property(nonatomic) __weak UIViewController *transitioningFromVC; // @synthesize transitioningFromVC=_transitioningFromVC;
@property(nonatomic) long long transitionType; // @synthesize transitionType=_transitionType;
@property(nonatomic) _Bool willApplyStackLimitations; // @synthesize willApplyStackLimitations=_willApplyStackLimitations;
@property(nonatomic) _Bool shouldAnimateTransition; // @synthesize shouldAnimateTransition=_shouldAnimateTransition;
@property(nonatomic) _Bool animatingTransition; // @synthesize animatingTransition=_animatingTransition;
@property(nonatomic) __weak NSObject<UINavigationControllerDelegate> *trueDelegate; // @synthesize trueDelegate=_trueDelegate;
@property(retain, nonatomic) UIViewController *navMenuViewController; // @synthesize navMenuViewController=_navMenuViewController;
@property(retain, nonatomic) ANPCartRedirectionDetectorWebViewDelegate *cartRedirectionWebViewDelegate; // @synthesize cartRedirectionWebViewDelegate=_cartRedirectionWebViewDelegate;
@property(retain, nonatomic) id <ANXChromeInsetService> chromeInsetService; // @synthesize chromeInsetService=_chromeInsetService;
@property(retain, nonatomic) id <ANXAppearanceManager> appearanceManager; // @synthesize appearanceManager=_appearanceManager;
@property(retain, nonatomic) id <ANXTopNav> topNav; // @synthesize topNav=_topNav;
@property(readonly, nonatomic) double topContentInset; // @synthesize topContentInset=_topContentInset;
- (void).cxx_destruct;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)didReceiveSignInSucceededNotification;
- (void)layoutDirectionDidChange:(id)arg1;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)checkSBDMenuAvalability:(CDUnknownBlockType)arg1;
- (void)wonderlandMenuDidDismiss;
- (void)enableCXIModeAfterDismissMenu;
- (_Bool)shouldBeginNavMenuTriggeringRecognizer;
- (void)navMenuDidDismiss;
- (void)navMenuShouldBeginDismissTransitionWithUserInteractionEnabled:(_Bool)arg1;
- (void)navMenuShouldBeginInteractiveOpenTransition;
- (void)menuUpdatedWithData:(struct NSDictionary *)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)adjustScrollViewContentInset:(id)arg1 ownerViewController:(id)arg2 adjustInsetsNow:(_Bool)arg3;
- (void)registerContentInsetListenerForViewController:(id)arg1;
- (void)updateNavBarForRootViewController;
- (void)hideBottomNavBar:(id)arg1 animated:(_Bool)arg2;
- (void)showBottomNavBar:(id)arg1 animated:(_Bool)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldUseInternalHistory;
- (_Bool)shouldAlwaysAllowLeftNavigationButton;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)updateConfigForViewController:(id)arg1;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)resetShouldCallNavServicePop;
- (id)navigationService;
- (void)addFadeTransitionToView:(id)arg1;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)setViewControllers:(id)arg1;
- (id)superPopToRootViewControllerAnimated:(_Bool)arg1;
- (id)popToRootViewControllerAnimated:(_Bool)arg1;
- (id)popToViewController:(id)arg1 animated:(_Bool)arg2;
- (void)popViewControllerAnimated:(_Bool)arg1 onlyAfterTransition:(_Bool)arg2;
- (id)superPopViewControllerAnimated:(_Bool)arg1;
- (id)popViewControllerAnimated:(_Bool)arg1 shouldCallNavService:(_Bool)arg2;
- (id)popViewControllerAnimated:(_Bool)arg1;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2 pageCacheID:(id)arg3;
- (void)superPushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)pushViewControllerForStoreModes:(id)arg1 animated:(_Bool)arg2;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)pushViewController:(id)arg1 withNavigationOrigin:(id)arg2 animated:(_Bool)arg3;
- (void)handlePushError:(id)arg1 withNavigable:(id)arg2 stackInfo:(id)arg3 originalViewController:(id)arg4 navigationOrigin:(id)arg5 animated:(_Bool)arg6;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2 onlyAfterTransition:(_Bool)arg3 independentOfPrevious:(_Bool)arg4 shouldFade:(_Bool)arg5 cacheID:(id)arg6;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2 onlyAfterTransition:(_Bool)arg3 independentOfPrevious:(_Bool)arg4 shouldFade:(_Bool)arg5;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2 independentOfPrevious:(_Bool)arg3 shouldFade:(_Bool)arg4;
- (void)setCustomAutomaticallyAdjustsScrollViewInsetsForViewController:(id)arg1;
- (_Bool)customAutomaticallyAdjustsScrollViewInsetsForEntireHeaderForViewController:(id)arg1;
- (id)currentContext;
@property(readonly, nonatomic) unsigned long long historyCount;
- (void)updateCartBadgeWithQuantity:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)appearanceContextChanged;
@property(nonatomic, getter=isAmazonBooksSearchActive) _Bool amazonBooksSearchActive;
@property(nonatomic, getter=isSearchActive) _Bool searchActive;
- (void)setupRightToLeftLayout:(_Bool)arg1;
- (_Bool)topViewControllerHasInternalHistory;
- (void)applyStackLimitations;
- (void)updateToolbarAnimated:(_Bool)arg1;
- (void)fireTransitionEvent:(id)arg1 fromVC:(id)arg2 toVC:(id)arg3 type:(long long)arg4 interactive:(_Bool)arg5;
- (void)presentRDCMenu:(_Bool)arg1 selectedMenuItem:(id)arg2;
- (void)presentWNDMenu:(id)arg1 wonderlandCampaign:(id)arg2;
- (id)getNavigationOriginPlaceHolder;
- (long long)preferredStatusBarStyle;
- (id)childViewControllerForStatusBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (void)dismissNavMenuViewControllerWithUserInteractionEnabled:(_Bool)arg1;
- (void)presentNavMenuViewControllerWithUserInteractionEnabled:(_Bool)arg1 selectedMenuItem:(id)arg2;
- (void)optOutOfDarkMode;
- (_Bool)isInCXIMode;
- (_Bool)showWonderlandMenu;
- (void)setMenuShown:(_Bool)arg1 fromMenu:(_Bool)arg2 animated:(_Bool)arg3 interactive:(_Bool)arg4 selectedMenuItem:(id)arg5;
- (void)showMenuWithPage:(id)arg1;
- (void)setMenuShown:(_Bool)arg1 fromMenu:(_Bool)arg2 animated:(_Bool)arg3;
@property(nonatomic) _Bool menuShown;
@property(readonly, nonatomic) _Bool menuIsAnimating;
- (void)dismiss;
@property(readonly, nonatomic) double topNavBarCurrentHeight;
@property(readonly, nonatomic) double topNavBarBaseHeight;
@property(readonly, nonatomic) AWBottomNavBar *bottomNavBar;
- (void)initNavMenuGestureControllerIfNeeded;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithAppearanceManager:(id)arg1 chromeInsetService:(id)arg2 groupName:(id)arg3 stackName:(id)arg4;
- (id)initWithGroupName:(id)arg1 stackName:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

