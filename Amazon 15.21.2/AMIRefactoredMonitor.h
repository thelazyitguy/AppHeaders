//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AMIMonitor.h"

@class NSMutableArray, NSObject;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface AMIRefactoredMonitor : AMIMonitor
{
    _Bool _hasSychronousWorkStarted;
    unsigned long long _eventHistorySizeLimit;
    NSMutableArray *_eventHistory;
    NSMutableArray *_eventQueue;
    NSMutableArray *_observers;
    NSObject<OS_dispatch_queue> *_processingQueue;
    NSObject<OS_dispatch_group> *_group;
    unsigned long long _trackEventsHistoryCounter;
    unsigned long long _queueEventsCounter;
}

@property(nonatomic) _Bool hasSychronousWorkStarted; // @synthesize hasSychronousWorkStarted=_hasSychronousWorkStarted;
@property(nonatomic) unsigned long long queueEventsCounter; // @synthesize queueEventsCounter=_queueEventsCounter;
@property(nonatomic) unsigned long long trackEventsHistoryCounter; // @synthesize trackEventsHistoryCounter=_trackEventsHistoryCounter;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *group; // @synthesize group=_group;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *processingQueue; // @synthesize processingQueue=_processingQueue;
@property(retain, nonatomic) NSMutableArray *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSMutableArray *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(retain, nonatomic) NSMutableArray *eventHistory; // @synthesize eventHistory=_eventHistory;
@property(nonatomic) unsigned long long eventHistorySizeLimit; // @synthesize eventHistorySizeLimit=_eventHistorySizeLimit;
- (void).cxx_destruct;
- (void)trimEventHistoryIfNeeded;
- (void)deliverEvents:(id)arg1 toObserver:(id)arg2;
- (void)deliverEvents:(id)arg1;
- (void)addToQueue:(id)arg1;
- (void)addToHistoryIfNeeded:(id)arg1;
- (void)scheduleWork:(CDUnknownBlockType)arg1;
- (void)stopQueueingEvents;
- (void)startQueueingEvents;
- (void)stopBuffering;
- (void)startBuffering;
- (void)removeObserver:(id)arg1;
- (id)addObserverForEventsWithTrigger:(id)arg1 includePriorEvents:(_Bool)arg2 observer:(CDUnknownBlockType)arg3;
- (void)logEvent:(id)arg1;
- (void)setMaxBufferEventCount:(unsigned long long)arg1;
- (unsigned long long)maxBufferEventCount;
- (id)initWithConcreteMonitor:(id)arg1;
- (id)init;
- (id)AMIMonitor_ClassificationFiltering_urlFilter;
- (void)setAMIMonitor_ClassificationFiltering_urlFilter:(id)arg1;

@end

