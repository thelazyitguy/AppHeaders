//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ALSMBaseStateMachineTarget-Protocol.h"

@class ALXAlexaClient, ALXPlayDirective, ALXScheduler, NSString;

@interface ALXMediaManager : NSObject <ALSMBaseStateMachineTarget>
{
    _Bool _playerInfoNeeded;
    CDUnknownBlockType _completionHandler;
    ALXAlexaClient *_alexaClient;
    ALXPlayDirective *_playDirective;
    ALXScheduler *_progressDelayScheduler;
    ALXScheduler *_progressIntervalScheduler;
}

@property(retain, nonatomic) ALXScheduler *progressIntervalScheduler; // @synthesize progressIntervalScheduler=_progressIntervalScheduler;
@property(retain, nonatomic) ALXScheduler *progressDelayScheduler; // @synthesize progressDelayScheduler=_progressDelayScheduler;
@property(retain, nonatomic) ALXPlayDirective *playDirective; // @synthesize playDirective=_playDirective;
@property(retain, nonatomic) ALXAlexaClient *alexaClient; // @synthesize alexaClient=_alexaClient;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) _Bool playerInfoNeeded; // @synthesize playerInfoNeeded=_playerInfoNeeded;
- (void).cxx_destruct;
- (_Bool)playDirectiveIsNew:(id)arg1;
- (long long)currentOffsetInMilliseconds;
- (void)resetProgressReportSchedulers;
- (void)cancelProgressReportSchedulers;
- (void)resumeProgressReportSchedulers;
- (void)pauseProgressReportSchedulers;
- (void)startProgressReportSchedulers;
- (void)createProgressReportSchedulersIfNecessaryForTrack:(id)arg1;
- (_Bool)playerInfoDirectivePresentInDirectives:(id)arg1;
- (void)callCompletionHandlerIfAvailable;
- (id)playerActivityStringFromState:(id)arg1;
- (void)sendProgressReportIntervalElapsedEvent;
- (void)sendProgressReportDelayElapsedEvent;
- (void)sendGetPlayerInfoEventUsingState:(id)arg1;
- (void)sendPlaybackStutterFinishedEventUsingBufferUnderrunState:(id)arg1 playingState:(id)arg2;
- (void)sendPlaybackStutterStartedEventUsingState:(id)arg1;
- (void)sendPlaybackFinishedEventUsingState:(id)arg1;
- (void)sendPlaybackFailedEventUsingState:(id)arg1 playerActivity:(id)arg2;
- (void)sendPlaybackStoppedEventUsingState:(id)arg1;
- (void)sendPlaybackStartedEventUsingState:(id)arg1;
- (void)informUITrackDidStop;
- (void)informUITrackDidPause;
- (void)informUITrackDidResume;
- (void)informUITrackDidFinishUsingState:(id)arg1;
- (void)informUITrackDidStartUsingState:(id)arg1;
- (void)informUITrackWillStartUsingState:(id)arg1;
- (void)informUIPlaybackWillStartUsingState:(id)arg1;
- (void)handleStoppedState:(id)arg1 previousState:(id)arg2;
- (void)sendPlaybackStartedEventAndNotifyUIUsingState:(id)arg1;
- (void)stateMachine:(id)arg1 failedTransitionFromState:(id)arg2 toState:(id)arg3 withError:(id)arg4;
- (void)stateMachine:(id)arg1 didTransitionFromState:(id)arg2 toState:(id)arg3;
- (void)stateMachine:(id)arg1 willTransitionFromState:(id)arg2 toState:(id)arg3;
- (void)stateMachine:(id)arg1 didReenterState:(id)arg2;
- (id)init;
- (id)initWithAlexaClient:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

