//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "AMATViewabilityCalculationDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"

@class AMALinkUtility, AMATBridgeManager, AMATViewabilityCalculation, JSContext, NSString, UIButton, WKWebView;
@protocol AMATAdContainerDelegate;

@interface AMATBaseAdContainer : UIView <WKNavigationDelegate, UIScrollViewDelegate, AMATViewabilityCalculationDelegate>
{
    _Bool _isLoading;
    _Bool _readyToObserveSuperviews;
    _Bool _allowsCloseButton;
    float _lastViewablePercentage;
    WKWebView *_webView;
    JSContext *_jsContext;
    NSString *_slotID;
    UIButton *_closeButton;
    AMATBridgeManager *_bridgeManager;
    AMALinkUtility *_sharedLinkUtility;
    AMATViewabilityCalculation *_viewabilityCalculation;
    double _viewabilityTimerInterval;
    id <AMATAdContainerDelegate> _delegate;
    struct CGRect _lastAdRect;
}

@property(nonatomic) __weak id <AMATAdContainerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double viewabilityTimerInterval; // @synthesize viewabilityTimerInterval=_viewabilityTimerInterval;
@property(retain, nonatomic) AMATViewabilityCalculation *viewabilityCalculation; // @synthesize viewabilityCalculation=_viewabilityCalculation;
@property(nonatomic) struct CGRect lastAdRect; // @synthesize lastAdRect=_lastAdRect;
@property(nonatomic) float lastViewablePercentage; // @synthesize lastViewablePercentage=_lastViewablePercentage;
@property(retain, nonatomic) AMALinkUtility *sharedLinkUtility; // @synthesize sharedLinkUtility=_sharedLinkUtility;
@property(nonatomic) __weak AMATBridgeManager *bridgeManager; // @synthesize bridgeManager=_bridgeManager;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) _Bool allowsCloseButton; // @synthesize allowsCloseButton=_allowsCloseButton;
@property(nonatomic) _Bool readyToObserveSuperviews; // @synthesize readyToObserveSuperviews=_readyToObserveSuperviews;
@property(retain, nonatomic) NSString *slotID; // @synthesize slotID=_slotID;
@property(retain) JSContext *jsContext; // @synthesize jsContext=_jsContext;
@property(readonly, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
@property _Bool isLoading; // @synthesize isLoading=_isLoading;
- (void).cxx_destruct;
- (void)viewabilityOfAdView:(float)arg1 andAdFrame:(struct CGRect)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (unsigned long long)closeButtonResizeMask:(long long)arg1;
- (double)closeButtonYPos:(long long)arg1;
- (double)closeButtonXPos:(long long)arg1;
- (void)showButtonIndicator:(_Bool)arg1;
- (void)layoutCloseButton;
- (_Bool)processUrlScheme:(id)arg1;
- (void)closeButtonEventReceived;
- (void)convertFragmentToFullPayload:(id)arg1;
- (id)getLocalStorageString:(id)arg1;
- (id)formatHTMLCreative:(id)arg1 withBridges:(id)arg2;
- (void)initWebview:(struct CGRect)arg1 withBridgeManager:(id)arg2;
- (void)resetAdContainer;
- (void)removeCloseButtonAndTappableArea;
- (void)layoutCloseButton:(long long)arg1 showButtonIndicator:(_Bool)arg2;
- (void)unsubscribeToViewabilityTimer;
- (void)checkViewabilityCalcMethod;
@property(readonly, nonatomic) _Bool containedInScreenBounds;
@property(readonly, nonatomic) struct CGRect positionOnScreen;
- (void)loadHTMLString:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andBridges:(id)arg2;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)layoutSubviews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

