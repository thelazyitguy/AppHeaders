//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AMABaseAdManager.h"

#import "AMAHTMLAdViewDelegate-Protocol.h"
#import "AMAWebRequestDelegate-Protocol.h"
#import "AMMPAdBrowserControllerDelegate-Protocol.h"
#import "AMMPAdapterDelegate-Protocol.h"
#import "AMMPOpenURLDelegate-Protocol.h"
#import "AMSISClientDelegate-Protocol.h"
#import "SFSafariViewControllerDelegate-Protocol.h"

@class AMAdView, AMMPBaseAdapter, AMMPTimer, AMMPTimerTarget, AMSISClient, NSDictionary, NSMutableData, NSString, NSURL, NSURLConnection;

@interface AMAdManager : AMABaseAdManager <AMSISClientDelegate, AMMPOpenURLDelegate, AMMPAdapterDelegate, AMMPAdBrowserControllerDelegate, AMAHTMLAdViewDelegate, AMAWebRequestDelegate, SFSafariViewControllerDelegate>
{
    AMAdView *_adView;
    NSString *_adUnitId;
    NSString *_keywords;
    NSURL *_URL;
    _Bool _adActionInProgress;
    NSURLConnection *_connection;
    NSDictionary *_headers;
    AMMPBaseAdapter *_currentAdapter;
    AMMPBaseAdapter *_previousAdapter;
    NSURL *_clickURL;
    NSURL *_interceptURL;
    NSURL *_failURL;
    NSURL *_impTrackerURL;
    _Bool _shouldInterceptLinks;
    AMMPTimer *_autorefreshTimer;
    AMMPTimerTarget *_timerTarget;
    _Bool _ignoresAutorefresh;
    _Bool _autorefreshTimerNeedsScheduling;
    _Bool _previousIgnoresAutorefresh;
    _Bool _shouldLoadMRAIDAd;
    AMSISClient *_sisClient;
    NSMutableData *_data;
    NSString *_requestId;
}

@property(copy, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(retain, nonatomic) AMSISClient *sisClient; // @synthesize sisClient=_sisClient;
@property(retain, nonatomic) AMMPBaseAdapter *previousAdapter; // @synthesize previousAdapter=_previousAdapter;
@property(retain, nonatomic) AMMPBaseAdapter *currentAdapter; // @synthesize currentAdapter=_currentAdapter;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
- (void)setData:(id)arg1;
- (id)data;
@property(nonatomic) _Bool autorefreshTimerNeedsScheduling; // @synthesize autorefreshTimerNeedsScheduling=_autorefreshTimerNeedsScheduling;
@property(nonatomic) _Bool ignoresAutorefresh; // @synthesize ignoresAutorefresh=_ignoresAutorefresh;
@property(nonatomic) _Bool adActionInProgress; // @synthesize adActionInProgress=_adActionInProgress;
@property(retain, nonatomic) AMMPTimerTarget *timerTarget; // @synthesize timerTarget=_timerTarget;
@property(retain, nonatomic) AMMPTimer *autorefreshTimer; // @synthesize autorefreshTimer=_autorefreshTimer;
@property(nonatomic) _Bool shouldInterceptLinks; // @synthesize shouldInterceptLinks=_shouldInterceptLinks;
@property(copy, nonatomic) NSURL *impTrackerURL; // @synthesize impTrackerURL=_impTrackerURL;
@property(copy, nonatomic) NSURL *failURL; // @synthesize failURL=_failURL;
@property(copy, nonatomic) NSURL *interceptURL; // @synthesize interceptURL=_interceptURL;
@property(copy, nonatomic) NSURL *clickURL; // @synthesize clickURL=_clickURL;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(copy, nonatomic) NSString *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) NSString *adUnitId; // @synthesize adUnitId=_adUnitId;
@property(readonly, nonatomic) __weak AMAdView *adView; // @synthesize adView=_adView;
- (void).cxx_destruct;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)errorReceived:(id)arg1 withStatusCode:(long long)arg2;
- (void)responseReceived:(id)arg1;
- (void)openSharedAppURLForHTMLView:(id)arg1;
- (void)openURLForHTMLView:(id)arg1;
- (void)resumeAutorefreshIfEnabled;
- (void)pauseAutorefresh;
- (long long)allowedNativeAdsOrientation;
- (struct CGSize)maximumAdSize;
- (void)adapter:(id)arg1 didClickOnAd:(id)arg2 withPrivateURL:(id)arg3;
- (void)userWillLeaveApplicationFromAdapter:(id)arg1;
- (void)userActionDidFinishForAdapter:(id)arg1;
- (void)userActionWillBeginForAdapter:(id)arg1;
- (void)adapter:(id)arg1 didFailToLoadAdWithError:(id)arg2;
- (void)adapter:(id)arg1 didFinishLoadingAd:(id)arg2 shouldTrackImpression:(_Bool)arg3;
- (void)dismissBrowserController:(id)arg1 animated:(_Bool)arg2 openPrivateURL:(id)arg3;
- (void)dismissBrowserController:(id)arg1 animated:(_Bool)arg2;
- (void)dismissBrowserController:(id)arg1;
- (void)willResizeAd:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)loadAdDidFailWithWebRequest:(id)arg1;
- (void)loadAdDidFinishWithWebRequest:(id)arg1;
- (void)loadAdWithRequest:(id)arg1;
- (void)handleInvalidAdContent:(id)arg1;
- (void)handleValidAdContent:(id)arg1;
- (void)determineCreativeType:(int *)arg1;
- (void)cancelPendingAutorefreshTimer;
- (void)scheduleAutorefreshTimer;
- (void)scheduleAutorefreshTimerIfEnabled;
- (void)logResponseBodyToConsole:(id)arg1;
- (void)handleMraidRequestWithBridgesEnabled:(id)arg1;
- (void)handleHTMLRequestWithBridgesEnabled:(id)arg1;
- (void)processResponseHeaders:(id)arg1 body:(id)arg2 bridgesEnabled:(id)arg3;
- (void)replaceCurrentAdapterWithAdapter:(id)arg1;
- (void)customLinkClickedForSelectorString:(id)arg1 withDataString:(id)arg2;
- (id)viewControllerForPresentingModalView;
- (void)customEventActionDidEnd;
- (void)customEventActionWillBegin;
- (void)customEventDidFailToLoadAd;
- (void)customEventDidLoadAd;
- (void)rotateToOrientation:(long long)arg1;
- (void)setAdContentView:(id)arg1;
- (id)dictionaryFromQueryString:(id)arg1;
- (id)timeZoneQueryStringComponent;
- (id)scaleFactorQueryStringComponent;
- (id)orientationQueryStringComponent;
- (void)submitMetricsOnFailure;
- (void)submitMetricsOnSuccess;
- (void)forceRefreshAd;
- (void)refreshAd;
- (void)setAdTracking;
- (void)registerForApplicationStateTransitionNotifications;
- (_Bool)isAdExpanded;
- (void)openPrivateURL:(id)arg1;
- (void)setAdView:(id)arg1;
- (void)didFailToLoadWithError:(id)arg1;
- (void)recordMetricsOnLoadAttempt;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

