//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CoralOperationDescriptor-Protocol.h"
#import "CoralRequestConfig-Protocol.h"

@class CoralDispatcher, NSString, NSURL;
@protocol CoralErrorHandler;

@interface CoralCall : NSObject <CoralOperationDescriptor, CoralRequestConfig>
{
    NSString *_userAgent;
    unsigned long long _maxRetries;
    double _timeoutInterval;
    id <CoralErrorHandler> _globalErrorHandler;
    CDUnknownBlockType _requestSigner;
    NSString *_target;
    NSString *_inputClassName;
    NSString *_outputClassName;
    NSURL *_endpointURL;
    CoralDispatcher *_dispatcher;
}

@property(retain, nonatomic) CoralDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(copy, nonatomic) NSURL *endpointURL; // @synthesize endpointURL=_endpointURL;
@property(copy, nonatomic) NSString *outputClassName; // @synthesize outputClassName=_outputClassName;
@property(copy, nonatomic) NSString *inputClassName; // @synthesize inputClassName=_inputClassName;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(copy, nonatomic) CDUnknownBlockType requestSigner; // @synthesize requestSigner=_requestSigner;
@property(retain, nonatomic) id <CoralErrorHandler> globalErrorHandler; // @synthesize globalErrorHandler=_globalErrorHandler;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long maxRetries; // @synthesize maxRetries=_maxRetries;
@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
- (void).cxx_destruct;
- (id)buildRequest:(id)arg1;
- (id)inputTypeValidationError:(id)arg1;
- (id)createOutputInstance;
- (id)createInputInstance;
@property(readonly, nonatomic) Class outputClass;
@property(readonly, nonatomic) Class inputClass;
- (void)callAsync:(id)arg1 resultWithBlock:(CDUnknownBlockType)arg2;
- (id)call:(id)arg1 error:(id *)arg2;
- (id)initWithTarget:(id)arg1 inputClass:(Class)arg2 outputClass:(Class)arg3 endpointURL:(id)arg4 dispatcher:(id)arg5 requestConfig:(id)arg6;

@end

