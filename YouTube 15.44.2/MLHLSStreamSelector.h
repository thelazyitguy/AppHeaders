//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/MLStreamSelector.h>

#import <Module_Framework/MLFairPlayLicenseLookupHelperLoggingDelegate-Protocol.h>
#import <Module_Framework/MLHLSProxyDelegate-Protocol.h>

@class GIMMe, MLFairPlayLicenseLookupHelper, MLHLSFormatSelectionStrategy, MLHLSMasterPlaylist, MLHLSPlaylistVideoSplicer, MLHLSProxy, MLStreamingData, MLVideo, NSString, YTIHlsProxyConfig, YTNetworkRetryConfig, YTSystemNotifications;
@protocol MLHLSPlaylistCacheProtocol, MLHLSPlaylistService, MLPlayerConfig;

@interface MLHLSStreamSelector : MLStreamSelector <MLHLSProxyDelegate, MLFairPlayLicenseLookupHelperLoggingDelegate>
{
    MLVideo *_video;
    MLHLSProxy *_proxy;
    id <MLPlayerConfig> _playerConfig;
    YTIHlsProxyConfig *_config;
    _Bool _createPairedAudioURLs;
    MLHLSFormatSelectionStrategy *_formatSelectionStrategy;
    YTNetworkRetryConfig *_retryConfig;
    id <MLHLSPlaylistService> _HLSPlaylistService;
    id <MLHLSPlaylistCacheProtocol> _playlistCache;
    MLFairPlayLicenseLookupHelper *_fairPlayLicenseLookupHelper;
    YTSystemNotifications *_systemNotifications;
    MLStreamingData *_streamingData;
    MLHLSMasterPlaylist *_completeMasterPlaylist;
    MLHLSMasterPlaylist *_servingMasterPlaylist;
    _Bool _initializing;
    _Bool _isUsingFMP4;
    GIMMe *_gimme;
    MLHLSPlaylistVideoSplicer *_videoSplicer;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) MLHLSMasterPlaylist *servingMasterPlaylist; // @synthesize servingMasterPlaylist=_servingMasterPlaylist;
@property(nonatomic) __weak MLHLSPlaylistVideoSplicer *videoSplicer; // @synthesize videoSplicer=_videoSplicer;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (id)createLivePlaybackStartTag;
- (void)resetKeySession;
- (id)remotePlaylistsForServingMasterPlaylist;
- (_Bool)updateServingMasterPlaylist;
- (void)createCompleteMasterPlaylistFromOriginalMasterPlaylist:(id)arg1;
- (void)createPlaylistLookupHelperWithStreams:(id)arg1;
- (id)audioOnlyRemotePlaylist;
- (void)fetchInitialMediaPlaylistsForServingMasterPlaylist;
- (void)performDNSLookupForHost:(id)arg1;
- (id)replaceMediaTagURLsWithResourceLoaderURLs:(id)arg1;
- (id)replaceRemotePlaylistURLsWithResourceLoaderURLs:(id)arg1;
- (void)selectServingMasterPlaylistWithReason:(long long)arg1;
- (void)didLoadHLSMasterPlaylist:(id)arg1;
- (void)selectInitialStreamUsingRemoteMasterPlaylist;
- (void)selectInitialStreamUsingInlinedMasterPlaylist;
- (_Bool)canPlayFMP4;
- (void)mediaPlaylistDataFetchDidCompleteWithData:(id)arg1 response:(id)arg2 recoverableErrors:(id)arg3 error:(id)arg4 itag:(int)arg5 xtags:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (void)licenseLookupHelper:(id)arg1 hasNonFatalError:(id)arg2;
- (id)segmentTimeline;
- (id)expandCondensedURL:(id)arg1 forItag:(int)arg2 xtags:(id)arg3;
@property(readonly, nonatomic) NSString *condensedURLPrefix;
- (id)streamURLWithItag:(int)arg1 xtags:(id)arg2;
- (void)loadSecureKeyWithLoadingRequest:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)shouldLoadSecureKeysForResourceLoadingRequests;
- (void)proxyDidFailWithError:(id)arg1;
- (void)loadMediaPlaylistDataWithItag:(int)arg1 xtags:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)loadMasterPlaylistWithSuccessBlock:(CDUnknownBlockType)arg1;
- (id)fairPlayKeySession;
- (void)setExternalPlaybackActive:(_Bool)arg1;
- (id)selectedAudioFormat;
- (void)playbackWillStart;
- (id)debugParameters;
- (void)terminate;
- (void)setDefaultAudioTrack:(id)arg1;
- (_Bool)selectStreamWithReason:(long long)arg1 forceSelection:(_Bool)arg2;
- (id)resourceLoaderDelegate;
- (id)initWithVideo:(id)arg1 playerConfig:(id)arg2 streamingData:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

