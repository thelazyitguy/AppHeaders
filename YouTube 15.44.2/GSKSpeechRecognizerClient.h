//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/GAKAudioSink-Protocol.h>
#import <Module_Framework/GSKAudioCaptureDelegate-Protocol.h>
#import <Module_Framework/GSKRecognizerClient-Protocol.h>
#import <Module_Framework/GSKSessionDelegate-Protocol.h>

@class GAKEndpointer, GAKSpeexEncoder, GAKSpeexPreprocessor, GSKAudioCaptureGAKShim, GSKAudioSession, GSKEndpointer, GSKLanguage, GSKSpeechSessionConfig, GSKSpeexEncoder, NSDate, NSMutableArray, NSNumber, NSString, NSTimer;
@protocol GSKAudioCaptureInterface, GSKSpeechRecognizerDelegate;

@interface GSKSpeechRecognizerClient : NSObject <GSKAudioCaptureDelegate, GSKSessionDelegate, GAKAudioSink, GSKRecognizerClient>
{
    id <GSKAudioCaptureInterface> _audioCapture;
    GSKAudioSession *_session;
    GSKSpeexEncoder *_encoder;
    GSKEndpointer *_endpointer;
    _Bool _usesGAKAPI;
    GAKSpeexPreprocessor *_gakPreprocessor;
    GAKSpeexEncoder *_gakEncoder;
    GAKEndpointer *_gakEndpointer;
    GSKAudioCaptureGAKShim *_audioCaptureInterfaceStubSource;
    GSKLanguage *_lastRecognizedLanguage;
    GSKSpeechSessionConfig *_config;
    NSDate *_captureStartDate;
    int _state;
    _Bool _hasPrimedConnection;
    _Bool _receivedEndOfSpeech;
    NSString *_recognitionResult;
    NSTimer *_endpointerTimeoutTimer;
    NSNumber *_endpointingGracePeriodInSeconds;
    NSTimer *_clientSideEndpointingGracePeriodTimer;
    _Bool _receivedDeviceSelectionDecision;
    NSMutableArray *_multiDeviceArbitrationEventBlocks;
    NSTimer *_deviceSelectionDecisionTimeoutTimer;
    double _endpointerTimeoutInSeconds;
    id <GSKSpeechRecognizerDelegate> _delegate;
    double _minimumCaptureDuration;
}

+ (id)recognizerClientWithAudioCapture:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) double minimumCaptureDuration; // @synthesize minimumCaptureDuration=_minimumCaptureDuration;
@property(nonatomic) __weak id <GSKSpeechRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)handleAudio:(struct AudioBufferList *)arg1 fromSource:(id)arg2;
- (void)handleDeviceSelectionDecision:(id)arg1;
- (void)handleTtsServiceEvent:(id)arg1;
- (void)handlePinholeOutput:(id)arg1;
- (void)handleEndpointerEvent:(id)arg1;
- (void)handleRecognitionEvent:(id)arg1;
- (void)handleRecognizerEvent:(id)arg1;
- (id)recognizedLanguage;
- (void)sessionDidFinish:(id)arg1;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 didReceiveResponse:(id)arg2;
- (void)capture:(id)arg1 didFailToStartWithError:(id)arg2;
- (void)stopRecognitionByClientSideEndpointer;
- (void)clientSideEndpointingTimeoutTimerDidFire:(id)arg1;
- (void)stopClientSideEndpointingTimeoutTimer;
- (void)restartClientSideEndpointingTimeoutTimer;
- (void)gakAPICapture:(id)arg1 didReceiveData:(id)arg2;
- (void)capture:(id)arg1 didReceiveData:(id)arg2;
- (void)captureDidStop:(id)arg1;
- (void)captureDidStart:(id)arg1;
- (void)deviceSelectionDecisionTimeoutTimerDidFire:(id)arg1;
- (void)restartDeviceSelectionDecisionTimeoutTimer;
- (void)stopDeviceSelectionDecisionTimeoutTimer;
- (void)executeEventsWaitingForDeviceSelectionDecision;
- (void)scheduleEventOnMultiDeviceArbitrationQueueWithBlock:(CDUnknownBlockType)arg1;
- (void)scheduleEventBlock:(CDUnknownBlockType)arg1;
- (_Bool)isMultiDeviceArbitrationEnabled;
- (void)endpointerTimeoutTimerDidFire:(id)arg1;
- (void)stopEndpointerTimeoutTimer;
- (void)restartEndpointerTimeoutTimer;
- (double)captureDuration;
- (float)audioInputLevel;
@property(readonly, nonatomic) _Bool isRecognizing;
@property(readonly, nonatomic) _Bool isCapturing;
@property(readonly, nonatomic) _Bool isIdle;
- (void)cancelRecognition;
- (void)stopRecognitionWithLogMetadata:(id)arg1;
- (void)stopRecognition;
- (void)startCapture;
- (_Bool)requiresRecognitionResult;
- (_Bool)isUsingServerSideEndpointer;
- (_Bool)isUsingClientEndpointer;
- (void)sendRequest:(id)arg1;
- (void)recognizeWithConfig:(id)arg1;
- (void)primeConnectionWithConfig:(id)arg1;
- (void)setSession:(id)arg1;
@property(readonly, nonatomic) NSString *recognitionResult;
- (void)dealloc;
- (id)init;
- (id)initWithAudioCapture:(id)arg1 endpointer:(id)arg2 encoder:(id)arg3 encoderQuality:(unsigned long long)arg4 denoiseEnabled:(_Bool)arg5 minimumCaptureDuration:(double)arg6 endpointingGracePeriod:(id)arg7 endpointerTimeout:(double)arg8;
- (id)initWithAudioCapture:(id)arg1 endpointer:(id)arg2 encoder:(id)arg3 minimumCaptureDuration:(double)arg4 endpointingGracePeriod:(id)arg5;
- (id)initWithAudioCapture:(id)arg1 encoderQuality:(unsigned long long)arg2 encoderDenoisingEnabled:(_Bool)arg3 endpointerTimeout:(double)arg4;
- (id)initWithAudioCapture:(id)arg1 endpointingGracePeriod:(id)arg2;
- (id)initWithAudioCapture:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

