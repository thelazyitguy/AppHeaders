//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/MLStreamSelector.h>

#import <Module_Framework/MLFairPlayContentKeySessionDelegate-Protocol.h>
#import <Module_Framework/MLHLSProxyDelegate-Protocol.h>

@class MLHLSProxy, MLOfflineRepo, NSMutableDictionary, NSString, YTIIosOfflineAsset;
@protocol MLFairPlayContentKeySession;

@interface MLLocalAVAssetStreamSelector : MLStreamSelector <MLFairPlayContentKeySessionDelegate, MLHLSProxyDelegate>
{
    MLHLSProxy *_proxy;
    YTIIosOfflineAsset *_asset;
    NSString *_videoID;
    MLOfflineRepo *_repo;
    NSMutableDictionary *_contentKeyLocalURLs;
    id <MLFairPlayContentKeySession> _keySession;
}

- (void).cxx_destruct;
- (void)failWithError:(id)arg1;
- (void)loadSecureKeyWithLoadingRequest:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)shouldLoadSecureKeysForResourceLoadingRequests;
- (void)proxyDidFailWithError:(id)arg1;
- (void)loadMasterPlaylistWithSuccessBlock:(CDUnknownBlockType)arg1;
- (void)updatePersistableContentKeyData:(id)arg1 forKeyIdentifier:(id)arg2;
- (id)makePersistentContentKeyDataForLicenseResponse:(id)arg1 licenseRequest:(id)arg2 error:(id *)arg3;
- (void)performLicenseRequest:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)createLicenseRequestForPersistableContentKeyRequest:(id)arg1;
- (id)createLicenseRequestForContentKeyRequest:(id)arg1;
- (id)fairPlayKeySession;
- (_Bool)isUsingLocalStreams;
- (id)debugParameters;
- (_Bool)selectStreamWithReason:(long long)arg1 forceSelection:(_Bool)arg2;
- (void)terminate;
- (id)resourceLoaderDelegate;
- (id)initWithAsset:(id)arg1 videoID:(id)arg2 repo:(id)arg3;

// Remaining properties
@property(readonly, nonatomic) NSString *condensedURLPrefix;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

