//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GRWDeviceState;
@protocol OS_dispatch_queue;

@interface GRWUniversalMetrics : NSObject
{
    CDUnknownBlockType _userIDForCurrentSignedInIdentityBlock;
    GRWDeviceState *_deviceState;
    NSObject<OS_dispatch_queue> *_loggingQueue;
}

+ (void)setupWithDeviceState:(id)arg1;
+ (id)sharedInstance;
+ (void)initialize;
+ (_Bool)isLoggingEnabled;
+ (void)setLoggingEnabled:(_Bool)arg1;
+ (id)permissionStates;
+ (id)valueForContentSizeCategory:(id)arg1;
+ (void)logDSEEvent:(int)arg1 frequencyInterval:(double)arg2 totalImpressions:(long long)arg3;
+ (int)permissionProtoStateFromStatus:(long long)arg1;
+ (int)permissionProtoTypeFromType:(long long)arg1;
+ (int)eventCodeFromAuthorizationStatus:(long long)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *loggingQueue; // @synthesize loggingQueue=_loggingQueue;
@property(retain, nonatomic) GRWDeviceState *deviceState; // @synthesize deviceState=_deviceState;
@property(copy, nonatomic) CDUnknownBlockType userIDForCurrentSignedInIdentityBlock; // @synthesize userIDForCurrentSignedInIdentityBlock=_userIDForCurrentSignedInIdentityBlock;
- (void)logEventWithEventCode:(int)arg1 logSource:(int)arg2 account:(id)arg3;
- (void)logEventMessage:(id)arg1 eventCode:(int)arg2;
- (void)logEventCode:(int)arg1 growthLogBlock:(CDUnknownBlockType)arg2;
- (void)logEventCode:(int)arg1 withParameterBlock:(CDUnknownBlockType)arg2;
- (void)logEvent:(int)arg1;
- (void)logEventMessage:(id)arg1 withEventCode:(int)arg2 logSource:(int)arg3 account:(id)arg4;
- (void)handleWillResignActiveNotification:(id)arg1;
- (void)handleDidBecomeActiveNotification:(id)arg1;
- (void)handleWillEnterForegroundNotification:(id)arg1;
- (void)handleDidEnterBackgroundNotification:(id)arg1;
- (void)registerNotifications;
- (void)setup;
- (void)setupWithDeviceState:(id)arg1;
- (id)init;
- (void)logSmartActionsEvent:(int)arg1 bundleIdentifier:(id)arg2 intentType:(int)arg3 presentedApps:(id)arg4;
- (void)logSmartActionsUnsupportedCountryEvent;
- (void)logAppSwitchEvent:(int)arg1 intentType:(int)arg2 linkType:(int)arg3 presentedApps:(id)arg4 bundleIdentifier:(id)arg5 iTunesCampaignCode:(id)arg6 isFirstPrompt:(_Bool)arg7 isCounterfactual:(_Bool)arg8 promptEvaluations:(id)arg9;
- (void)logAppSwitchEvent:(int)arg1 intentType:(int)arg2 linkType:(int)arg3 bundleIdentifier:(id)arg4 isCounterfactual:(_Bool)arg5 promptEvaluations:(id)arg6;
- (void)logAppSwitchEvent:(int)arg1 intentType:(int)arg2 linkType:(int)arg3 presentedApps:(id)arg4 bundleIdentifier:(id)arg5 iTunesCampaignCode:(id)arg6 promptEvaluations:(id)arg7;
- (void)logAppSwitchEvent:(int)arg1 intentType:(int)arg2 bundleIdentifier:(id)arg3 iTunesCampaignCode:(id)arg4;
- (void)logAppSwitchEvent:(int)arg1 intentType:(int)arg2 isFirstPrompt:(_Bool)arg3 isCounterfactual:(_Bool)arg4;
- (void)logAppSwitchEvent:(int)arg1 intentType:(int)arg2 linkType:(int)arg3 promptEvaluations:(id)arg4;
- (void)logAppSwitchEvent:(int)arg1;
- (void)logAppInstallEvent:(int)arg1 installedBundleIdentifier:(id)arg2 installedApps:(id)arg3 sourceType:(int)arg4;
- (void)logInstalledApps:(id)arg1;
- (void)logAppInstallEvent:(int)arg1 installedBundleIdentifier:(id)arg2 installedApps:(id)arg3 installSource:(long long)arg4;
- (void)setFirstUseDateOfApp;
- (id)dateOfFirstUseOfApp;
- (void)logAppStateEvent:(int)arg1;
- (void)enqueueLogEventBlock:(CDUnknownBlockType)arg1;
- (void)logCreatorVideoUploadedEvent;
- (void)logTranslationEvent;
- (void)logSmartMailCalendarButtonTappedEvent;
- (void)logSmartMailCalendarButtonShownEvent;
- (void)logErrorEvent:(int)arg1 errorCode:(long long)arg2;
- (void)logErrorCode:(long long)arg1;
- (void)logIntentEvent:(int)arg1 sendingBundleIdentifier:(id)arg2 receivingBundleIdentifier:(id)arg3 createdDate:(id)arg4 processedDate:(id)arg5 intentFulfilled:(_Bool)arg6;
- (void)logIntentEvent:(int)arg1 sendingBundleIdentifier:(id)arg2 receivingBundleIdentifier:(id)arg3 createdDate:(id)arg4;
- (void)logMessagingEvent:(int)arg1 withTriggeringEventIndex:(id)arg2 targetingRuleNotSatisfied:(id)arg3 conditionsNotSatisfied:(id)arg4 permissionType:(int)arg5 promoNotShownReason:(int)arg6 displayBlockReason:(int)arg7 userAction:(int)arg8 bundleIdentifier:(id)arg9 forMessageWithID:(id)arg10;
- (void)logMessagingEvent:(int)arg1 messageIDs:(id)arg2;
- (void)logMessagingEvent:(int)arg1 withUserAction:(int)arg2 bundleIdentifier:(id)arg3 forMessageWithID:(id)arg4;
- (void)logMessagingDisplayBlockFailureReason:(int)arg1 forMessageWithID:(id)arg2;
- (void)logMessagingPromoNotShownReason:(int)arg1 forMessageWithID:(id)arg2;
- (void)logConditionsEvaluatedWithFailures:(id)arg1 forMessageWithID:(id)arg2;
- (void)logMessagingEvent:(int)arg1 withTriggeringEventIndex:(unsigned long long)arg2 targetingRuleNotSatisfied:(_Bool)arg3 forMessageWithID:(id)arg4;
- (void)logMessagingEvent:(int)arg1 withPermissionType:(int)arg2;
- (void)logMessagingEvent:(int)arg1 forMessageWithID:(id)arg2;
- (void)logMessagingEvent:(int)arg1;

@end

