//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSError.h>

@class NSString, RPCStatus, YTICommand, YTIFormattedString;

@interface NSError (FCDBoqDataTransport)
+ (id)fcdrpc_errorForNilRPCService;
+ (id)fcm_errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)errorWithFCMErrorCode:(unsigned long long)arg1;
+ (id)FIRInstanceIDErrorMissingCheckin;
+ (id)errorWithFIRInstanceIDErrorCode:(unsigned long long)arg1 userInfo:(id)arg2;
+ (id)errorWithFIRInstanceIDErrorCode:(unsigned long long)arg1;
+ (id)jbl_jumbleErrorWithErrorCode:(long long)arg1 localizedDescription:(id)arg2;
+ (id)mdx_errorWithCode:(unsigned long long)arg1 underlyingError:(id)arg2 description:(id)arg3 additionalUserInfo:(id)arg4;
+ (id)mdx_errorWithCode:(unsigned long long)arg1 underlyingError:(id)arg2 description:(id)arg3;
+ (id)mdx_errorWithCode:(unsigned long long)arg1 description:(id)arg2;
+ (id)mdx_errorWithCode:(unsigned long long)arg1;
+ (id)gckb_errorWithErrno:(int)arg1;
+ (id)noNetworkError;
+ (id)accountsListServiceErrorWithMessage:(id)arg1;
+ (id)accessTokenRefreshFailedError;
+ (id)identityRemovedFromDeviceError;
+ (id)commerceErrorWithDomain:(id)arg1 code:(long long)arg2 transaction:(id)arg3 userInfo:(id)arg4 format:(id)arg5 args:(char *)arg6;
+ (id)commerceErrorWithCode:(long long)arg1 userInfo:(id)arg2 format:(id)arg3;
+ (id)commerceErrorWithCode:(long long)arg1 transaction:(id)arg2 format:(id)arg3;
+ (id)commerceErrorWithCode:(long long)arg1 format:(id)arg2;
+ (id)purchaseFlowErrorWithCode:(long long)arg1 transaction:(id)arg2 userInfo:(id)arg3 format:(id)arg4;
+ (id)purchaseFlowErrorWithCode:(long long)arg1 format:(id)arg2;
+ (id)purchaseFlowErrorWithCode:(long long)arg1 message:(id)arg2 transaction:(id)arg3 userInfo:(id)arg4;
+ (id)liveCreationErrorWithCode:(long long)arg1 description:(id)arg2 underlyingError:(id)arg3;
+ (id)liveCreationErrorWithCode:(long long)arg1 description:(id)arg2;
+ (id)liveCreationErrorWithCode:(long long)arg1;
+ (id)xno_errorWithCode:(long long)arg1 message:(id)arg2;
+ (id)xno_errorWithCode:(long long)arg1 message:(id)arg2 cause:(id)arg3;
+ (id)yt_editErrorWithCode:(long long)arg1 localizedDescription:(id)arg2 underlyingError:(id)arg3;
+ (id)yt_editErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)yt_editErrorWithCode:(long long)arg1 localizedDescription:(id)arg2;
+ (id)yt_editErrorWithCode:(long long)arg1;
+ (id)gus_errorWithStatus:(const Status_154abcfe *)arg1;
+ (id)NSErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)ghk_invalidFetcherError;
+ (id)ghk_noValidRecommendationsFoundError;
+ (id)ghk_invalidRecommendationsResponseError;
+ (id)ghk_invalidRealtimeSupportStatusResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidContactFormResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidChatUpdateResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidChatRequestResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidChatEventsResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidChatEventsRequest;
+ (id)ghk_chatStatusPollingTimeout;
+ (id)ghk_invalidCallbackRequestResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidEscalationOptionsResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidConfigurationsResponseErrorWithUserInfo:(id)arg1;
+ (id)ghk_invalidAutocommpleteResponseErrorWithUserInfo:(id)arg1;
+ (id)gak_errorWithGAKAudioUnitError:(int)arg1;
+ (id)gak_errorWithGAKErrorCode:(int)arg1 description:(id)arg2;
+ (id)gak_errorWithOSStatus:(int)arg1 description:(id)arg2;
+ (id)yt_offlineOrchestrationErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)yt_offlineOrchestrationErrorWithCode:(long long)arg1;
+ (_Bool)isNetworkError:(id)arg1;
+ (id)descriptionForDRMError:(long long)arg1;
+ (id)descriptionForPlaybackError:(long long)arg1;
+ (id)playbackErrorWithCode:(long long)arg1 localizedDescription:(id)arg2 underlyingError:(id)arg3 additionalUserInfo:(id)arg4;
+ (id)playbackErrorWithCode:(long long)arg1 playabilityStatus:(id)arg2;
+ (id)playbackErrorWithPlayabilityStatus:(id)arg1;
+ (id)playbackErrorWithMediaError:(id)arg1;
+ (id)playbackErrorWithCode:(long long)arg1 localizedDescription:(id)arg2;
+ (id)playbackErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)playbackErrorWithCode:(long long)arg1;
+ (id)playerErrorWithCode:(long long)arg1 details:(id)arg2;
+ (id)ml_cacheErrorWithCode:(int)arg1 details:(id)arg2 underlyingError:(id)arg3;
+ (id)ml_cacheErrorWithCode:(int)arg1 details:(id)arg2;
+ (id)ml_DRMErrorWithLocalizedDescription:(id)arg1;
+ (id)ml_DRMErrorWithCode:(long long)arg1;
+ (id)ml_downloadErrorWithCode:(long long)arg1 details:(id)arg2 underlyingError:(id)arg3;
+ (id)ml_downloadErrorWithCode:(long long)arg1 details:(id)arg2;
+ (id)ml_mediaErrorWithCode:(long long)arg1 details:(id)arg2 underlyingError:(id)arg3;
+ (id)ml_mediaErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)ml_mediaErrorWithCode:(long long)arg1 details:(id)arg2;
+ (id)ml_mediaErrorWithCode:(long long)arg1;
+ (id)gelTransmissionError;
+ (unsigned long long)getErrorSource:(id)arg1;
+ (unsigned long long)getErrorType:(id)arg1;
+ (unsigned long long)getBitfieldStatus:(id)arg1;
+ (unsigned long long)getGeneralStatus:(id)arg1;
+ (unsigned long long)makeBitfieldStatus:(_Bool)arg1 boxReorderingTurnedOff:(_Bool)arg2 initialMoovBoxProcessed:(_Bool)arg3 moovBoxChangedToFragmented:(_Bool)arg4 mdatMoofSwapEnabled:(_Bool)arg5 moovBoxExpanded:(_Bool)arg6;
+ (id)mp4BoxParsingErrorWithCode:(long long)arg1 description:(id)arg2 underlyingError:(id)arg3;
+ (long long)createMp4ParseErrorCodeWithSource:(unsigned long long)arg1 errorType:(unsigned long long)arg2;
+ (id)mp4BoxParsingErrorWithError:(id)arg1 generalStatus:(unsigned long long)arg2 boxReorderingFeatureEnabled:(_Bool)arg3 boxReorderingTurnedOff:(_Bool)arg4 initialMoovBoxProcessed:(_Bool)arg5 moovBoxChangedToFragmented:(_Bool)arg6 mdatMoofSwapEnabled:(_Bool)arg7 moovBoxExpanded:(_Bool)arg8;
+ (id)mp4BoxParsingErrorWithSource:(unsigned long long)arg1 errorType:(unsigned long long)arg2 description:(id)arg3 underlyingError:(id)arg4;
+ (id)mp4BoxParsingErrorWithSource:(unsigned long long)arg1 errorType:(unsigned long long)arg2 description:(id)arg3;
+ (id)mp4BoxParsingErrorWithSource:(unsigned long long)arg1 errorTrype:(unsigned long long)arg2;
+ (id)yt_uploadErrorWithCode:(long long)arg1 description:(id)arg2 underlyingError:(id)arg3;
+ (id)yt_uploadErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)yt_uploadErrorWithCode:(long long)arg1 description:(id)arg2;
+ (id)yt_uploadErrorWithCode:(long long)arg1;
+ (id)yt_uploadErrorWithError:(id)arg1 failedProcessorType:(int)arg2;
+ (id)yt_adRequestErrorWithCode:(int)arg1 description:(id)arg2;
+ (id)yt_VASTParsingErrorWithCode:(long long)arg1 description:(id)arg2;
+ (id)yt_dataLibErrorWithCode:(long long)arg1 formattedMessage:(id)arg2 formattedActionText:(id)arg3 command:(id)arg4;
+ (id)yt_dataLibErrorWithCode:(long long)arg1 message:(id)arg2;
+ (id)yt_dataLibErrorWithCode:(long long)arg1;
+ (id)apm_errorWithCode:(long long)arg1 description:(id)arg2 monitorContext:(id)arg3;
+ (id)apm_errorWithCode:(long long)arg1 description:(id)arg2;
+ (id)yt_entitiesErrorWithCode:(long long)arg1 underlyingError:(id)arg2 entityKey:(id)arg3;
+ (id)yt_entitiesErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)yt_entitiesErrorWithCode:(long long)arg1;
+ (id)YTSQLiteErrorWithCode:(long long)arg1 underlyingError:(id)arg2 errorCode:(int)arg3 extendedErrorCode:(int)arg4;
+ (id)YTSQLiteErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)YTSQLiteErrorWithCode:(long long)arg1;
+ (long long)HAMErrorCodeForURLErrorCode:(long long)arg1;
+ (id)HAMErrorWithURLResponse:(id)arg1 userInfo:(id)arg2 request:(id)arg3;
+ (id)HAMErrorWithURLError:(id)arg1 userInfo:(id)arg2 request:(id)arg3;
+ (id)HAMErrorWithCode:(long long)arg1 exception:(id)arg2;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 OSStatus:(int)arg3;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 OSStatus:(int)arg3 format:(id)arg4 periodID:(long long)arg5;
+ (id)HAMErrorWithCode:(long long)arg1 userInfo:(id)arg2 details:(id)arg3 underlyingError:(id)arg4;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 underlyingError:(id)arg3;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 underlyingError:(id)arg3 periodID:(long long)arg4;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 OSStatus:(int)arg3 format:(id)arg4;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 format:(id)arg3;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2;
+ (id)HAMErrorWithCode:(long long)arg1 details:(id)arg2 format:(id)arg3 periodID:(long long)arg4;
+ (id)HAMErrorWithCode:(long long)arg1 periodID:(long long)arg2;
+ (id)HAMErrorWithCode:(long long)arg1;
+ (id)HAMErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)grpc_errorFromStatusCode:(int)arg1 details:(const char *)arg2 errorString:(const char *)arg3;
+ (id)yt_netErrorImageWithCause:(id)arg1 errorImage:(id)arg2;
+ (id)yt_netResponseParsingErrorWithCause:(id)arg1;
+ (id)yt_netResponseParsingErrorWithMessage:(id)arg1;
+ (id)yt_netResponseParsingError;
+ (id)yt_netAuthenticationError;
+ (id)yt_netCryptoErrorWithMessage:(id)arg1;
+ (id)yt_netCryptoError;
+ (id)yt_noValidEntityError;
+ (id)yt_operationCancelledError;
+ (id)yt_commonErrorWithCode:(int)arg1;
+ (id)yt_errorWithCode:(long long)arg1 domain:(id)arg2 cause:(id)arg3;
+ (id)yt_errorWithCode:(long long)arg1 domain:(id)arg2 message:(id)arg3;
+ (id)yt_errorWithCode:(long long)arg1 domain:(id)arg2;
- (id)fcdrpc_errorAddingAFDDataErrorPayload:(id)arg1;
- (id)fcdrpc_AFDDataErrorPayload;
- (id)fcdrpc_errorAnnotatedAsTransportRetryable;
- (id)fcdrpc_errorAnnotatedAsServerTimeout;
- (id)fcdrpc_errorAnnotatedAsClientTimeout;
- (id)fcdrpc_errorAddingRPCStatus:(id)arg1;
- (id)fcdrpc_errorAddingHTTPStatusCode:(long long)arg1;
- (_Bool)fcdrpc_isTransportRetryableError;
- (_Bool)fcdrpc_isTimeoutError;
- (_Bool)fcdrpc_isClientTimeoutError;
- (_Bool)fcdrpc_isServerTimeoutError;
- (id)fcdrpc_RPCStatus;
- (id)fcdrpc_HTTPStatusCode;
- (id)fcdrpc_underlyingErrorUserInfoValueForKey:(id)arg1;
- (id)fcdrpc_errorAddingUserInfoValue:(id)arg1 key:(id)arg2;
@property(readonly, nonatomic) unsigned long long fcmErrorCode;
@property(readonly, nonatomic) unsigned long long instanceIDErrorCode;
- (void)mdx_logToConsoleInDebugMode;
- (id)handlePromiseExceptionWithErrorType:(int)arg1 metricsLogger:(id)arg2;
- (int)VASTErrorTypeForPlaybackError;
- (int)adErrorTypeForPlaybackError;
- (_Bool)isNoNetworkError;
- (_Bool)isAccountsListServiceError;
- (_Bool)isAccessTokenRefreshFailedError;
- (_Bool)isIdentityRemovedFromDeviceError;
@property(readonly, nonatomic) NSString *chm_statusMessage;
@property(readonly, nonatomic) RPCStatus *chm_status;
- (id)transaction;
@property(readonly, nonatomic) Status_154abcfe gus_status;
- (id)playerErrorMessageRenderer;
- (_Bool)playbackErrorIsRecoverable;
- (_Bool)playbackErrorCanSkipToRecover;
- (id)ml_playerError;
- (id)ml_shortDescription;
- (id)ml_uncategorizedQOEErrorCode;
- (id)ml_categorizedQOEErrorCode;
- (_Bool)ml_isAVErrorFailedToParse;
- (_Bool)ml_isAVErrorMediaServicesWereReset;
@property(readonly, nonatomic) NSString *grw_dataAsString;
- (_Bool)isGelTransmissionError;
@property(readonly, nonatomic) int yt_uploadProcessorFailureReason;
@property(readonly, nonatomic) _Bool yt_isUploadError;
- (_Bool)yt_isUploadErrorWithCode:(long long)arg1;
@property(readonly, nonatomic) int yt_failedProcessorType;
- (id)yt_uploadErrorWithPhotosLibraryError;
- (int)yt_VASTErrorTypeForRequestError;
- (int)yt_adErrorTypeForRequestError;
- (id)yt_adNetworkErrorWithMessage:(id)arg1;
@property(readonly, nonatomic) YTICommand *yt_command;
@property(readonly, nonatomic) YTIFormattedString *yt_formattedActionText;
@property(readonly, nonatomic) YTIFormattedString *yt_formattedMessage;
- (_Bool)ham_isTransientNetworkError;
- (_Bool)yt_isForbiddenAccessError;
- (_Bool)yt_isUnauthorizedError;
- (_Bool)yt_isNotConnectedToInternetError;
- (_Bool)yt_hasNetErrorImage;
- (id)yt_netErrorImage;
- (_Bool)yt_isNetResponseParsingError;
- (_Bool)yt_isOperationCancelledError;
- (_Bool)yt_isRecoverableNetworkError;
- (_Bool)yt_isTimeoutConnectionResetOrNoConnectionError;
- (_Bool)yt_isContentTypeProtoBuf;
- (_Bool)yt_hasDomain:(id)arg1;
- (id)yt_logDescription;
- (id)yt_dataAsString;
- (id)yt_dataAsRPCStatus;
- (id)yt_dataTypeAndSubtype;
- (id)yt_data;
- (id)yt_message;
@end

