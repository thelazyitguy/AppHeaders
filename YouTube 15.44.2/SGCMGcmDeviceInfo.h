//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/GPBMessage.h>

@class NSData, NSString;

@interface SGCMGcmDeviceInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) unsigned long long androidDeviceId; // @dynamic androidDeviceId;
@property(copy, nonatomic) NSData *apnRegistrationId; // @dynamic apnRegistrationId;
@property(nonatomic) _Bool arcPlusPlus; // @dynamic arcPlusPlus;
@property(nonatomic) _Bool autoUnlockScreenlockEnabled; // @dynamic autoUnlockScreenlockEnabled;
@property(nonatomic) _Bool autoUnlockScreenlockSupported; // @dynamic autoUnlockScreenlockSupported;
@property(nonatomic) _Bool bleRadioSupported; // @dynamic bleRadioSupported;
@property(copy, nonatomic) NSString *bluetoothMacAddress; // @dynamic bluetoothMacAddress;
@property(nonatomic) _Bool bluetoothRadioEnabled; // @dynamic bluetoothRadioEnabled;
@property(nonatomic) _Bool bluetoothRadioSupported; // @dynamic bluetoothRadioSupported;
@property(nonatomic) long long counter; // @dynamic counter;
@property(nonatomic) int deviceAuthzenVersion; // @dynamic deviceAuthzenVersion;
@property(nonatomic) int deviceDisplayDiagonalMils; // @dynamic deviceDisplayDiagonalMils;
@property(copy, nonatomic) NSString *deviceManufacturer; // @dynamic deviceManufacturer;
@property(copy, nonatomic) NSData *deviceMasterKeyHash; // @dynamic deviceMasterKeyHash;
@property(copy, nonatomic) NSString *deviceModel; // @dynamic deviceModel;
@property(copy, nonatomic) NSString *deviceOsCodename; // @dynamic deviceOsCodename;
@property(copy, nonatomic) NSString *deviceOsRelease; // @dynamic deviceOsRelease;
@property(copy, nonatomic) NSString *deviceOsVersion; // @dynamic deviceOsVersion;
@property(nonatomic) long long deviceOsVersionCode; // @dynamic deviceOsVersionCode;
@property(copy, nonatomic) NSString *deviceSoftwarePackage; // @dynamic deviceSoftwarePackage;
@property(copy, nonatomic) NSString *deviceSoftwareVersion; // @dynamic deviceSoftwareVersion;
@property(nonatomic) long long deviceSoftwareVersionCode; // @dynamic deviceSoftwareVersionCode;
@property(nonatomic) int deviceType; // @dynamic deviceType;
@property(copy, nonatomic) NSData *enrollmentSessionId; // @dynamic enrollmentSessionId;
@property(copy, nonatomic) NSData *gcmRegistrationId; // @dynamic gcmRegistrationId;
@property(nonatomic) _Bool hasAndroidDeviceId; // @dynamic hasAndroidDeviceId;
@property(nonatomic) _Bool hasApnRegistrationId; // @dynamic hasApnRegistrationId;
@property(nonatomic) _Bool hasArcPlusPlus; // @dynamic hasArcPlusPlus;
@property(nonatomic) _Bool hasAutoUnlockScreenlockEnabled; // @dynamic hasAutoUnlockScreenlockEnabled;
@property(nonatomic) _Bool hasAutoUnlockScreenlockSupported; // @dynamic hasAutoUnlockScreenlockSupported;
@property(nonatomic) _Bool hasBleRadioSupported; // @dynamic hasBleRadioSupported;
@property(nonatomic) _Bool hasBluetoothMacAddress; // @dynamic hasBluetoothMacAddress;
@property(nonatomic) _Bool hasBluetoothRadioEnabled; // @dynamic hasBluetoothRadioEnabled;
@property(nonatomic) _Bool hasBluetoothRadioSupported; // @dynamic hasBluetoothRadioSupported;
@property(nonatomic) _Bool hasCounter; // @dynamic hasCounter;
@property(nonatomic) _Bool hasDeviceAuthzenVersion; // @dynamic hasDeviceAuthzenVersion;
@property(nonatomic) _Bool hasDeviceDisplayDiagonalMils; // @dynamic hasDeviceDisplayDiagonalMils;
@property(nonatomic) _Bool hasDeviceManufacturer; // @dynamic hasDeviceManufacturer;
@property(nonatomic) _Bool hasDeviceMasterKeyHash; // @dynamic hasDeviceMasterKeyHash;
@property(nonatomic) _Bool hasDeviceModel; // @dynamic hasDeviceModel;
@property(nonatomic) _Bool hasDeviceOsCodename; // @dynamic hasDeviceOsCodename;
@property(nonatomic) _Bool hasDeviceOsRelease; // @dynamic hasDeviceOsRelease;
@property(nonatomic) _Bool hasDeviceOsVersion; // @dynamic hasDeviceOsVersion;
@property(nonatomic) _Bool hasDeviceOsVersionCode; // @dynamic hasDeviceOsVersionCode;
@property(nonatomic) _Bool hasDeviceSoftwarePackage; // @dynamic hasDeviceSoftwarePackage;
@property(nonatomic) _Bool hasDeviceSoftwareVersion; // @dynamic hasDeviceSoftwareVersion;
@property(nonatomic) _Bool hasDeviceSoftwareVersionCode; // @dynamic hasDeviceSoftwareVersionCode;
@property(nonatomic) _Bool hasDeviceType; // @dynamic hasDeviceType;
@property(nonatomic) _Bool hasEnrollmentSessionId; // @dynamic hasEnrollmentSessionId;
@property(nonatomic) _Bool hasGcmRegistrationId; // @dynamic hasGcmRegistrationId;
@property(nonatomic) _Bool hasIsScreenlockStateFlaky; // @dynamic hasIsScreenlockStateFlaky;
@property(nonatomic) _Bool hasKeyHandle; // @dynamic hasKeyHandle;
@property(nonatomic) _Bool hasLocale; // @dynamic hasLocale;
@property(nonatomic) _Bool hasLongDeviceId; // @dynamic hasLongDeviceId;
@property(nonatomic) _Bool hasMobileDataSupported; // @dynamic hasMobileDataSupported;
@property(nonatomic) _Bool hasNotificationEnabled; // @dynamic hasNotificationEnabled;
@property(nonatomic) _Bool hasOauthToken; // @dynamic hasOauthToken;
@property(nonatomic) _Bool hasPixelExperience; // @dynamic hasPixelExperience;
@property(nonatomic) _Bool hasTetheringSupported; // @dynamic hasTetheringSupported;
@property(nonatomic) _Bool hasUserPublicKey; // @dynamic hasUserPublicKey;
@property(nonatomic) _Bool hasUsingSecureScreenlock; // @dynamic hasUsingSecureScreenlock;
@property(nonatomic) _Bool isScreenlockStateFlaky; // @dynamic isScreenlockStateFlaky;
@property(copy, nonatomic) NSData *keyHandle; // @dynamic keyHandle;
@property(copy, nonatomic) NSString *locale; // @dynamic locale;
@property(copy, nonatomic) NSData *longDeviceId; // @dynamic longDeviceId;
@property(nonatomic) _Bool mobileDataSupported; // @dynamic mobileDataSupported;
@property(nonatomic) _Bool notificationEnabled; // @dynamic notificationEnabled;
@property(copy, nonatomic) NSString *oauthToken; // @dynamic oauthToken;
@property(nonatomic) _Bool pixelExperience; // @dynamic pixelExperience;
@property(nonatomic) _Bool tetheringSupported; // @dynamic tetheringSupported;
@property(copy, nonatomic) NSData *userPublicKey; // @dynamic userPublicKey;
@property(nonatomic) _Bool usingSecureScreenlock; // @dynamic usingSecureScreenlock;

@end

