//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/YTLicenseCheckerDelegate-Protocol.h>
#import <Module_Framework/YTLiveStreamStatusCheckerDelegate-Protocol.h>
#import <Module_Framework/YTPlayerHeartbeatController-Protocol.h>
#import <Module_Framework/YTSingleVideoLifecycleStateObserver-Protocol.h>
#import <Module_Framework/YTSingleVideoMediaStateObserver-Protocol.h>

@class GIMMe, NSHashTable, NSNumber, NSString, YTLicenseChecker, YTLiveStreamStatusChecker, YTTimedAction;
@protocol YTHeartbeatService, YTPlayerHeartbeatControllerDelegate, YTSingleVideoObservable;

@interface YTLegacyPlayerHeartbeatController : NSObject <YTLicenseCheckerDelegate, YTLiveStreamStatusCheckerDelegate, YTSingleVideoLifecycleStateObserver, YTSingleVideoMediaStateObserver, YTPlayerHeartbeatController>
{
    id <YTHeartbeatService> _heartbeatService;
    YTTimedAction *_nextHeartbeatTimedAction;
    NSHashTable *_handlers;
    unsigned long long _currentRequestID;
    NSNumber *_forcedRequestID;
    YTLicenseChecker *_licenseChecker;
    YTLiveStreamStatusChecker *_liveStreamStatusChecker;
    NSNumber *_latestValidLiveStreamabilityPollingDelaySeconds;
    id <YTSingleVideoObservable> _activeVideo;
    long long _state;
    id <YTPlayerHeartbeatControllerDelegate> _delegate;
    GIMMe *_gimme;
}

- (void).cxx_destruct;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(nonatomic) __weak id <YTPlayerHeartbeatControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)heartbeatTimedAction;
- (double)secondsBetweenHeartbeats;
- (_Bool)sendDeviceID;
- (id)populatedHeartbeatRequestParams;
- (void)noOpPendingRequest;
- (void)passPlayabilityStatusToHandlers:(id)arg1;
- (void)sendHeartbeatRequest;
- (void)stopNextStatusCheck;
- (void)sendHeartbeatRequestAfterTimeInterval:(double)arg1;
- (void)scheduleNextStatusCheck;
- (void)stop;
- (void)startIfStopped;
- (void)updateStopOrStart;
- (void)stopLiveStreamStatusChecking;
- (id)activeVideoPlayerResponse;
- (void)startLiveStreamStatusCheckingWithContentVideo:(id)arg1;
- (void)stopLicenseChecking;
- (void)startLicenseCheckingWithVideo:(id)arg1;
- (void)setLiveStreamOfflineBlock:(CDUnknownBlockType)arg1;
- (_Bool)isRunningLiveStreamStatusChecking;
- (_Bool)isWaitingForForcedHeartbeat;
- (void)forceHeartbeatPing;
- (void)liveStreamStatusCheckerWantstoStopPlayback:(id)arg1;
- (void)liveStreamStatusCheckerWantsToSuspendPlayback:(id)arg1;
- (void)liveStreamStatusCheckerWantsToReloadLiveStream:(id)arg1;
- (void)liveStreamStatusChecker:(id)arg1 wantsToTransitionToStreamEndpoint:(id)arg2;
- (_Bool)liveStreamStatusChecker:(id)arg1 shouldIgnoreTransition:(id)arg2 timing:(int)arg3 video:(id)arg4;
- (void)licenseChecker:(id)arg1 failedHeartbeatWithError:(id)arg2;
- (void)singleVideo:(id)arg1 lifecycleStateDidChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)singleVideo:(id)arg1 mediaStateDidChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)checkIfLiveStreamWentOfflineWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setActiveVideo:(id)arg1;
- (void)removeHandler:(id)arg1;
- (void)addHandler:(id)arg1;
- (id)handlers;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

