//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSRegularExpression;

@interface YTSocialStylePattern : NSObject
{
    NSRegularExpression *_regexPattern;
    // Error parsing type: {StyleRun="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadata="ptr_"^v}"_extensions_"{ExtensionSet="arena_"^{Arena}"flat_capacity_"S"flat_size_"S"map_"(AllocatedData="flat"^{KeyValue}"large"^{map<int, proto2::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, proto2::internal::ExtensionSet::Extension> > >})}"_has_bits_"{HasBits<1>="has_bits_"[1I]}"_cached_size_"{CachedSize="size_"{atomic<int>="__a_"{__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >="__a_value"Ai}}}"font_color_"I"font_size_"f"length_"I"start_index_"I"style_run_extensions_"^{MessageLite}"font_name_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"font_family_name_"{ArenaStringPtr="tagged_ptr_"{TaggedPtr<std::__1::basic_string<char> >="ptr_"^v}}"underline_"i"italic_"B"letter_spacing_"f"strikethrough_"i"baseline_offset_"i"font_weight_"(FontWeightUnion="weight_"I"weight_label_"i)"_oneof_case_"[1I]}, name: _styleRun
}

- (id).cxx_construct;
- (void).cxx_destruct;
// Error parsing type for property styleRun:
// Property attributes: T^{StyleRun=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, proto2::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, proto2::internal::ExtensionSet::Extension> > >})}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}IfII^{MessageLite}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}{ArenaStringPtr={TaggedPtr<std::__1::basic_string<char> >=^v}}iBfii(FontWeightUnion=Ii)[1I]},N,V_styleRun

@property(retain, nonatomic) NSRegularExpression *regexPattern; // @synthesize regexPattern=_regexPattern;

@end

