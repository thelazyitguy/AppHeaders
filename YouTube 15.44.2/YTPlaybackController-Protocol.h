//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/YTMacroExpansionProvider-Protocol.h>
#import <Module_Framework/YTPlayerMenuProtocol-Protocol.h>
#import <Module_Framework/YTPlayerViewLayoutProtocol-Protocol.h>
#import <Module_Framework/YTResponder-Protocol.h>

@class NSData, NSError, NSString, UIView, UIViewController, YTCPN, YTExpectedPlayerLayout, YTIWatchNextResponse, YTPlaybackConfig, YTPlaybackControllerRestorableState, YTPlaybackDebugData, YTPlayerResponse, YTPlayerTransition, YTPlayerView;
@protocol YTPlaybackController, YTPlaybackControllerErrorObserver, YTPlaybackControllerEventsDelegate, YTPlaybackControllerScrubbingObserver, YTPlaybackControllerUIDelegate, YTPlayerOverlayFactory, YTResponder, YTSingleVideoObservable, YTVideoPlayerOverlayProtocol;

@protocol YTPlaybackController <YTMacroExpansionProvider, YTPlayerMenuProtocol, YTPlayerViewLayoutProtocol, YTResponder>
@property(nonatomic) _Bool zoomToFill;
@property(nonatomic) __weak id <YTResponder> parentResponder;
@property(readonly, nonatomic) id <YTPlaybackController> internalPlaybackController;
@property(readonly, nonatomic) YTPlayerView *playerView;
@property(nonatomic) _Bool switchesOnPlaybackRouteChange;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) YTPlayerResponse *playerResponse;
@property(readonly, nonatomic) double contentVideoMediaTime;
@property(readonly, nonatomic) double currentVideoTotalMediaTime;
@property(readonly, nonatomic) double currentVideoMediaTime;
@property(readonly, nonatomic) _Bool isVRModeActive;
@property(readonly, nonatomic) id <YTSingleVideoObservable> contentVideo;
@property(readonly, nonatomic) id <YTSingleVideoObservable> activeVideo;
@property(nonatomic, getter=isActivePlayback) _Bool activePlayback;
@property(readonly, nonatomic) UIViewController<YTVideoPlayerOverlayProtocol> *contentVideoPlayerOverlay;
@property(readonly, nonatomic) UIViewController<YTVideoPlayerOverlayProtocol> *activeVideoPlayerOverlay;
@property(readonly, nonatomic, getter=isMDXActive) _Bool MDXActive;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;
@property(nonatomic, getter=isExternalPlaybackAllowed) _Bool externalPlaybackAllowed;
@property(nonatomic) _Bool hasNextVideo;
@property(nonatomic) _Bool hasPreviousVideo;
@property(nonatomic) _Bool playlistControlsHidden;
@property(readonly, nonatomic) _Bool isPlayingAdIntro;
@property(readonly, nonatomic) _Bool isPlayingAdSurvey;
@property(readonly, nonatomic) _Bool isPlayingAd;
@property(readonly, nonatomic) _Bool isPlaybackFinished;
@property(readonly, nonatomic) int state;
@property(readonly, nonatomic) _Bool currentVideoIsLocal;
@property(readonly, nonatomic, getter=isCurrentVideoVertical) _Bool currentVideoVertical;
@property(readonly, nonatomic) NSString *currentVideoID;
@property(readonly, nonatomic) YTCPN *contentVideoCPN;
@property(readonly, nonatomic) NSString *contentVideoID;
@property(readonly, nonatomic) long long playerState;
@property(nonatomic) __weak id <YTPlaybackControllerUIDelegate> UIDelegate;
@property(nonatomic) __weak id <YTPlaybackControllerEventsDelegate> eventsDelegate;
- (void)removeErrorObserver:(id <YTPlaybackControllerErrorObserver>)arg1;
- (void)addErrorObserver:(id <YTPlaybackControllerErrorObserver>)arg1;
- (void)removeScrubbingObserver:(id <YTPlaybackControllerScrubbingObserver>)arg1;
- (void)addScrubbingObserver:(id <YTPlaybackControllerScrubbingObserver>)arg1;
- (UIView *)playerSnapshotView;
- (void)didPressSkipAd;
- (void)setAccountLinkState:(NSData *)arg1;
- (void)setClipID:(NSString *)arg1;
- (void)setBlackoutActive:(_Bool)arg1;
- (void)setUserAudioOnlyModeActive:(_Bool)arg1;
- (void)setOverlayFactory:(id <YTPlayerOverlayFactory>)arg1;
- (_Bool)isInlinePlaybackActive;
- (void)switchToInlinePlayback:(_Bool)arg1;
- (void)handleRemoteControlEvent:(long long)arg1;
- (void)scrubToTime:(double)arg1;
- (void)setMuted:(_Bool)arg1;
- (void)setVolume:(float)arg1;
- (void)replay;
- (void)resumePlayback;
- (void)suspendPlayback;
- (_Bool)arePlayerControlsHidden;
- (YTPlaybackDebugData *)playbackDebugData;
- (void)didPressReplay;
- (void)didPressPause;
- (void)didPressPlay;
- (void)didPressCompanionAd;
- (void)setLiveCaptionsVerticalRatio:(double)arg1;
- (void)setExpansionCoefficient:(double)arg1;
- (void)restoreToState:(YTPlaybackControllerRestorableState *)arg1 playbackConfig:(YTPlaybackConfig *)arg2;
- (YTPlaybackControllerRestorableState *)restorableState;
- (void)resetToLoading;
- (void)reset;
- (void)setWatchNextResponse:(YTIWatchNextResponse *)arg1;
- (_Bool)handlesAutoplayingInternally;
- (void)setUpcomingPlayerTransition:(YTPlayerTransition *)arg1 playbackConfig:(YTPlaybackConfig *)arg2;
- (void)prepareToLoadWithPlayerTransition:(YTPlayerTransition *)arg1 expectedLayout:(YTExpectedPlayerLayout *)arg2;
- (void)loadWithPlayerTransition:(YTPlayerTransition *)arg1 playbackConfig:(YTPlaybackConfig *)arg2;
@end

