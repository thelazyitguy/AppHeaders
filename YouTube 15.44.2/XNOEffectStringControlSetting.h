//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSSet, NSString;

@interface XNOEffectStringControlSetting : NSObject
{
    // Error parsing type: ^{ControlSetting<std::__1::basic_string<char> >={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{Mutex={atomic<long>={__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >=Aq}}}{optional<absl::flat_hash_set<std::__1::basic_string<char>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::basic_string<char> > > >=B(?={flat_hash_set<std::__1::basic_string<char>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::basic_string<char> > >=*^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::basic_string<char> > >=Q}}{dummy_type=[48{empty_struct=}]})}}, name: _setting
    NSSet *_possibleValues;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *possibleValues; // @synthesize possibleValues=_possibleValues;
@property(copy, nonatomic) NSString *currentValue;
-     // Error parsing type: @24@0:8^{ControlSetting<std::__1::basic_string<char> >={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{Mutex={atomic<long>={__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >=Aq}}}{optional<absl::flat_hash_set<std::__1::basic_string<char>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::basic_string<char> > > >=B(?={flat_hash_set<std::__1::basic_string<char>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::basic_string<char> > >=*^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}QQ{HashtablezInfoHandle=}{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::basic_string<char> > >=Q}}{dummy_type=[48{empty_struct=}]})}}16, name: initWithNativeSetting:

@end

