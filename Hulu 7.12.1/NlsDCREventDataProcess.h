//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSString, NSTimer, NlsApiWorker;
@protocol OS_dispatch_queue;

@interface NlsDCREventDataProcess : NSObject
{
    _Bool _playReported;
    _Bool _pauseReported;
    _Bool _stopReported;
    _Bool _adDetected;
    _Bool _restartTimerDelayed;
    NSArray *_supportedEvents;
    NlsApiWorker *_worker;
    NSTimer *_inactivityTimer;
    double _playDelayedTs;
    double _resumeDelayedTs;
    double _lastTimestamp;
    double _stopLastTimestamp;
    long long _lastPlayhead;
    NSMutableArray *_collectedButtonEvents;
    NSString *_buttonEventDelimeter;
    NSString *_buttonEventParamDelimeter;
    long long _pauseEventTimeoutPlayhead;
    long long _pauseEventTimeoutID3;
    NSObject<OS_dispatch_queue> *_dataProcessQueue;
}

@property(nonatomic) _Bool restartTimerDelayed; // @synthesize restartTimerDelayed=_restartTimerDelayed;
@property(nonatomic) __weak NSObject<OS_dispatch_queue> *dataProcessQueue; // @synthesize dataProcessQueue=_dataProcessQueue;
@property(nonatomic) long long pauseEventTimeoutID3; // @synthesize pauseEventTimeoutID3=_pauseEventTimeoutID3;
@property(nonatomic) long long pauseEventTimeoutPlayhead; // @synthesize pauseEventTimeoutPlayhead=_pauseEventTimeoutPlayhead;
@property(retain, nonatomic) NSString *buttonEventParamDelimeter; // @synthesize buttonEventParamDelimeter=_buttonEventParamDelimeter;
@property(retain, nonatomic) NSString *buttonEventDelimeter; // @synthesize buttonEventDelimeter=_buttonEventDelimeter;
@property(retain, nonatomic) NSMutableArray *collectedButtonEvents; // @synthesize collectedButtonEvents=_collectedButtonEvents;
@property(nonatomic) long long lastPlayhead; // @synthesize lastPlayhead=_lastPlayhead;
@property(nonatomic) _Bool adDetected; // @synthesize adDetected=_adDetected;
@property(nonatomic) _Bool stopReported; // @synthesize stopReported=_stopReported;
@property(nonatomic) _Bool pauseReported; // @synthesize pauseReported=_pauseReported;
@property(nonatomic) _Bool playReported; // @synthesize playReported=_playReported;
@property(nonatomic) double stopLastTimestamp; // @synthesize stopLastTimestamp=_stopLastTimestamp;
@property(nonatomic) double lastTimestamp; // @synthesize lastTimestamp=_lastTimestamp;
@property(nonatomic) double resumeDelayedTs; // @synthesize resumeDelayedTs=_resumeDelayedTs;
@property(nonatomic) double playDelayedTs; // @synthesize playDelayedTs=_playDelayedTs;
@property(retain, nonatomic) NSTimer *inactivityTimer; // @synthesize inactivityTimer=_inactivityTimer;
@property(nonatomic) __weak NlsApiWorker *worker; // @synthesize worker=_worker;
@property(retain, nonatomic) NSArray *supportedEvents; // @synthesize supportedEvents=_supportedEvents;
- (void).cxx_destruct;
- (void)clearButtonEvents;
@property(readonly, nonatomic) NSString *collectedButtonEventsString;
- (void)addButtonEvent:(id)arg1;
- (void)inactivityTimerFired:(id)arg1;
- (void)stopInactivityTimer;
- (void)restartInactivityTimerWithArrivalTime:(id)arg1;
- (void)reportResumeIfNeeded;
- (void)reportPauseIfNeededWithArrivalTime:(double)arg1;
- (void)reportStopIfNeeded;
- (void)reportPlayIfNeeded;
- (void)handleMuteEventWithValue:(_Bool)arg1 arrivalTime:(double)arg2;
- (void)handleShutdownEventWithArrivalTime:(double)arg1;
- (void)handleRewindEventWithValue:(long long)arg1 arrivalTime:(double)arg2;
- (void)handleForwardEventWithValue:(long long)arg1 arrivalTime:(double)arg2;
- (void)handleEndEventWithArrivalTime:(double)arg1;
- (void)handleStopEventWithContentType:(unsigned long long)arg1 arrivalTime:(double)arg2;
- (void)handlePlayheadPositionEventWithPlayhead:(long long)arg1 contentType:(unsigned long long)arg2 arrivalTime:(double)arg3;
- (void)handleMetadataEventWithNewAssetId:(id)arg1 prevAssetId:(id)arg2 newContentType:(unsigned long long)arg3 prevContentType:(unsigned long long)arg4 arrivalTime:(double)arg5;
- (id)initWithWorker:(id)arg1 processQueue:(id)arg2;

@end

