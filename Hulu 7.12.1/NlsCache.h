//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString, NlsErrorReporter;

@interface NlsCache : NSObject
{
    NSString *_instanceId;
    NSString *_appId;
    NlsErrorReporter *_errorReporter;
    struct sqlite3 *_db;
    NSString *_databasePath;
}

+ (id)removeDatabaseFileForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3;
+ (void)renameDatabaseFilesForAppId:(id)arg1 withErrorLogger:(id)arg2;
+ (_Bool)databaseFileExistsForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3;
+ (id)databasePathForInstanceId:(id)arg1 appId:(id)arg2 withErrorLogger:(id)arg3;
@property(retain, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(nonatomic) struct sqlite3 *db; // @synthesize db=_db;
@property __weak NlsErrorReporter *errorReporter; // @synthesize errorReporter=_errorReporter;
@property(retain, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(retain, nonatomic) NSString *instanceId; // @synthesize instanceId=_instanceId;
- (void).cxx_destruct;
- (void)postLowDiskSpaceNotification;
- (void)checkLowDiskSpaceAndSendNotificationIfNeeded;
- (_Bool)moveRowsFromTable:(unsigned int)arg1 toTable:(unsigned int)arg2 forRowIds:(id)arg3 withPendingLimit:(int)arg4;
- (void)collectPendingPingsWithLimit:(int)arg1;
- (void)processDataFromDefaultsWithLimit:(int)arg1;
- (void)applyPendingDataLimit:(int)arg1 openDb:(_Bool)arg2;
- (void)applyOfflineDataLimit:(int)arg1;
- (void)processDataFromOtherDatabasesWithLimit:(int)arg1;
- (id)tableNameFromTableType:(unsigned int)arg1;
- (int)getRowCountOfTable:(unsigned int)arg1;
- (id)getNotUploadedRecordsWithLimit:(int)arg1;
- (id)getRowsSortedByTimeFromTable:(unsigned int)arg1 withLimit:(unsigned long long)arg2 forMessageType:(int)arg3 exceptRowIDs:(id)arg4;
- (id)getRowsSortedByTimeFromTable:(unsigned int)arg1 withLimit:(unsigned long long)arg2 exceptRowIDs:(id)arg3;
- (id)getRowsSortedByTimeFromTable:(unsigned int)arg1 withLimit:(unsigned long long)arg2;
- (_Bool)deleteRowOfTable:(unsigned int)arg1 atRow:(id)arg2;
- (_Bool)deleteRowsOfTable:(unsigned int)arg1;
- (void)deleteOldRecords:(unsigned int)arg1 curTime:(double)arg2;
- (_Bool)insertRecord:(id)arg1 ofType:(int)arg2 toTable:(unsigned int)arg3 withArrivalTime:(double)arg4 processorId:(long long)arg5 requestType:(id)arg6 userAgent:(id)arg7;
- (int)configureTable:(id)arg1 forDatabase:(struct sqlite3 *)arg2;
- (int)createTable:(id)arg1 forDatabase:(struct sqlite3 *)arg2;
- (int)dropTable:(id)arg1 forDatabase:(struct sqlite3 *)arg2;
- (_Bool)isTableExistAndValid:(id)arg1 forDatabase:(struct sqlite3 *)arg2;
- (int)configureDatabase:(struct sqlite3 *)arg1;
- (void)dealloc;
- (int)closeDatabase;
- (int)openDatabase;
- (struct sqlite3 *)initializeDatabase;
- (id)initWithErrorReporter:(id)arg1 appId:(id)arg2 instanceId:(id)arg3;

@end

