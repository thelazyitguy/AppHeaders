//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Funny/FBAdEventLogging-Protocol.h>

@class FBAdConcurrentArray, FBAdEventConfiguration, FBAdEventStorage, FBAdTimer, NSString, NSUUID;
@protocol FBAdEventAdHocDataProvider, FBAdEventSignalHandler, FBAdNetworkingService, OS_dispatch_queue;

@interface FBAdEventDispatcher : NSObject <FBAdEventLogging>
{
    unsigned long long _sendAttempts;
    FBAdEventStorage *_eventStorage;
    CDUnknownBlockType _bdDictHandler;
    CDUnknownBlockType _postLogHandler;
    FBAdTimer *_dispatchTimer;
    NSObject<OS_dispatch_queue> *_dispatchTimerQueue;
    FBAdConcurrentArray *_eventsInTransit;
    id <FBAdNetworkingService> _networkingService;
    FBAdEventConfiguration *_configuration;
    id <FBAdEventSignalHandler> _signalHandler;
    id <FBAdEventAdHocDataProvider> _adHocDataProvider;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <FBAdEventAdHocDataProvider> adHocDataProvider; // @synthesize adHocDataProvider=_adHocDataProvider;
@property(retain, nonatomic) id <FBAdEventSignalHandler> signalHandler; // @synthesize signalHandler=_signalHandler;
@property(retain, nonatomic) FBAdEventConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) id <FBAdNetworkingService> networkingService; // @synthesize networkingService=_networkingService;
@property(retain, nonatomic) FBAdConcurrentArray *eventsInTransit; // @synthesize eventsInTransit=_eventsInTransit;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchTimerQueue; // @synthesize dispatchTimerQueue=_dispatchTimerQueue;
@property(retain, nonatomic) FBAdTimer *dispatchTimer; // @synthesize dispatchTimer=_dispatchTimer;
@property(copy, nonatomic) CDUnknownBlockType postLogHandler; // @synthesize postLogHandler=_postLogHandler;
@property(copy, nonatomic) CDUnknownBlockType bdDictHandler; // @synthesize bdDictHandler=_bdDictHandler;
@property(retain) FBAdEventStorage *eventStorage; // @synthesize eventStorage=_eventStorage;
@property(nonatomic) unsigned long long sendAttempts; // @synthesize sendAttempts=_sendAttempts;
@property(readonly, nonatomic) double sessionTime;
- (void)queryTokensSyncWithStatement:(const char *)arg1 withDatabase:(struct sqlite3 *)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)queryEventsSyncWithStatement:(const char *)arg1 withDatabase:(struct sqlite3 *)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)removeAllOrphanedEventsSyncWithDatabase:(struct sqlite3 *)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)removeAllOrphanedTokensSyncWithDatabase:(struct sqlite3 *)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)updateAttemptCountForEvent:(id)arg1 withDatabase:(struct sqlite3 *)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)insertEvent:(id)arg1 withDatabase:(struct sqlite3 *)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)cleanupEventsSync:(id)arg1 withDatabase:(struct sqlite3 *)arg2;
- (_Bool)isEventRetriable:(id)arg1;
- (_Bool)isEventSuccessful:(id)arg1;
- (void)sendRequestInternal:(id)arg1 withExtraData:(id)arg2 onRetry:(CDUnknownBlockType)arg3;
- (_Bool)shouldPurgeOn413Response;
- (void)dispatchEventsImmediately;
- (void)dispatchEvents;
- (void)retryDispatch;
- (_Bool)shouldDispatchNow:(id)arg1;
- (void)logEventOfType:(id)arg1 withPriority:(unsigned long long)arg2 withToken:(id)arg3 withExtraData:(id)arg4 withCallback:(CDUnknownBlockType)arg5;
- (void)logEventOfType:(id)arg1 withPriority:(unsigned long long)arg2 withToken:(id)arg3 withExtraData:(id)arg4;
- (void)logEvent:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)tokenIdForToken:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)setupDatabaseWithCallback:(CDUnknownBlockType)arg1;
- (void)migrateDatabaseV1ToV2:(struct sqlite3 *)arg1;
- (void)resetDispatchTimerWithTimeInterval:(double)arg1;
- (void)dispatchErrorSignal:(unsigned long long)arg1 errorDescription:(id)arg2;
- (void)dealloc;
- (id)sessionStartTime;
@property(readonly, nonatomic) NSUUID *sessionId;
- (id)initWithConfiguation:(id)arg1 networkingService:(id)arg2 eventStorage:(id)arg3 adHocDataProvider:(id)arg4 signalHandler:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

