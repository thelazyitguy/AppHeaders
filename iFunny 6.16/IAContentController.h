//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Funny/IANetworkingClientDelegate-Protocol.h>
#import <Funny/SKStoreProductViewControllerDelegate-Protocol.h>

@class IAAdModel, IANetworkingClient, IAViewController, IAWebBrowserController, NSMutableArray, NSString, SKStoreProductViewController, UIViewController;
@protocol IAContentControllerDelegate, IAInterfaceAdViewControllerDelegate><IAInterfaceSKResponder;

@interface IAContentController : NSObject <IANetworkingClientDelegate, SKStoreProductViewControllerDelegate>
{
    _Bool _internalBrowserPresented;
    _Bool _isOpeningSmartLink;
    _Bool _isPresentedFromFS;
    _Bool _isOpeningClickThrough;
    _Bool _didCallOpenExternalApp;
    _Bool _didFailToLoadStoreKit;
    id <IAContentControllerDelegate> _delegate;
    IAAdModel *_model;
    UIViewController *_viewControllerResponsibleForEvent;
    IAViewController<IAInterfaceAdViewControllerDelegate><IAInterfaceSKResponder> *_viewController;
    SKStoreProductViewController *_storeController;
    IANetworkingClient *_networkingClient;
    IAWebBrowserController *_webController;
    CDUnknownBlockType _openURLCompletion;
    long long _redirectsCount;
    NSMutableArray *_clickThroughURLs;
    long long _lastStatusBarOrientation;
}

- (void).cxx_destruct;
@property(nonatomic) long long lastStatusBarOrientation; // @synthesize lastStatusBarOrientation=_lastStatusBarOrientation;
@property(retain, nonatomic) NSMutableArray *clickThroughURLs; // @synthesize clickThroughURLs=_clickThroughURLs;
@property(nonatomic) long long redirectsCount; // @synthesize redirectsCount=_redirectsCount;
@property(nonatomic) _Bool didFailToLoadStoreKit; // @synthesize didFailToLoadStoreKit=_didFailToLoadStoreKit;
@property _Bool didCallOpenExternalApp; // @synthesize didCallOpenExternalApp=_didCallOpenExternalApp;
@property _Bool isOpeningClickThrough; // @synthesize isOpeningClickThrough=_isOpeningClickThrough;
@property(nonatomic) _Bool isPresentedFromFS; // @synthesize isPresentedFromFS=_isPresentedFromFS;
@property(copy, nonatomic) CDUnknownBlockType openURLCompletion; // @synthesize openURLCompletion=_openURLCompletion;
@property(retain, nonatomic) IAWebBrowserController *webController; // @synthesize webController=_webController;
@property(retain, nonatomic) IANetworkingClient *networkingClient; // @synthesize networkingClient=_networkingClient;
@property _Bool isOpeningSmartLink; // @synthesize isOpeningSmartLink=_isOpeningSmartLink;
@property(nonatomic) _Bool internalBrowserPresented; // @synthesize internalBrowserPresented=_internalBrowserPresented;
@property(retain, nonatomic) SKStoreProductViewController *storeController; // @synthesize storeController=_storeController;
@property(retain, nonatomic) IAViewController<IAInterfaceAdViewControllerDelegate><IAInterfaceSKResponder> *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) __weak UIViewController *viewControllerResponsibleForEvent; // @synthesize viewControllerResponsibleForEvent=_viewControllerResponsibleForEvent;
@property(retain, nonatomic) IAAdModel *model; // @synthesize model=_model;
@property(nonatomic) __weak id <IAContentControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (void)orientationChanged:(id)arg1;
- (void)sendCILog:(unsigned long long)arg1 description:(id)arg2;
- (_Bool)networkingClient:(id)arg1 shouldRedirectToURL:(id)arg2;
- (void)networkingClient:(id)arg1 failedWithError:(id)arg2;
- (void)networkingClient:(id)arg1 succeededWithHTTPStatusCode:(long long)arg2 headers:(id)arg3 data:(id)arg4;
- (_Bool)tryToUseSKAdNetworkURL:(CDUnknownBlockType)arg1;
- (void)setSwipeableButtonSizes;
- (void)addSwipeableButtonIfNeeded;
- (void)continueWithDeepLinkFromSmartlink:(id)arg1 withSuccess:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)continueWithExternalAppsFlow:(id)arg1 withSuccess:(_Bool)arg2 isDeepLink:(_Bool)arg3 isExternalBrowserLink:(_Bool)arg4 isFyberNativeBrowserLink:(_Bool)arg5;
- (void)continueWithAppStoreFlow:(id)arg1 withSuccess:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (_Bool)shouldCloseAdAfterClick;
- (void)closeAdIfNeeded;
- (void)invokeOpenURLCompletionWithResult:(_Bool)arg1;
- (void)tryToOpenAllRedirectsAndShowInAppBrowser:(id)arg1;
- (id)nativeBrowserLink:(id)arg1;
- (void)sendClickThroughEvent;
- (void)showInAppBrowser:(id)arg1 withHTML:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)sendSmartLinkTrackingURLs:(id)arg1;
- (void)openSmartLinkFallback:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)openSmartLink:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)failedToOpenURL:(id)arg1;
- (void)privateTryToOpenURL:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)didTryToOpenURL:(id)arg1 clickThroughMethod:(id)arg2 success:(_Bool)arg3 error:(id)arg4;
- (void)handleAppStoreURL:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)shouldOpenInExternalApp:(id)arg1;
- (id)storeKitURL;
- (id)skAdNetworkStoreURL;
- (_Bool)isControllerActiveAndVisible:(id)arg1;
- (_Bool)isOpeningLinkInProcess;
- (_Bool)isIAInternalLink:(id)arg1;
- (_Bool)isAppLink:(id)arg1;
- (void)linkClicked:(id)arg1 clickTrackers:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissAd;
- (void)reset;
- (void)setHasFiredImpression:(_Bool)arg1;
- (_Bool)hasFiredImpression;
- (void)willOpenExternalApp;
- (void)didDismissFullscreen;
- (void)willDismissFullscreen;
- (void)didPresentFullscreen;
- (void)willPresentFullscreen;
- (void)willReportImpression;
- (void)didClick;
- (id)viewControllerForPresentingModalViews;
- (void)tryToOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)supportsRefresh;
- (void)performAdSwitchWithCompletion:(CDUnknownBlockType)arg1;
- (void)clean;
- (void)isReady;
- (_Bool)isInFS;
- (_Bool)isInBG;
- (void)initStoreController:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

