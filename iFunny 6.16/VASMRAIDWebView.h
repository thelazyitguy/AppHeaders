//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Funny/VASWebView.h>

#import <Funny/VASBrowserViewControllerDelegate-Protocol.h>
#import <Funny/VASEventReceiver-Protocol.h>
#import <Funny/VASMRAIDViewControllerDelegate-Protocol.h>
#import <Funny/VASWebViewCommandPerformer-Protocol.h>

@class NSDictionary, NSMutableSet, NSString, UIView, VASAppStore, VASBrowserViewController, VASForceOrientationProperties, VASMRAIDCloseButton, VASMRAIDCommandParser, VASMRAIDViewController, VASTask, VASVisibilityWatcher;

@interface VASMRAIDWebView : VASWebView <VASEventReceiver, VASBrowserViewControllerDelegate, VASMRAIDViewControllerDelegate, VASWebViewCommandPerformer>
{
    _Bool _immersiveEnabled;
    _Bool _isViewable;
    _Bool _isClosing;
    _Bool _isUnloading;
    _Bool _isResizing;
    _Bool _isExpanding;
    _Bool _contentPresented;
    _Bool _exposureChangePending;
    unsigned long long _placementType;
    VASMRAIDCommandParser *_commandParser;
    VASAppStore *_appStore;
    unsigned long long _mraidState;
    VASMRAIDWebView *_firstMRAIDWebView;
    VASMRAIDWebView *_secondMRAIDWebView;
    VASMRAIDViewController *_expandedViewController;
    VASBrowserViewController *_browserController;
    VASForceOrientationProperties *_mraidOrientationProperties;
    long long _transitionStyle;
    UIView *_defaultSuperview;
    NSMutableSet *_jsActiveCommands;
    NSDictionary *_previousFrame;
    UIView *_resizeView;
    VASMRAIDCloseButton *_closeButton;
    unsigned long long _previousExposure;
    double _previousExposureChangeTime;
    VASTask *_exposureTask;
    VASVisibilityWatcher *_visibilityWatcher;
    struct CGRect _defaultFrame;
    struct CGRect _previousVisibleRect;
    struct CGAffineTransform _originalTransform;
}

+ (struct CGRect)boundsOnScreenOfView:(id)arg1;
+ (struct CGSize)sizeOnScreenOfView:(id)arg1;
+ (struct CGSize)screenSize;
+ (_Bool)CGSizeEquivalentSize1:(struct CGSize)arg1 size2:(struct CGSize)arg2;
+ (id)getJSFileWithName:(id)arg1;
+ (id)stringFromJSONObject:(id)arg1;
+ (id)logger;
- (void).cxx_destruct;
@property(retain, nonatomic) VASVisibilityWatcher *visibilityWatcher; // @synthesize visibilityWatcher=_visibilityWatcher;
@property(retain, nonatomic) VASTask *exposureTask; // @synthesize exposureTask=_exposureTask;
@property(nonatomic) _Bool exposureChangePending; // @synthesize exposureChangePending=_exposureChangePending;
@property(nonatomic) double previousExposureChangeTime; // @synthesize previousExposureChangeTime=_previousExposureChangeTime;
@property(nonatomic) struct CGRect previousVisibleRect; // @synthesize previousVisibleRect=_previousVisibleRect;
@property(nonatomic) unsigned long long previousExposure; // @synthesize previousExposure=_previousExposure;
@property(retain, nonatomic) VASMRAIDCloseButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIView *resizeView; // @synthesize resizeView=_resizeView;
@property(retain, nonatomic) NSDictionary *previousFrame; // @synthesize previousFrame=_previousFrame;
@property(retain, nonatomic) NSMutableSet *jsActiveCommands; // @synthesize jsActiveCommands=_jsActiveCommands;
@property(nonatomic) struct CGRect defaultFrame; // @synthesize defaultFrame=_defaultFrame;
@property(nonatomic) struct CGAffineTransform originalTransform; // @synthesize originalTransform=_originalTransform;
@property(nonatomic) __weak UIView *defaultSuperview; // @synthesize defaultSuperview=_defaultSuperview;
@property(nonatomic) long long transitionStyle; // @synthesize transitionStyle=_transitionStyle;
@property(retain, nonatomic) VASForceOrientationProperties *mraidOrientationProperties; // @synthesize mraidOrientationProperties=_mraidOrientationProperties;
@property(retain, nonatomic) VASBrowserViewController *browserController; // @synthesize browserController=_browserController;
@property(retain, nonatomic) VASMRAIDViewController *expandedViewController; // @synthesize expandedViewController=_expandedViewController;
@property(retain, nonatomic) VASMRAIDWebView *secondMRAIDWebView; // @synthesize secondMRAIDWebView=_secondMRAIDWebView;
@property(nonatomic) __weak VASMRAIDWebView *firstMRAIDWebView; // @synthesize firstMRAIDWebView=_firstMRAIDWebView;
@property(nonatomic) _Bool contentPresented; // @synthesize contentPresented=_contentPresented;
@property(nonatomic) _Bool isExpanding; // @synthesize isExpanding=_isExpanding;
@property(nonatomic) _Bool isResizing; // @synthesize isResizing=_isResizing;
@property(nonatomic) _Bool isUnloading; // @synthesize isUnloading=_isUnloading;
@property(nonatomic) _Bool isClosing; // @synthesize isClosing=_isClosing;
@property(nonatomic) _Bool isViewable; // @synthesize isViewable=_isViewable;
@property(nonatomic) unsigned long long mraidState; // @synthesize mraidState=_mraidState;
@property(retain, nonatomic) VASAppStore *appStore; // @synthesize appStore=_appStore;
@property(retain, nonatomic) VASMRAIDCommandParser *commandParser; // @synthesize commandParser=_commandParser;
@property(nonatomic) unsigned long long placementType; // @synthesize placementType=_placementType;
@property(getter=isImmersiveEnabled) _Bool immersiveEnabled; // @synthesize immersiveEnabled=_immersiveEnabled;
- (void)anchorSubview:(id)arg1 toSuperview:(id)arg2;
- (void)anchorSubview:(id)arg1 toSuperview:(id)arg2 withSize:(struct CGSize)arg3;
- (id)stringFromMRAIDState:(unsigned long long)arg1;
- (void)loadTwoPartRequest:(id)arg1;
- (id)omFriendlyObstructions;
@property(readonly, copy) NSString *description;
- (void)fireJSErrorMessage:(id)arg1 forAction:(id)arg2;
- (void)modalCommandCompleted:(id)arg1;
- (_Bool)beginModalCommand:(id)arg1;
- (_Bool)isModalCommandActive:(id)arg1;
- (void)adDidLeaveApplication;
- (void)browserDidClose:(id)arg1;
- (void)openInAppBrowserWithURL:(id)arg1;
- (void)openAppStoreForAppId:(id)arg1 affiliateId:(id)arg2 campaignId:(id)arg3 fromMRAID:(_Bool)arg4;
- (_Bool)allowCommandExecution;
- (void)updatePosition;
- (void)visiblityChanged:(_Bool)arg1;
- (void)contentDidCloseModal;
- (void)contentDidPresentModal;
- (void)event:(id)arg1 data:(id)arg2;
- (void)restoreOriginalViewTransform;
- (void)saveCurrentViewTransform;
- (void)moveViewFromRootViewToDefaultSuperview;
- (void)moveViewFromDefaultSuperviewToRootView;
- (void)removeFromSuperview;
- (struct CGRect)onScreenRectForRect:(struct CGRect)arg1;
- (void)closeFromResize;
- (void)resetResizeProperties;
- (id)createMetaTagsToInject;
- (id)createScriptTagsToInject;
- (void)executeMRAID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)executeMRAID:(id)arg1;
- (void)throwMRAIDError:(id)arg1 forCommand:(SEL)arg2;
- (void)useCustomClose:(id)arg1;
- (void)playVideo:(id)arg1;
- (void)setOrientationProperties:(id)arg1;
- (void)unload:(id)arg1;
- (void)unload;
- (void)resize:(id)arg1;
- (void)expand:(id)arg1;
- (void)close:(id)arg1;
- (void)open:(id)arg1;
- (void)fileLoaded:(id)arg1;
- (void)jsSetMRAIDState:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)jsSetMRAIDState:(unsigned long long)arg1;
- (void)jsSetViewable:(_Bool)arg1;
- (void)jsSetMRAIDPlacementType;
- (void)jsSetMRAIDSupports;
- (void)jsSetLogLevel;
- (void)jsSetAudioVolumeLevel:(id)arg1;
- (void)jsSetMRAIDLocation:(id)arg1;
- (void)jsSetMRAIDExposureChange;
- (struct CGRect)currentPositionRect;
- (id)currentPosition;
- (void)jsSetMRAIDPositions;
@property(readonly, nonatomic) _Bool twoPart;
- (void)setFrame:(struct CGRect)arg1;
- (void)initializeMRAIDJSLayer;
- (void)parseCommandURL:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)close;
- (void)shouldClose;
- (void)releaseResources;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (id)preprocessRawHTML:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 interstitial:(_Bool)arg2 delegate:(id)arg3 vasAds:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

