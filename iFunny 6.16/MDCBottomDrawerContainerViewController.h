//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <Funny/UIGestureRecognizerDelegate-Protocol.h>
#import <Funny/UIScrollViewDelegate-Protocol.h>

@class MDCBottomDrawerShadowedView, MDCShadowLayer, NSString, UIColor, UIScrollView, UIView;
@protocol MDCBottomDrawerContainerViewControllerDelegate, MDCBottomDrawerHeader;

@interface MDCBottomDrawerContainerViewController : UIViewController <UIScrollViewDelegate, UIGestureRecognizerDelegate>
{
    UIScrollView *_scrollView;
    UIView *_topSafeAreaView;
    double _contentHeaderTopInset;
    double _contentHeightSurplus;
    double _addedContentHeight;
    double _contentVCPreferredContentSizeHeightCached;
    double _headerVCPerferredContentSizeHeightCached;
    double _scrollToContentOffsetY;
    double _maximumInitialDrawerHeight;
    _Bool _shouldPresentAtFullscreen;
    _Bool _animatingPresentation;
    _Bool _animatingDismissal;
    _Bool _shouldIncludeSafeAreaInContentHeight;
    _Bool _shouldIncludeSafeAreaInInitialDrawerHeight;
    _Bool _shouldUseStickyStatusBar;
    _Bool _shouldAlwaysExpandHeader;
    _Bool _shouldAdjustOnContentSizeChange;
    _Bool _scrollViewObserved;
    _Bool _scrollViewIsDraggedToBottom;
    _Bool _scrimShouldAdoptTrackingScrollViewBackgroundColor;
    _Bool _scrollViewBeganDraggingFromFullscreen;
    _Bool _currentlyFullscreen;
    UIViewController *_contentViewController;
    UIViewController<MDCBottomDrawerHeader> *_headerViewController;
    UIColor *_headerShadowColor;
    UIColor *_drawerShadowColor;
    double _elevation;
    UIViewController *_originalPresentingViewController;
    UIScrollView *_trackingScrollView;
    id <MDCBottomDrawerContainerViewControllerDelegate> _delegate;
    unsigned long long _drawerState;
    double _addedHeight;
    MDCShadowLayer *_headerShadowLayer;
    MDCBottomDrawerShadowedView *_shadowedView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) MDCBottomDrawerShadowedView *shadowedView; // @synthesize shadowedView=_shadowedView;
@property(retain, nonatomic) MDCShadowLayer *headerShadowLayer; // @synthesize headerShadowLayer=_headerShadowLayer;
@property(nonatomic) _Bool currentlyFullscreen; // @synthesize currentlyFullscreen=_currentlyFullscreen;
@property(nonatomic) _Bool scrollViewBeganDraggingFromFullscreen; // @synthesize scrollViewBeganDraggingFromFullscreen=_scrollViewBeganDraggingFromFullscreen;
@property(nonatomic) _Bool scrimShouldAdoptTrackingScrollViewBackgroundColor; // @synthesize scrimShouldAdoptTrackingScrollViewBackgroundColor=_scrimShouldAdoptTrackingScrollViewBackgroundColor;
@property(nonatomic) _Bool scrollViewIsDraggedToBottom; // @synthesize scrollViewIsDraggedToBottom=_scrollViewIsDraggedToBottom;
@property(nonatomic) _Bool scrollViewObserved; // @synthesize scrollViewObserved=_scrollViewObserved;
@property(nonatomic) _Bool shouldAdjustOnContentSizeChange; // @synthesize shouldAdjustOnContentSizeChange=_shouldAdjustOnContentSizeChange;
@property(nonatomic) _Bool shouldAlwaysExpandHeader; // @synthesize shouldAlwaysExpandHeader=_shouldAlwaysExpandHeader;
@property(nonatomic) _Bool shouldUseStickyStatusBar; // @synthesize shouldUseStickyStatusBar=_shouldUseStickyStatusBar;
@property(nonatomic) _Bool shouldIncludeSafeAreaInInitialDrawerHeight; // @synthesize shouldIncludeSafeAreaInInitialDrawerHeight=_shouldIncludeSafeAreaInInitialDrawerHeight;
@property(nonatomic) _Bool shouldIncludeSafeAreaInContentHeight; // @synthesize shouldIncludeSafeAreaInContentHeight=_shouldIncludeSafeAreaInContentHeight;
@property(nonatomic) double addedHeight; // @synthesize addedHeight=_addedHeight;
@property(nonatomic) unsigned long long drawerState; // @synthesize drawerState=_drawerState;
@property(nonatomic) __weak id <MDCBottomDrawerContainerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool animatingDismissal; // @synthesize animatingDismissal=_animatingDismissal;
@property(nonatomic) _Bool animatingPresentation; // @synthesize animatingPresentation=_animatingPresentation;
@property(nonatomic) __weak UIScrollView *trackingScrollView; // @synthesize trackingScrollView=_trackingScrollView;
@property(readonly, nonatomic) UIViewController *originalPresentingViewController; // @synthesize originalPresentingViewController=_originalPresentingViewController;
@property(nonatomic) double elevation; // @synthesize elevation=_elevation;
@property(retain, nonatomic) UIColor *drawerShadowColor; // @synthesize drawerShadowColor=_drawerShadowColor;
@property(retain, nonatomic) UIColor *headerShadowColor; // @synthesize headerShadowColor=_headerShadowColor;
@property(retain, nonatomic) UIViewController<MDCBottomDrawerHeader> *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
@property(readonly, nonatomic) double addedContentHeight;
@property(readonly, nonatomic) double contentHeightSurplus;
@property(readonly, nonatomic) double contentHeaderTopInset;
- (id)topSafeAreaView;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (void)updateContentWithHeight:(double)arg1;
- (void)updateTopHeaderBottomShadowWithContentOffset:(struct CGPoint)arg1;
- (void)updateContentHeaderWithTransitionToTop:(double)arg1 fullscreenHeaderHeight:(double)arg2;
- (void)updateViewWithContentOffset:(struct CGPoint)arg1;
- (void)setUpHeaderBottomShadowIfNeeded;
- (void)setUpContentHeader;
- (double)bottomSafeAreaInsetsToAdjustInitialDrawerHeight;
- (double)bottomSafeAreaInsetsToAdjustContainerHeight;
- (double)calculateMaximumInitialDrawerHeight;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)setupLayout;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)expandToFullscreenWithDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)setContentOffsetY:(double)arg1 animated:(_Bool)arg2;
- (_Bool)hasHeaderViewController;
- (void)updateDrawerState:(double)arg1;
- (void)removeScrollViewObserver;
- (void)addScrollViewObserver;
@property(nonatomic) double maximumInitialDrawerHeight;
@property(readonly, nonatomic) _Bool contentReachesFullscreen;
- (_Bool)shouldPresentFullScreen;
- (_Bool)isMobileLandscape;
- (_Bool)isAccessibilityMode;
- (double)updateContentOffsetForPerformantScrolling:(double)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (double)topSafeAreaInset;
- (void)hideDrawer;
- (void)dealloc;
- (id)initWithOriginalPresentingViewController:(id)arg1 trackingScrollView:(id)arg2;
- (double)midAnimationScrollToPositionForOffset:(struct CGPoint)arg1;
- (double)transitionPercentageForContentOffset:(struct CGPoint)arg1 offset:(double)arg2 distance:(double)arg3;
- (void)cacheLayoutCalculationsWithAddedContentHeight:(double)arg1;
- (void)cacheLayoutCalculations;
@property(readonly, nonatomic) double headerAnimationDistance;
@property(readonly, nonatomic) double transitionCompleteContentOffset;
@property(readonly, nonatomic) double contentHeaderHeight;
@property(readonly, nonatomic) double topAreaInsetForHeader;
@property(readonly, nonatomic) double topHeaderHeight;
@property(readonly, nonatomic) _Bool contentScrollsToReveal;
@property(readonly, nonatomic) double presentingViewYOffset;
@property(readonly, nonatomic) struct CGRect presentingViewBounds;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

