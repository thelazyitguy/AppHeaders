//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Funny/IFNetworkClient-Protocol.h>

@class AFHTTPSessionManager, IFNetworkClientSettings;
@protocol IFNetworkClientErrorHandler, IFNetworkClientLogger, IFNetworkErrorFactory;

@interface IFNetworkClientImpl : NSObject <IFNetworkClient>
{
    IFNetworkClientSettings *_networkClientSettings;
    id <IFNetworkClientErrorHandler> _errorHandler;
    id <IFNetworkClientLogger> _logger;
    id <IFNetworkErrorFactory> _networkErrorFactory;
    AFHTTPSessionManager *_sessionManager;
}

+ (id)defaultClientWithNetworkClientSettings:(id)arg1 errorHandler:(id)arg2 logger:(id)arg3;
- (void).cxx_destruct;
@property(retain, nonatomic) AFHTTPSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(retain, nonatomic) id <IFNetworkErrorFactory> networkErrorFactory; // @synthesize networkErrorFactory=_networkErrorFactory;
@property(retain, nonatomic) id <IFNetworkClientLogger> logger; // @synthesize logger=_logger;
@property(retain, nonatomic) id <IFNetworkClientErrorHandler> errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) IFNetworkClientSettings *networkClientSettings; // @synthesize networkClientSettings=_networkClientSettings;
- (id)additionalHeaders;
- (id)defaultHeaders;
- (void)setUpSessionManager:(id)arg1 urlResponseSerialization:(id)arg2 allowsInvalidSSLCertificate:(_Bool)arg3;
- (id)requestSerializerForRequest:(id)arg1;
- (id)sendNetworkRequest:(id)arg1 urlRequest:(id)arg2 uploadProgress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)baseURL;
- (id)authorizationHeader;
- (void)handleErrorResponse:(id)arg1 forRequest:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)handleResponse:(id)arg1 forRequest:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)upload:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)send:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)urlRequest:(id)arg1 error:(id *)arg2;
- (id)initWithNetworkClientSettings:(id)arg1 errorHandler:(id)arg2 logger:(id)arg3 networkErrorFactory:(id)arg4 urlResponseSerialization:(id)arg5;

@end

