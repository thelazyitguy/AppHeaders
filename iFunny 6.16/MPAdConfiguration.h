//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MOPUBExperimentProvider, MPImpressionData, MPRewardedVideoReward, NSArray, NSData, NSDate, NSDictionary, NSString, NSURL;

@interface MPAdConfiguration : NSObject
{
    _Bool _isFullscreenAd;
    _Bool _adUnitWarmingUp;
    _Bool _isEndOfWaterfall;
    _Bool _precacheRequired;
    _Bool _isVastVideoPlayer;
    _Bool _rewardedPlayableShouldRewardOnClick;
    _Bool _isVASTClickabilityExperimentEnabled;
    _Bool _enableEarlyClickthroughForNonRewardedVideo;
    _Bool _mraidAllowCustomClose;
    _Bool _visibleImpressionTrackingEnabled;
    NSString *_adType;
    NSURL *_clickTrackingURL;
    NSArray *_impressionTrackingURLs;
    NSURL *_nextURL;
    NSURL *_beforeLoadURL;
    double _refreshInterval;
    double _adTimeoutInterval;
    NSData *_adResponseData;
    NSDictionary *_nativeSDKParameters;
    Class _customEventClass;
    NSDictionary *_customEventClassData;
    unsigned long long _orientationType;
    NSString *_dspCreativeId;
    NSDate *_creationTimestamp;
    NSString *_creativeId;
    NSString *_metadataAdType;
    long long _nativeVideoPlayVisiblePercent;
    long long _nativeVideoPauseVisiblePercent;
    double _nativeImpressionMinVisiblePixels;
    long long _nativeImpressionMinVisiblePercent;
    double _nativeImpressionMinVisibleTimeInterval;
    double _nativeVideoMaxBufferingTime;
    NSDictionary *_vastVideoTrackers;
    NSArray *_availableRewards;
    MPRewardedVideoReward *_selectedReward;
    NSString *_rewardedVideoCompletionUrl;
    double _rewardedPlayableDuration;
    NSString *_advancedBidPayload;
    MPImpressionData *_impressionData;
    NSString *_format;
    double _impressionMinVisibleTimeInSec;
    double _impressionMinVisiblePixels;
    NSString *_adResponseHTMLString;
    long long _clickthroughExperimentBrowserAgent;
    MOPUBExperimentProvider *_experimentProvider;
    NSArray *_afterLoadUrlsWithMacros;
    NSArray *_afterLoadSuccessUrlsWithMacros;
    NSArray *_afterLoadFailureUrlsWithMacros;
    struct CGSize _preferredSize;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSArray *afterLoadFailureUrlsWithMacros; // @synthesize afterLoadFailureUrlsWithMacros=_afterLoadFailureUrlsWithMacros;
@property(copy, nonatomic) NSArray *afterLoadSuccessUrlsWithMacros; // @synthesize afterLoadSuccessUrlsWithMacros=_afterLoadSuccessUrlsWithMacros;
@property(copy, nonatomic) NSArray *afterLoadUrlsWithMacros; // @synthesize afterLoadUrlsWithMacros=_afterLoadUrlsWithMacros;
@property(retain, nonatomic) MOPUBExperimentProvider *experimentProvider; // @synthesize experimentProvider=_experimentProvider;
@property(nonatomic) long long clickthroughExperimentBrowserAgent; // @synthesize clickthroughExperimentBrowserAgent=_clickthroughExperimentBrowserAgent;
@property(copy, nonatomic) NSString *adResponseHTMLString; // @synthesize adResponseHTMLString=_adResponseHTMLString;
@property(nonatomic) _Bool visibleImpressionTrackingEnabled; // @synthesize visibleImpressionTrackingEnabled=_visibleImpressionTrackingEnabled;
@property(nonatomic) double impressionMinVisiblePixels; // @synthesize impressionMinVisiblePixels=_impressionMinVisiblePixels;
@property(nonatomic) double impressionMinVisibleTimeInSec; // @synthesize impressionMinVisibleTimeInSec=_impressionMinVisibleTimeInSec;
@property(copy, nonatomic) NSString *format; // @synthesize format=_format;
@property(readonly, nonatomic) _Bool mraidAllowCustomClose; // @synthesize mraidAllowCustomClose=_mraidAllowCustomClose;
@property(nonatomic) _Bool enableEarlyClickthroughForNonRewardedVideo; // @synthesize enableEarlyClickthroughForNonRewardedVideo=_enableEarlyClickthroughForNonRewardedVideo;
@property(nonatomic) _Bool isVASTClickabilityExperimentEnabled; // @synthesize isVASTClickabilityExperimentEnabled=_isVASTClickabilityExperimentEnabled;
@property(retain, nonatomic) MPImpressionData *impressionData; // @synthesize impressionData=_impressionData;
@property(copy, nonatomic) NSString *advancedBidPayload; // @synthesize advancedBidPayload=_advancedBidPayload;
@property(nonatomic) _Bool rewardedPlayableShouldRewardOnClick; // @synthesize rewardedPlayableShouldRewardOnClick=_rewardedPlayableShouldRewardOnClick;
@property(nonatomic) double rewardedPlayableDuration; // @synthesize rewardedPlayableDuration=_rewardedPlayableDuration;
@property(copy, nonatomic) NSString *rewardedVideoCompletionUrl; // @synthesize rewardedVideoCompletionUrl=_rewardedVideoCompletionUrl;
@property(retain, nonatomic) MPRewardedVideoReward *selectedReward; // @synthesize selectedReward=_selectedReward;
@property(retain, nonatomic) NSArray *availableRewards; // @synthesize availableRewards=_availableRewards;
@property(retain, nonatomic) NSDictionary *vastVideoTrackers; // @synthesize vastVideoTrackers=_vastVideoTrackers;
@property(nonatomic) double nativeVideoMaxBufferingTime; // @synthesize nativeVideoMaxBufferingTime=_nativeVideoMaxBufferingTime;
@property(nonatomic) double nativeImpressionMinVisibleTimeInterval; // @synthesize nativeImpressionMinVisibleTimeInterval=_nativeImpressionMinVisibleTimeInterval;
@property(nonatomic) long long nativeImpressionMinVisiblePercent; // @synthesize nativeImpressionMinVisiblePercent=_nativeImpressionMinVisiblePercent;
@property(nonatomic) double nativeImpressionMinVisiblePixels; // @synthesize nativeImpressionMinVisiblePixels=_nativeImpressionMinVisiblePixels;
@property(nonatomic) long long nativeVideoPauseVisiblePercent; // @synthesize nativeVideoPauseVisiblePercent=_nativeVideoPauseVisiblePercent;
@property(nonatomic) long long nativeVideoPlayVisiblePercent; // @synthesize nativeVideoPlayVisiblePercent=_nativeVideoPlayVisiblePercent;
@property(copy, nonatomic) NSString *metadataAdType; // @synthesize metadataAdType=_metadataAdType;
@property(copy, nonatomic) NSString *creativeId; // @synthesize creativeId=_creativeId;
@property(retain, nonatomic) NSDate *creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(nonatomic) _Bool isVastVideoPlayer; // @synthesize isVastVideoPlayer=_isVastVideoPlayer;
@property(nonatomic) _Bool precacheRequired; // @synthesize precacheRequired=_precacheRequired;
@property(copy, nonatomic) NSString *dspCreativeId; // @synthesize dspCreativeId=_dspCreativeId;
@property(nonatomic) unsigned long long orientationType; // @synthesize orientationType=_orientationType;
@property(retain, nonatomic) NSDictionary *customEventClassData; // @synthesize customEventClassData=_customEventClassData;
@property(nonatomic) Class customEventClass; // @synthesize customEventClass=_customEventClass;
@property(retain, nonatomic) NSDictionary *nativeSDKParameters; // @synthesize nativeSDKParameters=_nativeSDKParameters;
@property(copy, nonatomic) NSData *adResponseData; // @synthesize adResponseData=_adResponseData;
@property(nonatomic) double adTimeoutInterval; // @synthesize adTimeoutInterval=_adTimeoutInterval;
@property(nonatomic) double refreshInterval; // @synthesize refreshInterval=_refreshInterval;
@property(retain, nonatomic) NSURL *beforeLoadURL; // @synthesize beforeLoadURL=_beforeLoadURL;
@property(retain, nonatomic) NSURL *nextURL; // @synthesize nextURL=_nextURL;
@property(retain, nonatomic) NSArray *impressionTrackingURLs; // @synthesize impressionTrackingURLs=_impressionTrackingURLs;
@property(retain, nonatomic) NSURL *clickTrackingURL; // @synthesize clickTrackingURL=_clickTrackingURL;
@property(nonatomic) struct CGSize preferredSize; // @synthesize preferredSize=_preferredSize;
@property(nonatomic) _Bool isEndOfWaterfall; // @synthesize isEndOfWaterfall=_isEndOfWaterfall;
@property(copy, nonatomic) NSString *adType; // @synthesize adType=_adType;
@property(nonatomic) _Bool adUnitWarmingUp; // @synthesize adUnitWarmingUp=_adUnitWarmingUp;
@property(readonly, nonatomic) _Bool isFullscreenAd; // @synthesize isFullscreenAd=_isFullscreenAd;
- (id)impressionDataFromMetadata:(id)arg1;
- (long long)clickthroughExperimentVariantFromMetadata:(id)arg1 forKey:(id)arg2;
- (id)parseAvailableRewardsFromMetadata:(id)arg1;
- (void)setVideoTrackers:(id)arg1 event:(id)arg2 urls:(id)arg3;
- (id)vastVideoTrackersFromMetadata:(id)arg1 key:(id)arg2;
- (unsigned long long)orientationTypeFromMetadata:(id)arg1;
- (id)adAmountFromMetadata:(id)arg1 key:(id)arg2;
- (long long)percentFromMetadata:(id)arg1 forKey:(id)arg2;
- (double)timeIntervalFromMsmetadata:(id)arg1 forKey:(id)arg2;
- (double)timeIntervalFromMetadata:(id)arg1 forKey:(id)arg2;
- (double)refreshIntervalFromMetadata:(id)arg1;
- (id)dictionaryFromMetadata:(id)arg1 forKey:(id)arg2;
- (id)URLStringsFromMetadata:(id)arg1 forKey:(id)arg2;
- (id)URLsFromMetadata:(id)arg1 forKey:(id)arg2;
- (id)URLFromMetadata:(id)arg1 forKey:(id)arg2;
- (id)adTypeFromMetadata:(id)arg1;
- (id)concatenateBaseUrlArray:(id)arg1 withConditionalArray:(id)arg2;
@property(readonly, nonatomic) _Bool isMoVideo;
@property(readonly, nonatomic) _Bool isMraidAd;
- (id)afterLoadUrlsWithLoadDuration:(double)arg1 loadResult:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool hasValidReward;
- (_Bool)hasPreferredSize;
- (id)customEventClassDataFromMetadata:(id)arg1;
- (id)overrideItem:(id)arg1;
- (Class)setUpCustomEventClassFromMetadata:(id)arg1 vastPlayerVersion:(unsigned long long)arg2;
- (void)commonInitWithMetadata:(id)arg1 data:(id)arg2 isFullscreenAd:(_Bool)arg3 experimentProvider:(id)arg4;
- (id)initWithMetadata:(id)arg1 data:(id)arg2 isFullscreenAd:(_Bool)arg3;

@end

