//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Funny/GMSEntityProvider-Protocol.h>
#import <Funny/GMSFeatureEntityUIItemDelegate-Protocol.h>
#import <Funny/GMSRenderTileConsumer-Protocol.h>

@class GMSAnalytics, GMSCoreClientParameters, GMSIndoorState, GMSIndoorVectorTileProvider, GMSLabelsEntityProvider, GMSRenderTileProvider, GMSServerResourceManager, GMSStyleTableService, GMSTileRequestCoordinator, GMSTileType, GMSVectorMapView, NSLock, NSMutableArray, NSString, NSThread;
@protocol GMSEntityResources, GMSEntityUIHandler, GMSTileServiceRegistry;

@interface GMSTilesEntityProvider : NSObject <GMSRenderTileConsumer, GMSFeatureEntityUIItemDelegate, GMSEntityProvider>
{
    GMSVectorMapView *_mapView;
    NSThread *_renderingThread;
    id <GMSTileServiceRegistry> _tileServiceRegistry;
    GMSStyleTableService *_styleTableService;
    GMSTileRequestCoordinator *_requestCoordinator;
    GMSLabelsEntityProvider *_labelsEntityProvider;
    GMSRenderTileProvider *_baseTileProvider;
    GMSRenderTileProvider *_labelsTileProvider;
    _Bool _roadsProviderUsesLabelsOnly;
    _Bool _roadsNeedHybridTiles;
    GMSRenderTileProvider *_roadsProvider;
    GMSIndoorVectorTileProvider *_indoorTileProvider;
    GMSRenderTileProvider *_extraOverlayProvider;
    GMSCoreClientParameters *_clientParameters;
    GMSServerResourceManager *_resourceManager;
    id <GMSEntityResources> _entityResources;
    objc_metadata_hider_ptr_a1c2b231 _cachedRenderer;
    reffed_ptr_933c1cb6 _cachedTextureAtlasesContext;
    reffed_ptr_329922e5 _cachedBehaviorCamera;
    struct reffed_ptr<gmscore::vector::TileLabelProvider> _tileLabelProvider;
    reffed_ptr_9b434489 _tileUpdaterBehavior;
    struct reffed_ptr<gmscore::vector::GLBuildingGroupFadeBehavior> _glBuildingGroupFadeBehavior;
    struct reffed_ptr<gmscore::vector::ModelRendererValue<unsigned int>> _performanceMode;
    NSMutableArray *_tileProviders;
    struct map<GMSRenderTileProvider *, unsigned int, std::__1::less<GMSRenderTileProvider *>, std::__1::allocator<std::__1::pair<GMSRenderTileProvider *const, unsigned int>>> _boundTileProviders;
    NSLock *_boundTileProvidersLock;
    NSMutableArray *_tileObservers;
    struct SpotlightParams _spotlight_params;
    _Bool _makePOIsTappable;
    id <GMSEntityUIHandler> _entityUIHandler;
    set_2c07e213 _tileTapItems;
    set_2c07e213 _labelTapItems;
    struct unique_ptr<gmscore::vector::MutableStateTracker, std::__1::default_delete<gmscore::vector::MutableStateTracker>> _labelStateTracker;
    _Bool _fetchOnlyRequiredBaseTiles;
    _Bool _navigating;
    _Bool _nightMode;
    _Bool _preferHighContrastDrivingStyle;
    _Bool _buildingsEnabled;
    _Bool _lastTileUpdateHadAllTiles;
    int _mapImageMode;
    int _mapVectorMode;
    GMSIndoorState *_indoorState;
    GMSAnalytics *_analytics;
}

@property(retain, nonatomic) GMSAnalytics *analytics; // @synthesize analytics=_analytics;
@property(retain, nonatomic) GMSIndoorState *indoorState; // @synthesize indoorState=_indoorState;
@property(readonly, nonatomic) _Bool lastTileUpdateHadAllTiles; // @synthesize lastTileUpdateHadAllTiles=_lastTileUpdateHadAllTiles;
@property(nonatomic, getter=shouldMakePOIsTappable) _Bool makePOIsTappable; // @synthesize makePOIsTappable=_makePOIsTappable;
@property(nonatomic, getter=isBuildingsEnabled) _Bool buildingsEnabled; // @synthesize buildingsEnabled=_buildingsEnabled;
@property(nonatomic) _Bool preferHighContrastDrivingStyle; // @synthesize preferHighContrastDrivingStyle=_preferHighContrastDrivingStyle;
@property(nonatomic, getter=isNightMode) _Bool nightMode; // @synthesize nightMode=_nightMode;
@property(nonatomic, getter=isNavigating) _Bool navigating; // @synthesize navigating=_navigating;
@property(readonly, nonatomic) int mapVectorMode; // @synthesize mapVectorMode=_mapVectorMode;
@property(readonly, nonatomic) int mapImageMode; // @synthesize mapImageMode=_mapImageMode;
@property(nonatomic, getter=shouldFetchOnlyRequiredBaseTiles) _Bool fetchOnlyRequiredBaseTiles; // @synthesize fetchOnlyRequiredBaseTiles=_fetchOnlyRequiredBaseTiles;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) float uiScale;
- (void)wasReleasedFromEntityUIHandler:(id)arg1;
- (void)wasBoundToEntityUIHandler:(id)arg1;
- (void)willDestroyRenderer:(objc_metadata_hider_ptr_a1c2b231)arg1;
- (void)didCreateRenderer:(objc_metadata_hider_ptr_a1c2b231)arg1 resources:(id)arg2 behaviorCamera:(reffed_ptr_329922e5)arg3;
- (void)unbindGLTileProvider:(id)arg1;
- (void)bindGLTileProvider:(id)arg1;
- (void)tileUpdaterBehaviorDidUpdate:(const reffed_ptr_9b434489 *)arg1 hadAllTiles:(_Bool)arg2 tilesChanged:(_Bool)arg3 copyrightsChanged:(_Bool)arg4 copyrights:(id)arg5 imageryCopyrights:(id)arg6 copyrightYear:(int)arg7;
- (void)internalRemoveOverlayTileProvider:(id)arg1;
- (void)internalAddOverlayTileProvider:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)createTileProviderStateForProvider:(id)arg1;
- (void)updateGlobalMapStyle;
- (int)mapStyleForCurrentMode;
- (void)entityUIItem:(id)arg1 areaWasTapped:(id)arg2;
- (void)entityUIItem:(id)arg1 lineWasTapped:(id)arg2;
- (void)entityUIItem:(id)arg1 calloutWasTapped:(id)arg2;
- (_Bool)entityUIItem:(id)arg1 handleForceTouchOnPointOfInterest:(id)arg2;
- (void)entityUIItem:(id)arg1 pointOfInterestWasTapped:(id)arg2;
- (void)removeTappableItems;
- (void)updateTappableItemsWithNewItems:(set_2c07e213 *)arg1 existingItems:(set_2c07e213 *)arg2;
- (void)removeItemsInTappableItems:(const set_2c07e213 *)arg1;
- (void)addItemsInTappableItems:(const set_2c07e213 *)arg1;
- (_Bool)isTappableItem:(id)arg1;
- (void)updateTileUpdaterBehavior:(CDUnknownBlockType)arg1;
- (void)clientParametersUpdated:(id)arg1;
- (struct IndoorID)levelIDForCoordinate:(struct GMSCoordinate)arg1;
- (void)removeTileObserver:(id)arg1;
- (void)addTileObserver:(id)arg1;
@property(readonly, nonatomic) unsigned long long totalMissingVisibleTiles;
@property(readonly, nonatomic) unsigned long long totalVisibleTiles;
- (unsigned int)GLVectorTilePerformanceMode;
- (void)setGLVectorTilePerformanceMode:(unsigned int)arg1 renderer:(objc_metadata_hider_ptr_a1c2b231)arg2;
- (void)networkWasFound;
- (void)networkWasLost;
- (void)setFocusedBuilding:(id)arg1;
- (void)removeOverlayTileProvider:(id)arg1;
- (void)addOverlayTileProvider:(id)arg1;
- (void)setTileServiceRegistry:(id)arg1;
- (void)setMapImageMode:(int)arg1 vectorMode:(int)arg2;
@property(readonly, nonatomic) GMSTileType *psmTileType;
@property(readonly, nonatomic) GMSTileType *baseTileType;
- (void)dealloc;
- (id)initWithVectorMapView:(id)arg1 tileServiceRegistry:(id)arg2 styleTableService:(id)arg3 tileRequestCoordinator:(id)arg4 clientParameters:(id)arg5 resourceManager:(id)arg6 mapViewFlags:(unsigned long long)arg7 labelsEntityProvider:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

