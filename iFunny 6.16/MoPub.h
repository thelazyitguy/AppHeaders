//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MOPUBExperimentProvider, NSArray, NSString;

@interface MoPub : NSObject
{
    _Bool _forceWKWebView;
    _Bool _isSdkInitialized;
    _Bool _ad_view_tapped;
    _Bool _shouldBlockPopup;
    _Bool _shouldBlockInvalidClick;
    _Bool _shouldLogBlockPopup;
    NSArray *_globalMediationSettings;
    MOPUBExperimentProvider *_experimentProvider;
}

+ (id)sharedInstance;
+ (void)sendImpressionDelegateAndNotificationFromAd:(id)arg1 adUnitID:(id)arg2 impressionData:(id)arg3 adResponseData:(id)arg4;
+ (void)sendImpressionNotificationFromAd:(id)arg1 adUnitID:(id)arg2 impressionData:(id)arg3 adResponseData:(id)arg4;
+ (void)openURL:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)openURL:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) MOPUBExperimentProvider *experimentProvider; // @synthesize experimentProvider=_experimentProvider;
@property(retain, nonatomic) NSArray *globalMediationSettings; // @synthesize globalMediationSettings=_globalMediationSettings;
@property(nonatomic) _Bool shouldLogBlockPopup; // @synthesize shouldLogBlockPopup=_shouldLogBlockPopup;
@property(nonatomic) _Bool shouldBlockInvalidClick; // @synthesize shouldBlockInvalidClick=_shouldBlockInvalidClick;
@property(nonatomic) _Bool shouldBlockPopup; // @synthesize shouldBlockPopup=_shouldBlockPopup;
@property(nonatomic) _Bool ad_view_tapped; // @synthesize ad_view_tapped=_ad_view_tapped;
@property(nonatomic) _Bool isSdkInitialized; // @synthesize isSdkInitialized=_isSdkInitialized;
@property(nonatomic) _Bool forceWKWebView; // @synthesize forceWKWebView=_forceWKWebView;
- (void)setEngineInformation:(id)arg1;
- (void)disableViewability:(long long)arg1;
- (id)globalMediationSettingsForClass:(Class)arg1;
- (void)handlePersonalData;
- (void)setSdkWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)initializeSdkWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)bundleIdentifier;
- (id)version;
@property(nonatomic) _Bool frequencyCappingIdUsageEnabled;
- (void)setClickthroughDisplayAgentType:(long long)arg1;
@property(nonatomic) unsigned long long logLevel;
@property(nonatomic) _Bool locationUpdatesEnabled;
- (void)commonInitWithExperimentProvider:(id)arg1;
- (id)init;
- (void)clearCachedNetworks;
- (id)availableAdapterClassNames;
- (id)adapterConfigurationNamed:(id)arg1;
- (id)currentConsentVendorListUrlWithISOLanguageCode:(id)arg1;
- (id)currentConsentVendorListUrl;
- (id)currentConsentPrivacyPolicyUrlWithISOLanguageCode:(id)arg1;
- (id)currentConsentPrivacyPolicyUrl;
- (void)grantConsent;
- (void)revokeConsent;
@property(readonly, nonatomic) _Bool isConsentDialogReady;
@property(nonatomic) _Bool allowLegitimateInterest;
- (void)showConsentDialogFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showConsentDialogFromViewController:(id)arg1 didShow:(CDUnknownBlockType)arg2 didDismiss:(CDUnknownBlockType)arg3;
- (void)loadConsentDialogWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSString *previouslyConsentedVendorListVersion;
@property(readonly, copy, nonatomic) NSString *previouslyConsentedPrivacyPolicyVersion;
@property(readonly, copy, nonatomic) NSString *previouslyConsentedIabVendorListFormat;
@property(readonly, copy, nonatomic) NSString *currentConsentVendorListVersion;
@property(readonly, copy, nonatomic) NSString *currentConsentPrivacyPolicyVersion;
@property(readonly, copy, nonatomic) NSString *currentConsentIabVendorListFormat;
@property(readonly, nonatomic) long long currentConsentStatus;
- (void)forceGDPRApplicable;
@property(readonly, nonatomic) long long isGDPRApplicable;
@property(readonly, nonatomic) _Bool canCollectPersonalInfo;
@property(readonly, nonatomic) _Bool shouldShowConsentDialog;

@end

