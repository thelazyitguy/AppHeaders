//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Funny/RKObjectRequestOperation.h>

@class NSArray, NSCachedURLResponse, NSDictionary, NSManagedObjectContext, NSManagedObjectID, RKManagedObjectResponseMapperOperation;
@protocol RKManagedObjectCaching;

@interface RKManagedObjectRequestOperation : RKObjectRequestOperation
{
    _Bool _canSkipMapping;
    _Bool _deletesOrphanedObjects;
    _Bool _savesToPersistentStore;
    _Bool _hasMemoizedCanSkipMapping;
    NSManagedObjectContext *_managedObjectContext;
    id <RKManagedObjectCaching> _managedObjectCache;
    NSArray *_fetchRequestBlocks;
    NSManagedObjectContext *_privateContext;
    NSManagedObjectID *_targetObjectID;
    RKManagedObjectResponseMapperOperation *_responseMapperOperation;
    NSDictionary *_mappingInfo;
    NSCachedURLResponse *_cachedResponse;
    CDUnknownBlockType _willSaveMappingContextBlock;
}

- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType willSaveMappingContextBlock; // @synthesize willSaveMappingContextBlock=_willSaveMappingContextBlock;
@property(nonatomic) _Bool hasMemoizedCanSkipMapping; // @synthesize hasMemoizedCanSkipMapping=_hasMemoizedCanSkipMapping;
@property(retain, nonatomic) NSCachedURLResponse *cachedResponse; // @synthesize cachedResponse=_cachedResponse;
@property(retain, nonatomic) NSDictionary *mappingInfo; // @synthesize mappingInfo=_mappingInfo;
@property(retain, nonatomic) RKManagedObjectResponseMapperOperation *responseMapperOperation; // @synthesize responseMapperOperation=_responseMapperOperation;
@property(copy, nonatomic) NSManagedObjectID *targetObjectID; // @synthesize targetObjectID=_targetObjectID;
@property(retain, nonatomic) NSManagedObjectContext *privateContext; // @synthesize privateContext=_privateContext;
@property(nonatomic) _Bool savesToPersistentStore; // @synthesize savesToPersistentStore=_savesToPersistentStore;
@property(nonatomic) _Bool deletesOrphanedObjects; // @synthesize deletesOrphanedObjects=_deletesOrphanedObjects;
@property(copy, nonatomic) NSArray *fetchRequestBlocks; // @synthesize fetchRequestBlocks=_fetchRequestBlocks;
@property(retain, nonatomic) id <RKManagedObjectCaching> managedObjectCache; // @synthesize managedObjectCache=_managedObjectCache;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)willFinish;
- (void)mapperDidFinishMapping:(id)arg1;
- (_Bool)obtainPermanentObjectIDsForInsertedObjects:(id *)arg1;
- (_Bool)saveContext:(id *)arg1;
- (_Bool)saveContext:(id)arg1 error:(id *)arg2;
- (_Bool)saveContextToPersistentStore:(id)arg1 failedContext:(id *)arg2 error:(id *)arg3;
- (_Bool)deleteLocalObjectsMissingFromMappingResult:(id)arg1 error:(id *)arg2;
- (id)fetchRequestsMatchingResponseURL;
- (id)localObjectsFromFetchRequests:(id)arg1 matchingRequestURL:(id *)arg2;
- (_Bool)deleteTargetObject:(id *)arg1;
- (void)performMappingOnResponseWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool canSkipMapping; // @synthesize canSkipMapping=_canSkipMapping;
- (void)cancel;
- (void)setTargetObject:(id)arg1;
- (void)dealloc;
- (id)initWithHTTPRequestOperation:(id)arg1 responseDescriptors:(id)arg2;

// Remaining properties
@property(copy, nonatomic) CDUnknownBlockType willMapDeserializedResponseBlock; // @dynamic willMapDeserializedResponseBlock;

@end

