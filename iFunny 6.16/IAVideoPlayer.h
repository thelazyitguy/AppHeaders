//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Funny/IAVideoPlayerBaseView.h>

#import <Funny/IAInterfaceBuilder-Protocol.h>
#import <Funny/IAInterfaceVideoPlayer-Protocol.h>
#import <Funny/IAVideoPlayerBuilder-Protocol.h>

@class AVAssetImageGenerator, AVPlayer, AVPlayerItem, AVPlayerLayer, IAWeakTimer, NSObject, NSString, NSURL;
@protocol IAVideoPlayerDelegate, OS_dispatch_queue;

@interface IAVideoPlayer : IAVideoPlayerBaseView <IAInterfaceBuilder, IAVideoPlayerBuilder, IAInterfaceVideoPlayer>
{
    _Bool _startMuted;
    _Bool _muted;
    _Bool _finished;
    _Bool _isSubscribed;
    _Bool _isDuringRelease;
    _Bool _isEnoughDataToPlay;
    id <IAVideoPlayerDelegate> _delegate;
    double _loadTimeout;
    double _bufferTimeout;
    long long _padding;
    long long _videoType;
    NSURL *_URL;
    unsigned long long _state;
    double _duration;
    AVPlayerItem *_playerItem;
    long long _playerItemStatus;
    AVPlayer *_player;
    AVPlayerLayer *_playerLayer;
    AVAssetImageGenerator *_generator;
    id _periodicPlaybackTimeObserver;
    IAWeakTimer *_bufferingTimer;
    double _playbackStartTime;
    NSObject<OS_dispatch_queue> *_syncQueue;
    struct CGSize _customVideoSize;
    CDStruct_1b6d18a9 _timeBeforeMovingToBackground;
}

+ (void)ddSetLogLevel:(unsigned long long)arg1;
+ (unsigned long long)ddLogLevel;
+ (id)build:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool isEnoughDataToPlay; // @synthesize isEnoughDataToPlay=_isEnoughDataToPlay;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property _Bool isDuringRelease; // @synthesize isDuringRelease=_isDuringRelease;
@property(nonatomic) _Bool isSubscribed; // @synthesize isSubscribed=_isSubscribed;
@property(nonatomic) double playbackStartTime; // @synthesize playbackStartTime=_playbackStartTime;
@property(retain, nonatomic) IAWeakTimer *bufferingTimer; // @synthesize bufferingTimer=_bufferingTimer;
@property(retain, nonatomic) id periodicPlaybackTimeObserver; // @synthesize periodicPlaybackTimeObserver=_periodicPlaybackTimeObserver;
@property(retain, nonatomic) AVAssetImageGenerator *generator; // @synthesize generator=_generator;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long playerItemStatus; // @synthesize playerItemStatus=_playerItemStatus;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(nonatomic) CDStruct_1b6d18a9 timeBeforeMovingToBackground; // @synthesize timeBeforeMovingToBackground=_timeBeforeMovingToBackground;
@property(nonatomic) struct CGSize customVideoSize; // @synthesize customVideoSize=_customVideoSize;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) long long videoType; // @synthesize videoType=_videoType;
@property(nonatomic) long long padding; // @synthesize padding=_padding;
@property(nonatomic) _Bool startMuted; // @synthesize startMuted=_startMuted;
@property(nonatomic) double bufferTimeout; // @synthesize bufferTimeout=_bufferTimeout;
@property(nonatomic) double loadTimeout; // @synthesize loadTimeout=_loadTimeout;
@property(nonatomic) __weak id <IAVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)disposePlayerElements;
- (void)appWillEnterForegroundNotification:(id)arg1;
- (void)appWillResignActive:(id)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)privatePause;
- (void)privatePlay;
- (void)treatPlaybackLikelyToKeepUp:(id)arg1 newValue:(id)arg2;
- (void)treatRate:(id)arg1 newValue:(id)arg2;
- (void)treatStatus:(id)arg1 newValue:(id)arg2;
- (double)percentagePlayed;
- (void)handlePlayerItemNotificationOnMainThread:(id)arg1;
- (void)updateState:(unsigned long long)arg1 error:(id)arg2;
- (void)playerFailed;
- (void)setPlayerLayerFrame;
- (void)treatBufferingTimeout;
- (void)stopBufferingTimer;
- (void)startBufferingTimer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handlePlayerItemNotification:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)IA_takeScreenshot;
- (struct CGRect)videoLayerRect;
- (struct CGRect)videoRect;
- (void)stop;
- (void)pause;
- (double)playedSeconds;
- (_Bool)isPlaying;
- (void)play;
- (void)loadURL:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (id)currentFrameImage;
- (void)initPlayer;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

