//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Funny/IANetworkingClientDelegate-Protocol.h>

@class IAGlobalConfigurationModel, IARemoteConfigModel, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface IAConfigurationManager : NSObject <IANetworkingClientDelegate>
{
    IAGlobalConfigurationModel *_globalConfigurationModel;
    NSMutableArray *_configsArray;
    IARemoteConfigModel *_remoteConfig;
    NSMutableDictionary *_networkingClientsDictionary;
    NSObject<OS_dispatch_queue> *_configSyncQueue;
    NSObject<OS_dispatch_queue> *_observersQueue;
    NSMutableSet *_oneTimeObservers;
    NSString *_customGlobalConfigPath;
}

+ (void)ddSetLogLevel:(unsigned long long)arg1;
+ (unsigned long long)ddLogLevel;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *customGlobalConfigPath; // @synthesize customGlobalConfigPath=_customGlobalConfigPath;
@property(retain, nonatomic) NSMutableSet *oneTimeObservers; // @synthesize oneTimeObservers=_oneTimeObservers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *observersQueue; // @synthesize observersQueue=_observersQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *configSyncQueue; // @synthesize configSyncQueue=_configSyncQueue;
@property(retain, nonatomic) NSMutableDictionary *networkingClientsDictionary; // @synthesize networkingClientsDictionary=_networkingClientsDictionary;
@property(retain, nonatomic) IARemoteConfigModel *remoteConfig; // @synthesize remoteConfig=_remoteConfig;
@property(retain, nonatomic) NSMutableArray *configsArray; // @synthesize configsArray=_configsArray;
@property(retain) IAGlobalConfigurationModel *globalConfigurationModel; // @synthesize globalConfigurationModel=_globalConfigurationModel;
- (void)dealloc;
- (_Bool)networkingClient:(id)arg1 shouldRedirectToURL:(id)arg2;
- (void)networkingClient:(id)arg1 failedWithError:(id)arg2;
- (void)networkingClient:(id)arg1 succeededWithHTTPStatusCode:(long long)arg2 headers:(id)arg3 data:(id)arg4;
- (void)notifyHasGlobalConfig;
- (void)notifyOneTimeObserversWithResult:(_Bool)arg1 error:(id)arg2;
- (_Bool)hasValidUnitDisplayTypeInModel:(id)arg1;
- (_Bool)isFullScreenOrVideo:(id)arg1;
- (id)spotModelWithSpotID:(id)arg1;
- (id)updateModel:(id)arg1 withOtherModel:(id)arg2;
- (id)serviceConfigModelWithName:(id)arg1 forSpot:(id)arg2 unit:(id)arg3;
- (id)adConfigModelWithName:(id)arg1 forSpot:(id)arg2 unit:(id)arg3 unitDisplayType:(id)arg4;
- (void)parseRemoteConfig:(id)arg1 Ñompletion:(CDUnknownBlockType)arg2;
- (void)saveRemoteConfigToUserDefaults:(id)arg1 lastModifiedDate:(id)arg2;
- (void)updateGlobalConfig:(id)arg1 withFieldKey:(id)arg2 withFieldValue:(id)arg3;
- (void)updateGlobalConfigFromURL:(id)arg1;
- (void)updateGlobalConfig;
- (_Bool)isGlobalConfigClientByPath:(id)arg1;
- (id)keyByNetworkingClient:(id)arg1;
- (void)sendEvent:(id)arg1 withError:(id)arg2;
- (id)unitDisplayTypeForSpot:(id)arg1;
- (id)settingsForFeature:(id)arg1;
- (_Bool)isSpotActive:(id)arg1;
- (_Bool)remoteConfigContainsSpot:(id)arg1;
- (id)monitorConfigModelForSpot:(id)arg1 unit:(id)arg2;
- (id)viewabilityConfigModelForSpot:(id)arg1 unit:(id)arg2;
- (id)displayConfigModelForSpot:(id)arg1 unit:(id)arg2 unitDisplayType:(id)arg3;
- (id)videoConfigModelForSpot:(id)arg1 unit:(id)arg2 unitDisplayType:(id)arg3;
- (void)addConfig:(id)arg1;
- (void)loadGlobalConfigFromPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)loadLocalConfigFromPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestRemoteConfigWithAppID:(id)arg1;
- (void)addOneTimeCofigurationNotificationObserver:(id)arg1;
- (void)loadSavedConfigFromUserDefaults:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

