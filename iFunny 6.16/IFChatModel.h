//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Funny/IFChatMessageFetcherDelegate-Protocol.h>
#import <Funny/IFMemeMessageModelDelegate-Protocol.h>
#import <Funny/IFModelProtocol-Protocol.h>
#import <Funny/IFSendbirdMessageFetcherChatEntityChaser-Protocol.h>
#import <Funny/SBDChannelDelegate-Protocol.h>

@class FNROUser, IFChatCacheFetcher, IFChatLoaderEntity, IFChatModelArray, IFChatUnreadEntity, IFMemeMessageModel, IFUserOperationManager, NSMutableSet, NSString, NSTimer, SBDBaseChannel;
@protocol IFChannelProtocol, IFChatMessageEntity, IFChatMessageFetcherProtocol, IFChatModelController;

@interface IFChatModel : NSObject <SBDChannelDelegate, IFChatMessageFetcherDelegate, IFSendbirdMessageFetcherChatEntityChaser, IFMemeMessageModelDelegate, IFModelProtocol>
{
    unsigned long long _unreadMessageCount;
    _Bool _hasPrev;
    _Bool _hasNext;
    _Bool _isPrevRequested;
    _Bool _isNextRequested;
    _Bool _isChatOperationInProgress;
    NSObject<IFChannelProtocol> *_chatEntity;
    id <IFChatModelController> _controller;
    unsigned long long _count;
    FNROUser *_user;
    IFChatModelArray *_messages;
    NSObject<IFChatMessageEntity> *_oldestRetrievedMessage;
    NSMutableSet *_readedMessages;
    IFChatCacheFetcher *_cacheFetcher;
    SBDBaseChannel *_channel;
    NSObject<IFChatMessageEntity> *_lastDeliveredMessageEntity;
    NSObject<IFChatMessageEntity> *_lastReadMessageEntity;
    NSObject<IFChatMessageEntity> *_sendingMessageEntity;
    IFChatUnreadEntity *_unreadEntity;
    NSTimer *_onlineStatusTimer;
    NSString *_onlineStatus;
    IFUserOperationManager *_userOperationManager;
    NSObject<IFChatMessageFetcherProtocol> *_messageFetcher;
    IFChatLoaderEntity *_prevLoader;
    IFChatLoaderEntity *_nextLoader;
    IFMemeMessageModel *_memeMessageModel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) IFMemeMessageModel *memeMessageModel; // @synthesize memeMessageModel=_memeMessageModel;
@property(nonatomic) _Bool isChatOperationInProgress; // @synthesize isChatOperationInProgress=_isChatOperationInProgress;
@property(retain, nonatomic) IFChatLoaderEntity *nextLoader; // @synthesize nextLoader=_nextLoader;
@property(retain, nonatomic) IFChatLoaderEntity *prevLoader; // @synthesize prevLoader=_prevLoader;
@property(nonatomic) _Bool isNextRequested; // @synthesize isNextRequested=_isNextRequested;
@property(nonatomic) _Bool isPrevRequested; // @synthesize isPrevRequested=_isPrevRequested;
@property(retain, nonatomic) NSObject<IFChatMessageFetcherProtocol> *messageFetcher; // @synthesize messageFetcher=_messageFetcher;
@property(retain, nonatomic) IFUserOperationManager *userOperationManager; // @synthesize userOperationManager=_userOperationManager;
@property(retain, nonatomic) NSString *onlineStatus; // @synthesize onlineStatus=_onlineStatus;
@property(retain, nonatomic) NSTimer *onlineStatusTimer; // @synthesize onlineStatusTimer=_onlineStatusTimer;
@property(retain, nonatomic) IFChatUnreadEntity *unreadEntity; // @synthesize unreadEntity=_unreadEntity;
@property(nonatomic) _Bool hasNext; // @synthesize hasNext=_hasNext;
@property(nonatomic) _Bool hasPrev; // @synthesize hasPrev=_hasPrev;
@property(nonatomic) __weak NSObject<IFChatMessageEntity> *sendingMessageEntity; // @synthesize sendingMessageEntity=_sendingMessageEntity;
@property(nonatomic) __weak NSObject<IFChatMessageEntity> *lastReadMessageEntity; // @synthesize lastReadMessageEntity=_lastReadMessageEntity;
@property(nonatomic) __weak NSObject<IFChatMessageEntity> *lastDeliveredMessageEntity; // @synthesize lastDeliveredMessageEntity=_lastDeliveredMessageEntity;
@property(retain, nonatomic) SBDBaseChannel *channel; // @synthesize channel=_channel;
@property(retain, nonatomic) IFChatCacheFetcher *cacheFetcher; // @synthesize cacheFetcher=_cacheFetcher;
@property(retain, nonatomic) NSMutableSet *readedMessages; // @synthesize readedMessages=_readedMessages;
@property(retain, nonatomic) NSObject<IFChatMessageEntity> *oldestRetrievedMessage; // @synthesize oldestRetrievedMessage=_oldestRetrievedMessage;
@property(retain, nonatomic) IFChatModelArray *messages; // @synthesize messages=_messages;
@property(retain, nonatomic) FNROUser *user; // @synthesize user=_user;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
@property(nonatomic) __weak id <IFChatModelController> controller; // @synthesize controller=_controller;
@property(retain, nonatomic) NSObject<IFChannelProtocol> *chatEntity; // @synthesize chatEntity=_chatEntity;
- (void)didLoadMemeContent:(id)arg1 forMessageWithId:(id)arg2 error:(id)arg3;
- (void)channelWasChanged:(id)arg1;
- (void)channel:(id)arg1 userDidLeave:(id)arg2;
- (void)channel:(id)arg1 userDidJoin:(id)arg2;
- (void)channelDidUpdateReadReceipt:(id)arg1;
- (void)channel:(id)arg1 didReceiveMessage:(id)arg2;
- (void)makeCollocutorOnline;
- (void)didUpdatedChannelInfo:(id)arg1;
- (void)didUnblockedUser:(id)arg1;
- (void)didBlockedUser:(id)arg1;
@property(readonly, nonatomic) unsigned long long inputState;
@property(readonly, nonatomic) _Bool isCanWrite;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) NSString *chatCoverUrl;
@property(readonly, nonatomic) NSString *detailedDesctiption;
@property(readonly, nonatomic) NSString *title;
- (id)indexSetForMessages:(id)arg1;
- (unsigned long long)indexOfUserOrAdminMessageWithId:(id)arg1;
- (unsigned long long)indexOfUserMessageWithId:(id)arg1 delivered:(_Bool)arg2;
- (id)lastUserOrAdminMessage;
- (id)lastUserMessage;
- (id)firstUserOrAdminMessage;
- (void)deleteMessagesFromCache:(id)arg1;
- (void)cacheMessages:(id)arg1;
- (id)processMessages:(id)arg1 fromCache:(_Bool)arg2 type:(unsigned long long)arg3 maySubstituteMessage:(_Bool)arg4 lastDeliveredMessageIndex:(unsigned long long *)arg5 lastReadMessageIndex:(unsigned long long *)arg6;
- (_Bool)isMessageInCache:(id)arg1;
- (_Bool)isUserOrAdminMessage:(id)arg1;
- (void)insertReadStatusIfNeededForMessages:(id)arg1 lastReadMessageIndex:(unsigned long long *)arg2;
- (void)insertDeleiveredStatusIfNeededForMessages:(id)arg1 lastDeliveredMessageIndex:(unsigned long long *)arg2;
- (void)insertReadAndDeliveredStatusesIfNeededForMessages:(id)arg1 lastDeliveredMessageIndex:(unsigned long long *)arg2 lastReadMessageIndex:(unsigned long long *)arg3;
- (id)findLastReadMessageAmongMessages:(id)arg1;
- (id)findLastDeliveredMessageAmongMessages:(id)arg1;
- (id)insertMessages:(id)arg1 deleteIndexes:(id)arg2 fromCache:(_Bool)arg3 maySubstituteMessage:(_Bool)arg4 type:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;
- (id)insertMessages:(id)arg1 deleteIndexes:(id)arg2 fromCache:(_Bool)arg3 type:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
- (id)substitutedMemeEntityByInsertingEntity:(id)arg1;
- (_Bool)isSubstitutableEntity:(id)arg1;
- (_Bool)shouldAddMessage:(id)arg1;
- (_Bool)isTooLateForShowMessage:(id)arg1;
- (void)reloadPreviuosCellForInsertedCellEntityIfNeeded:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)updateDeletingIndexes:(id)arg1 lastDeliveredIndex:(unsigned long long)arg2 lastReadIndex:(unsigned long long)arg3 forMessages:(id)arg4;
- (void)markChannelAsRead;
- (void)readIndex:(unsigned long long)arg1;
- (void)resendMessage:(id)arg1 uploadDelegate:(id)arg2;
- (void)deleteMessage:(id)arg1;
- (id)sendingEntity;
- (void)sendFile:(id)arg1 delegate:(id)arg2;
- (void)resendFileObject:(id)arg1 delegate:(id)arg2;
- (void)sendMessage:(id)arg1;
- (void)sendEntity:(id)arg1 data:(id)arg2 filename:(id)arg3 delegate:(id)arg4;
- (void)didFailSendingMessage:(id)arg1;
- (void)updateSendingMessageEntity:(id)arg1 withSentMessageEntity:(id)arg2;
- (void)updateLinkTextEntityAtIndex:(unsigned long long)arg1 withEntities:(id)arg2 sendingStatusEntityIndex:(unsigned long long)arg3;
- (id)indexesOnUpdateSendingMessageEntity:(id)arg1;
- (void)fetchNextMessagesFirst:(_Bool)arg1 fromMessageWithId:(long long)arg2;
- (void)fetchPrevMessages;
- (void)fetcher:(id)arg1 didUpdatedConnectionWithError:(id)arg2;
- (void)fetcher:(id)arg1 didCheckedUnreadMessagesCount:(unsigned long long)arg2;
- (void)fetcher:(id)arg1 didLoadNextMessages:(id)arg2 fromMessageWithId:(long long)arg3 error:(id)arg4;
- (void)fetcher:(id)arg1 didLoadPreviousMessages:(id)arg2 fromMessageWithId:(long long)arg3 error:(id)arg4;
- (void)fetcher:(id)arg1 didLoadLastMessages:(id)arg2 error:(id)arg3;
- (void)fetcher:(id)arg1 didUpdatedChatChannel:(id)arg2;
- (void)clearMessages;
- (void)insertCachedMessages:(id)arg1;
- (_Bool)isFirstMessageForUserInGroupOfHisMessages:(id)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (_Bool)unblockCollocutor;
- (_Bool)isLastMessageForUserInGroupOfHisMessages:(id)arg1;
- (void)checkOpenChannelInputPanelState;
- (void)reloadMessages;
- (void)subscribeToSendbirdNotificationsIfPossible;
- (void)reloadModel;
- (void)removeUnreadEntityIfNeed;
- (void)loadNextMessagesIfNeed;
- (void)checkUnreadMessagesCount;
- (id)stubMessages;
- (id)lastReadMessageStatusEntityIndexSet;
- (id)lastDeliveredMessageStatusEntityIndexSet;
@property(readonly, nonatomic) unsigned long long unreadMessageCount;
- (_Bool)isEqualToPermalink:(id)arg1;
- (_Bool)isEqualChatID:(id)arg1;
- (id)memeWithId:(id)arg1;
- (void)prepareEntityAtIndex:(unsigned long long)arg1;
- (void)reloadErrorMemeMessageAtIndex:(unsigned long long)arg1;
- (id)entityAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)onlineStatusTimerTick:(id)arg1;
- (_Bool)joinOpenChatFromRepeat:(_Bool)arg1;
- (void)chatManagerHasBeenConnected:(id)arg1;
- (_Bool)joinOpenChat;
- (_Bool)rejectChat;
- (_Bool)acceptChat;
- (void)updateLastSeenStatus;
- (void)invalidate;
- (void)updateOnlineStatusForUserInfo:(id)arg1;
- (void)addAcceptHandlers;
- (void)setupWithCollocutorProfile:(id)arg1;
- (void)setupMessageFetcherSpectatorMode:(_Bool)arg1;
- (id)chatsService;
- (id)initWithChannel:(id)arg1 collocutorProfile:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

