//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FNUserManager, IFContentObservable, NSArray, NSHashTable;
@protocol IFNetworkBanService, IFNetworkStrikeService;

@interface IFBanService : NSObject
{
    _Bool _isBanPopupShown;
    _Bool _isUpdateBanInfoLoading;
    FNUserManager *_userManager;
    NSHashTable *_observers;
    IFContentObservable *_contentObservable;
    NSArray *_banInfoList;
    NSArray *_strikeInfoList;
    id <IFNetworkBanService> _networkBanService;
    id <IFNetworkStrikeService> _networkStrikeService;
    long long _strikesTotalCount;
}

+ (id)instance;
- (void).cxx_destruct;
@property(nonatomic) _Bool isUpdateBanInfoLoading; // @synthesize isUpdateBanInfoLoading=_isUpdateBanInfoLoading;
@property(nonatomic) _Bool isBanPopupShown; // @synthesize isBanPopupShown=_isBanPopupShown;
@property(nonatomic) long long strikesTotalCount; // @synthesize strikesTotalCount=_strikesTotalCount;
@property(retain, nonatomic) id <IFNetworkStrikeService> networkStrikeService; // @synthesize networkStrikeService=_networkStrikeService;
@property(retain, nonatomic) id <IFNetworkBanService> networkBanService; // @synthesize networkBanService=_networkBanService;
@property(retain, nonatomic) NSArray *strikeInfoList; // @synthesize strikeInfoList=_strikeInfoList;
@property(retain, nonatomic) NSArray *banInfoList; // @synthesize banInfoList=_banInfoList;
@property(retain, nonatomic) IFContentObservable *contentObservable; // @synthesize contentObservable=_contentObservable;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) FNUserManager *userManager; // @synthesize userManager=_userManager;
- (id)initWithUserManager:(id)arg1;
- (void)deleteAppealWithId:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)createAppealForStrikeId:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)createAppealForBanId:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)getMyAppealsWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)reasonValue:(long long)arg1;
- (long long)defaultBanDuration:(id)arg1;
- (id)parametersForBanSummary:(id)arg1;
- (void)banAppealCanceled:(id)arg1;
- (void)strikeWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)banWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)markBanAsShown:(id)arg1;
- (_Bool)isBanShown:(id)arg1;
- (id)filterShownBans:(id)arg1;
- (void)showBanPopupIfNeeded;
- (void)updateBanInfo;
- (void)userUpdated:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)banWithSummary:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (_Bool)canChooseBanType;
- (_Bool)isBanActionAvailable;

@end

