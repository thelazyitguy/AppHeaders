//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIScrollView.h>

#import <ElectrodeContainer/MWTapDetectingImageViewDelegate-Protocol.h>
#import <ElectrodeContainer/MWTapDetectingViewDelegate-Protocol.h>
#import <ElectrodeContainer/UIScrollViewDelegate-Protocol.h>

@class MWTapDetectingImageView, MWTapDetectingView, NSDictionary, NSString, RCTBridge, UIImage, UIImageView;

@interface RNPhotoView : UIScrollView <UIScrollViewDelegate, MWTapDetectingImageViewDelegate, MWTapDetectingViewDelegate>
{
    RCTBridge *_bridge;
    NSDictionary *_source;
    NSDictionary *_src;
    NSString *_loadingIndicatorSrc;
    long long _scale;
    double _minZoomScale;
    double _maxZoomScale;
    CDUnknownBlockType _onPhotoViewerScale;
    CDUnknownBlockType _onPhotoViewerViewTap;
    CDUnknownBlockType _onPhotoViewerTap;
    CDUnknownBlockType _onPhotoViewerLoadStart;
    CDUnknownBlockType _onPhotoViewerLoad;
    CDUnknownBlockType _onPhotoViewerLoadEnd;
    CDUnknownBlockType _onPhotoViewerProgress;
    MWTapDetectingImageView *_photoImageView;
    MWTapDetectingView *_tapView;
    UIImageView *_loadingImageView;
    UIImage *_image;
    UIImage *_loadingImage;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImage *loadingImage; // @synthesize loadingImage=_loadingImage;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) UIImageView *loadingImageView; // @synthesize loadingImageView=_loadingImageView;
@property(retain, nonatomic) MWTapDetectingView *tapView; // @synthesize tapView=_tapView;
@property(retain, nonatomic) MWTapDetectingImageView *photoImageView; // @synthesize photoImageView=_photoImageView;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerProgress; // @synthesize onPhotoViewerProgress=_onPhotoViewerProgress;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerLoadEnd; // @synthesize onPhotoViewerLoadEnd=_onPhotoViewerLoadEnd;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerLoad; // @synthesize onPhotoViewerLoad=_onPhotoViewerLoad;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerLoadStart; // @synthesize onPhotoViewerLoadStart=_onPhotoViewerLoadStart;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerTap; // @synthesize onPhotoViewerTap=_onPhotoViewerTap;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerViewTap; // @synthesize onPhotoViewerViewTap=_onPhotoViewerViewTap;
@property(copy, nonatomic) CDUnknownBlockType onPhotoViewerScale; // @synthesize onPhotoViewerScale=_onPhotoViewerScale;
@property(nonatomic) double maxZoomScale; // @synthesize maxZoomScale=_maxZoomScale;
@property(nonatomic) double minZoomScale; // @synthesize minZoomScale=_minZoomScale;
@property(nonatomic) long long scale; // @synthesize scale=_scale;
@property(retain, nonatomic) NSString *loadingIndicatorSrc; // @synthesize loadingIndicatorSrc=_loadingIndicatorSrc;
@property(retain, nonatomic) NSDictionary *src; // @synthesize src=_src;
@property(retain, nonatomic) NSDictionary *source; // @synthesize source=_source;
- (void)initView;
- (void)displayWithImage:(id)arg1;
- (void)layoutSubviews;
- (void)setMaxMinZoomScalesForCurrentBounds;
- (double)initialZoomScaleWithMinScale;
- (void)view:(id)arg1 doubleTapDetected:(id)arg2;
- (void)view:(id)arg1 singleTapDetected:(id)arg2;
- (void)imageView:(id)arg1 doubleTapDetected:(id)arg2;
- (void)imageView:(id)arg1 singleTapDetected:(id)arg2;
- (void)handleDoubleTap:(struct CGPoint)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (id)initWithBridge:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

