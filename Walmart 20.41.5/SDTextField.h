//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UITextField.h>

#import <IOSShared/UITextFieldDelegate-Protocol.h>

@class NSNumber, NSString, UIBarButtonItem, UIColor, UIFont, UILabel, UISegmentedControl, UIToolbar;

@interface SDTextField : UITextField <UITextFieldDelegate>
{
    UIToolbar *_accessoryToolbar;
    UIBarButtonItem *_prevItem;
    UIBarButtonItem *_nextItem;
    UIBarButtonItem *_doneItem;
    UISegmentedControl *_segmentedControl;
    _Bool _alwaysShowToolbar;
    _Bool _disableFloatingLabels;
    _Bool _validateWhileTyping;
    _Bool _textManuallySet;
    UIColor *_toolbarTintColor;
    NSNumber *_floatingLabelYPadding;
    UIFont *_floatingLabelFont;
    UIColor *_floatingLabelInactiveTextColor;
    UIColor *_floatingLabelActiveTextColor;
    SDTextField *_previousTextField;
    SDTextField *_nextTextField;
    CDUnknownBlockType _validationBlock;
    UILabel *_floatingLabel;
    struct CGSize _minimumHitSize;
    struct UIEdgeInsets _hitInsets;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isTextManuallySet) _Bool textManuallySet; // @synthesize textManuallySet=_textManuallySet;
@property(readonly, nonatomic) UILabel *floatingLabel; // @synthesize floatingLabel=_floatingLabel;
@property(nonatomic) struct CGSize minimumHitSize; // @synthesize minimumHitSize=_minimumHitSize;
@property(nonatomic) struct UIEdgeInsets hitInsets; // @synthesize hitInsets=_hitInsets;
@property(nonatomic) _Bool validateWhileTyping; // @synthesize validateWhileTyping=_validateWhileTyping;
@property(copy, nonatomic) CDUnknownBlockType validationBlock; // @synthesize validationBlock=_validationBlock;
@property(nonatomic) __weak SDTextField *nextTextField; // @synthesize nextTextField=_nextTextField;
@property(nonatomic) __weak SDTextField *previousTextField; // @synthesize previousTextField=_previousTextField;
@property(retain, nonatomic) UIColor *floatingLabelActiveTextColor; // @synthesize floatingLabelActiveTextColor=_floatingLabelActiveTextColor;
@property(retain, nonatomic) UIColor *floatingLabelInactiveTextColor; // @synthesize floatingLabelInactiveTextColor=_floatingLabelInactiveTextColor;
@property(retain, nonatomic) UIFont *floatingLabelFont; // @synthesize floatingLabelFont=_floatingLabelFont;
@property(retain, nonatomic) NSNumber *floatingLabelYPadding; // @synthesize floatingLabelYPadding=_floatingLabelYPadding;
@property(nonatomic) _Bool disableFloatingLabels; // @synthesize disableFloatingLabels=_disableFloatingLabels;
@property(retain, nonatomic) UIColor *toolbarTintColor; // @synthesize toolbarTintColor=_toolbarTintColor;
@property(nonatomic) _Bool alwaysShowToolbar; // @synthesize alwaysShowToolbar=_alwaysShowToolbar;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)resetTextWithoutValidate;
- (_Bool)validate;
- (_Bool)validateFields;
- (_Bool)internalValidate;
- (void)stripInvalidLabelChar;
- (void)setLabelOriginForTextAlignment;
- (void)setLabelInactiveColor;
- (void)setLabelActiveColor;
- (void)setPlaceholder:(id)arg1;
- (void)updateAccessoryButtons;
- (void)doneEditing:(id)arg1;
- (void)gotoNextTextField:(id)arg1;
- (void)gotoPreviousTextField:(id)arg1;
- (void)selectAdjacentResponder:(id)arg1;
@property(readonly, nonatomic) UIToolbar *accessoryToolbar;
- (void)hideFloatingLabel;
- (void)showFloatingLabel;
- (struct CGRect)clearButtonRectForBounds:(struct CGRect)arg1;
- (_Bool)becomeFirstResponder;
- (void)setFloatingLabelsVisible:(_Bool)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)resignFirstResponderWithoutValidate;
- (void)layoutSubviews;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (void)backspaceKeypressFired;
- (void)insertText:(id)arg1;
- (void)configureView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

