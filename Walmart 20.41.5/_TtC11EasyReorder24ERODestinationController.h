//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

@interface _TtC11EasyReorder24ERODestinationController : UIViewController
{
    // Error parsing type: , name: dataSource
    // Error parsing type: , name: $__lazy_storage_$_heartingDataSource
    // Error parsing type: , name: refreshControl
    // Error parsing type: , name: hud
    // Error parsing type: , name: alert
    // Error parsing type: , name: filterButton
    // Error parsing type: , name: editButton
    // Error parsing type: , name: removeButton
    // Error parsing type: , name: removeItemsLabel
    // Error parsing type: , name: tabGradientView
    // Error parsing type: , name: isInEditMode
    // Error parsing type: , name: isSimilarItemsMode
    // Error parsing type: , name: didRequestItemRemoval
    // Error parsing type: , name: didFinishItemRemoval
    // Error parsing type: , name: autoRefresher
    // Error parsing type: , name: collectionView
    // Error parsing type: , name: noDataView
    // Error parsing type: , name: nextDayEmptyStateView
    // Error parsing type: , name: buyAgainEmptyState
    // Error parsing type: , name: filters
    // Error parsing type: , name: sort
    // Error parsing type: , name: didRequestScrollToTopOfList
    // Error parsing type: , name: sourcePageHint
    // Error parsing type: , name: needToReportPageLoadAnalytics
    // Error parsing type: , name: analytics
    // Error parsing type: , name: $__lazy_storage_$_analyticsClient
    // Error parsing type: , name: reachability
    // Error parsing type: , name: signIn
    // Error parsing type: , name: $__lazy_storage_$_homescreen
    // Error parsing type: , name: needsDataReload
    // Error parsing type: , name: didLoseNetwork
    // Error parsing type: , name: itemsSlatedForDeletion
    // Error parsing type: , name: unavailableItemViewModel
    // Error parsing type: , name: usItemId
    // Error parsing type: , name: voiceOverFocusedIndex
    // Error parsing type: , name: notificationObservers
    // Error parsing type: , name: currentCCM
    // Error parsing type: , name: pluginHelper
    // Error parsing type: , name: customerId
    // Error parsing type: , name: preRotationTopProduct
    // Error parsing type: , name: $__lazy_storage_$_rotationHandler
    // Error parsing type: , name: locationAPI
    // Error parsing type: , name: customerLocation
    // Error parsing type: , name: $__lazy_storage_$_nextDayHeaderController
    // Error parsing type: , name: nextDayButtonAnalytics
    // Error parsing type: , name: ndSessionEnabledProvider
    // Error parsing type: , name: hasDataLoaded
    // Error parsing type: , name: unifiedListsEnabledProvider
    // Error parsing type: , name: buyAgainEditHandler
    // Error parsing type: , name: loadedIndexPaths
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didUpdateCartCount:(id)arg1;
- (void)didChangePreferredContentSize:(id)arg1;
- (void)startShopping;
- (void)reloadDataAfterFailure;
- (void)didSelectFilter:(id)arg1;
- (void)refresh:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)showLogin;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)authenticationStateChangedWithUser:(id)arg1 source:(long long)arg2;
- (void)didSelectRemoveItems;
- (void)didSelectEdit:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;

@end

