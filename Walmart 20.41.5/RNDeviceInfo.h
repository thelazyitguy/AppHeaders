//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <ElectrodeContainer/RCTEventEmitter.h>

#import <ElectrodeContainer/RCTBridgeModule-Protocol.h>

@class NSObject, NSString, RCTBridge;
@protocol OS_dispatch_queue;

@interface RNDeviceInfo : RCTEventEmitter <RCTBridgeModule>
{
    _Bool hasListeners;
    float _lowBatteryThreshold;
}

+ (const struct RCTMethodInfo *)__rct_export__75938;
+ (const struct RCTMethodInfo *)__rct_export__75537;
+ (const struct RCTMethodInfo *)__rct_export__71536;
+ (const struct RCTMethodInfo *)__rct_export__71135;
+ (const struct RCTMethodInfo *)__rct_export__70234;
+ (const struct RCTMethodInfo *)__rct_export__68433;
+ (const struct RCTMethodInfo *)__rct_export__68032;
+ (const struct RCTMethodInfo *)__rct_export__66031;
+ (const struct RCTMethodInfo *)__rct_export__65630;
+ (const struct RCTMethodInfo *)__rct_export__64829;
+ (const struct RCTMethodInfo *)__rct_export__64428;
+ (const struct RCTMethodInfo *)__rct_export__63627;
+ (const struct RCTMethodInfo *)__rct_export__63226;
+ (const struct RCTMethodInfo *)__rct_export__62425;
+ (const struct RCTMethodInfo *)__rct_export__62024;
+ (const struct RCTMethodInfo *)__rct_export__57123;
+ (const struct RCTMethodInfo *)__rct_export__56722;
+ (const struct RCTMethodInfo *)__rct_export__55421;
+ (const struct RCTMethodInfo *)__rct_export__55020;
+ (const struct RCTMethodInfo *)__rct_export__51419;
+ (const struct RCTMethodInfo *)__rct_export__51018;
+ (const struct RCTMethodInfo *)__rct_export__49517;
+ (const struct RCTMethodInfo *)__rct_export__49116;
+ (const struct RCTMethodInfo *)__rct_export__47615;
+ (const struct RCTMethodInfo *)__rct_export__47214;
+ (const struct RCTMethodInfo *)__rct_export__45713;
+ (const struct RCTMethodInfo *)__rct_export__45312;
+ (const struct RCTMethodInfo *)__rct_export__44511;
+ (const struct RCTMethodInfo *)__rct_export__44110;
+ (const struct RCTMethodInfo *)__rct_export__3849;
+ (const struct RCTMethodInfo *)__rct_export__3728;
+ (const struct RCTMethodInfo *)__rct_export__3687;
+ (const struct RCTMethodInfo *)__rct_export__3396;
+ (const struct RCTMethodInfo *)__rct_export__3315;
+ (const struct RCTMethodInfo *)__rct_export__3274;
+ (const struct RCTMethodInfo *)__rct_export__3083;
+ (const struct RCTMethodInfo *)__rct_export__3042;
+ (const struct RCTMethodInfo *)__rct_export__1391;
+ (const struct RCTMethodInfo *)__rct_export__1350;
+ (_Bool)requiresMainQueueSetup;
+ (void)load;
+ (id)moduleName;
@property(nonatomic) float lowBatteryThreshold; // @synthesize lowBatteryThreshold=_lowBatteryThreshold;
- (void)dealloc;
- (void)getAvailableLocationProviders:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getAvailableLocationProvidersSync;
- (id)getAvailableLocationProviders;
- (void)getUserAgent:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getUsedMemorySync;
- (void)getUsedMemory:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (unsigned long long)getUsedMemory;
- (void)isHeadphonesConnected:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)isHeadphonesConnectedSync;
- (_Bool)isHeadphonesConnected;
- (void)isLocationEnabled:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)isLocationEnabledSync;
- (_Bool)isLocationEnabled;
- (void)isBatteryCharging:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)isBatteryChargingSync;
- (_Bool)isBatteryCharging;
- (void)getBatteryLevel:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getBatteryLevelSync;
- (float)getBatteryLevel;
- (void)getPowerState:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getPowerStateSync;
- (id)powerState;
- (void)powerStateDidChange:(id)arg1;
- (void)batteryLevelDidChange:(id)arg1;
- (void)isPinOrFingerprintSet:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)isPinOrFingerprintSetSync;
- (_Bool)isPinOrFingerprintSet;
- (void)getIpAddress:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getIpAddressSync;
- (id)getIpAddress;
- (void)getSupportedAbis:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getSupportedAbisSync;
- (id)getSupportedAbis;
- (id)getDeviceTypeName;
- (void)getFreeDiskStorage:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getFreeDiskStorageSync;
- (double)getFreeDiskStorage;
- (void)getTotalDiskCapacity:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getTotalDiskCapacitySync;
- (double)getTotalDiskCapacity;
- (void)getTotalMemory:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getTotalMemorySync;
- (double)getTotalMemory;
- (void)getFontScale:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getFontScaleSync;
- (float)getFontScale;
- (void)getDeviceToken:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (_Bool)isTablet;
- (void)isEmulator:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)isEmulatorSync;
- (_Bool)isEmulator;
- (id)getDeviceId;
- (void)syncUniqueId:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getUniqueId;
- (id)getBuildIdSync;
- (void)getBuildId:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getBuildId;
- (void)getCarrier:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getCarrierSync;
- (id)getCarrier;
- (id)getModel;
- (id)getDeviceNamesByCode;
- (id)getBuildNumber;
- (id)getAppVersion;
- (id)getBundleId;
- (id)getAppName;
- (void)getDeviceName:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (id)getDeviceNameSync;
- (id)getDeviceName;
- (id)getSystemVersion;
- (id)getSystemName;
- (id)getStorageDictionary;
- (long long)getDeviceType;
- (void)stopObserving;
- (void)startObserving;
- (id)init;
- (id)constantsToExport;
- (id)supportedEvents;

// Remaining properties
@property(readonly, nonatomic) __weak RCTBridge *bridge;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property(readonly) Class superclass;

@end

